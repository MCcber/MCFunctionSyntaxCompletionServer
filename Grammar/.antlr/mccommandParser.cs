//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from e:/C#Projects/AutoComplete/Grammar/mccommand.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class mccommandParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		T__73=74, T__74=75, T__75=76, T__76=77, T__77=78, T__78=79, T__79=80, 
		T__80=81, T__81=82, T__82=83, T__83=84, T__84=85, T__85=86, T__86=87, 
		T__87=88, T__88=89, T__89=90, T__90=91, T__91=92, T__92=93, T__93=94, 
		T__94=95, T__95=96, T__96=97, T__97=98, T__98=99, T__99=100, T__100=101, 
		T__101=102, T__102=103, T__103=104, T__104=105, T__105=106, T__106=107, 
		T__107=108, T__108=109, T__109=110, T__110=111, T__111=112, T__112=113, 
		T__113=114, T__114=115, T__115=116, T__116=117, T__117=118, T__118=119, 
		T__119=120, T__120=121, T__121=122, T__122=123, T__123=124, T__124=125, 
		T__125=126, T__126=127, T__127=128, T__128=129, T__129=130, T__130=131, 
		T__131=132, T__132=133, T__133=134, T__134=135, T__135=136, T__136=137, 
		T__137=138, T__138=139, T__139=140, T__140=141, T__141=142, T__142=143, 
		T__143=144, T__144=145, T__145=146, T__146=147, T__147=148, T__148=149, 
		T__149=150, T__150=151, T__151=152, T__152=153, T__153=154, T__154=155, 
		T__155=156, T__156=157, T__157=158, T__158=159, T__159=160, T__160=161, 
		T__161=162, T__162=163, T__163=164, T__164=165, T__165=166, T__166=167, 
		T__167=168, T__168=169, T__169=170, T__170=171, T__171=172, T__172=173, 
		T__173=174, T__174=175, T__175=176, T__176=177, T__177=178, T__178=179, 
		T__179=180, T__180=181, T__181=182, T__182=183, T__183=184, T__184=185, 
		T__185=186, T__186=187, T__187=188, T__188=189, T__189=190, T__190=191, 
		T__191=192, T__192=193, T__193=194, T__194=195, T__195=196, T__196=197, 
		T__197=198, T__198=199, T__199=200, T__200=201, T__201=202, T__202=203, 
		T__203=204, T__204=205, T__205=206, T__206=207, T__207=208, T__208=209, 
		T__209=210, T__210=211, T__211=212, T__212=213, T__213=214, T__214=215, 
		T__215=216, T__216=217, T__217=218, T__218=219, T__219=220, T__220=221, 
		T__221=222, T__222=223, T__223=224, T__224=225, T__225=226, T__226=227, 
		T__227=228, T__228=229, T__229=230, T__230=231, T__231=232, T__232=233, 
		T__233=234, T__234=235, T__235=236, T__236=237, T__237=238, T__238=239, 
		T__239=240, T__240=241, T__241=242, T__242=243, T__243=244, T__244=245, 
		T__245=246, T__246=247, T__247=248, T__248=249, T__249=250, T__250=251, 
		T__251=252, T__252=253, T__253=254, T__254=255, T__255=256, T__256=257, 
		T__257=258, T__258=259, T__259=260, T__260=261, T__261=262, T__262=263, 
		T__263=264, T__264=265, T__265=266, T__266=267, T__267=268, T__268=269, 
		T__269=270, T__270=271, T__271=272, T__272=273, T__273=274, T__274=275, 
		T__275=276, Any=277, DimensionId=278, MobAttribute=279, Integer=280, IntInterval=281, 
		Number=282, PositiveNumber=283, Int=284, Double=285, PositiveDouble=286, 
		DoubleInterval=287, PositiveDoubleInterval=288, GameTimeValue=289, IdString=290, 
		ScoreboardSlots=291, SoundId=292, EffectId=293, BiomeID=294, Bool=295, 
		StringValue=296, PlayerName=297, StringKey=298, Uuid=299, String=300, 
		ScoreboardObjective=301, ScoreboardType=302, LowerString=303, FilePath=304, 
		NbtPathParameter=305, BlockStateKey=306, BlockStateValue=307, BlockState=308, 
		BlockId=309, EntityId=310, Coordinates=311, GamemodeValues=312, MarkValue=313, 
		NameValue=314, FileReferrerValue=315, PredicateValue=316, OpenSquareBrackets=317, 
		CloseSquareBrackets=318, OpenCurlyBrace=319, CloseCurlyBrace=320, Comma=321, 
		Equal=322, NumberKey=323, PositiveNumberKey=324, PositiveDoubleIntervalKey=325, 
		DoubleIntervalKey=326, IntIntervalKey=327, IntKey=328, JsonKey=329, TagKey=330, 
		TeamKey=331, AdvancementPath=332, NameSpace=333, ScorePath=334, SortValue=335, 
		JsonValue=336, Jkey=337, Jobject=338, Jpair=339, Jarray=340, Jvalue=341, 
		AdvancementParameter=342, AdvancementValue=343, ScoreParameter=344, ScoresValue=345, 
		SelectorParameters=346, Parameter=347, BossbarId=348, EnchantID=349, Axes=350, 
		GameruleName=351, CommandList=352, ItemSlot=353, Gametick=354, TeamName=355;
	public const int
		RULE_dimensionId = 0, RULE_mobAttribute = 1, RULE_int = 2, RULE_intInterval = 3, 
		RULE_number = 4, RULE_positiveNumber = 5, RULE_gameTimeValue = 6, RULE_biomeId = 7, 
		RULE_bool = 8, RULE_jsonValue = 9, RULE_jobject = 10, RULE_stringValue = 11, 
		RULE_stringKey = 12, RULE_jpair = 13, RULE_jarray = 14, RULE_jvalue = 15, 
		RULE_jsonComponent = 16, RULE_uuid = 17, RULE_stringRule = 18, RULE_filePath = 19, 
		RULE_nbtPath = 20, RULE_dataType = 21, RULE_itemId = 22, RULE_blockId = 23, 
		RULE_entityId = 24, RULE_blockNBT = 25, RULE_entityNBT = 26, RULE_targetObjective = 27, 
		RULE_storageId = 28, RULE_storageIdString = 29, RULE_pos3D = 30, RULE_pos2D = 31, 
		RULE_gamemodeValues = 32, RULE_singleSelector = 33, RULE_selector = 34, 
		RULE_optionalSelector = 35, RULE_commands = 36, RULE_advancementRadical = 37, 
		RULE_grantOrRevoke = 38, RULE_advancementCriterion = 39, RULE_advancementValue = 40, 
		RULE_advancementModes = 41, RULE_attributeRadical = 42, RULE_attributeOptions = 43, 
		RULE_baseModifier = 44, RULE_get = 45, RULE_modifierOptions = 46, RULE_modifierModes = 47, 
		RULE_bossbarRadical = 48, RULE_bossbarId = 49, RULE_bossbarIdString = 50, 
		RULE_bossbarOptions = 51, RULE_bossbarStyle = 52, RULE_bossbarColor = 53, 
		RULE_bossbarGetTarget = 54, RULE_bossbarAttributes = 55, RULE_clearRadical = 56, 
		RULE_count = 57, RULE_cloneRadical = 58, RULE_cloneFrom = 59, RULE_cloneTo = 60, 
		RULE_cloneModes = 61, RULE_cloneBehaviors = 62, RULE_damageRadical = 63, 
		RULE_damageType = 64, RULE_from = 65, RULE_damageOptions = 66, RULE_dataRadical = 67, 
		RULE_dataStringStart = 68, RULE_dataStringEnd = 69, RULE_entityNBTPath = 70, 
		RULE_blockNBTPath = 71, RULE_dataOptions = 72, RULE_dataGetTarget = 73, 
		RULE_dataMergeTarget = 74, RULE_dataModifyStringTarget = 75, RULE_dataModifyFromTarget = 76, 
		RULE_dataModifyBehaviors = 77, RULE_dataModifyOptions = 78, RULE_dataModifyTarget = 79, 
		RULE_dataRemoveTarget = 80, RULE_datapackRadical = 81, RULE_datapackState = 82, 
		RULE_datapackId = 83, RULE_datapackBehaviors = 84, RULE_datapackOptions = 85, 
		RULE_debugRadical = 86, RULE_debugOptions = 87, RULE_defaultgamemodeRadical = 88, 
		RULE_difficultyRadical = 89, RULE_difficultyValues = 90, RULE_effectRadical = 91, 
		RULE_effectOption = 92, RULE_effectID = 93, RULE_effectTime = 94, RULE_seconds = 95, 
		RULE_amplifier = 96, RULE_hideParticles = 97, RULE_enchantRadical = 98, 
		RULE_enchantLevel = 99, RULE_enchantID = 100, RULE_executeRadical = 101, 
		RULE_executeEyesOrFeet = 102, RULE_axes = 103, RULE_as = 104, RULE_storage = 105, 
		RULE_executeAllOrMasked = 106, RULE_executeMaxOrValue = 107, RULE_executeJudgeDataOptions = 108, 
		RULE_executeJudgementOptions = 109, RULE_predicateValue = 110, RULE_executeOperations = 111, 
		RULE_executeOn = 112, RULE_executeOver = 113, RULE_executePositioned = 114, 
		RULE_executeStoreTarget = 115, RULE_executeStore = 116, RULE_executeFacing = 117, 
		RULE_executeOptions = 118, RULE_experienceRadical = 119, RULE_query = 120, 
		RULE_experienceAmount = 121, RULE_expreienceType = 122, RULE_experienceOptions = 123, 
		RULE_fillRadical = 124, RULE_fillOptions = 125, RULE_fillbiomeRadical = 126, 
		RULE_fillBiomeOptions = 127, RULE_forceloadRadical = 128, RULE_forceloadRemoveObjectives = 129, 
		RULE_forceloadOptions = 130, RULE_functionRadical = 131, RULE_gamemodeRadical = 132, 
		RULE_gameruleRadical = 133, RULE_gameruleName = 134, RULE_gameruleValue = 135, 
		RULE_giveRadical = 136, RULE_helpRadical = 137, RULE_commandList = 138, 
		RULE_itemRadical = 139, RULE_itemSlot = 140, RULE_itemModifierFile = 141, 
		RULE_itemOptions = 142, RULE_itemBehaviors = 143, RULE_itemModifyTarget = 144, 
		RULE_itemReplaceTarget = 145, RULE_jfrRadical = 146, RULE_jfrStartOrStop = 147, 
		RULE_kickRadical = 148, RULE_reason = 149, RULE_killRadical = 150, RULE_listRadical = 151, 
		RULE_uuids = 152, RULE_locateRadical = 153, RULE_poiId = 154, RULE_structureId = 155, 
		RULE_locateOptions = 156, RULE_lootRadical = 157, RULE_lootFilePath = 158, 
		RULE_lootTool = 159, RULE_block = 160, RULE_lootOptions = 161, RULE_lootReplace = 162, 
		RULE_lootModes = 163, RULE_meRadical = 164, RULE_action = 165, RULE_msgRadical = 166, 
		RULE_message = 167, RULE_particleRadical = 168, RULE_rgb = 169, RULE_size = 170, 
		RULE_particleSpeedAndCount = 171, RULE_gameTick = 172, RULE_particleOptions = 173, 
		RULE_absolutePos = 174, RULE_particleId = 175, RULE_placeRadical = 176, 
		RULE_featureId = 177, RULE_jigsawTarget = 178, RULE_jigsawFilePath = 179, 
		RULE_templateFilePath = 180, RULE_placeModes = 181, RULE_placeMirrorItems = 182, 
		RULE_placeRotationModes = 183, RULE_playsoundRadical = 184, RULE_volume = 185, 
		RULE_pitch = 186, RULE_minVolume = 187, RULE_soundTypes = 188, RULE_publishRadical = 189, 
		RULE_port = 190, RULE_recipeRadical = 191, RULE_recipeFilePath = 192, 
		RULE_recipeGiveOrTake = 193, RULE_reloadRadical = 194, RULE_returnRadical = 195, 
		RULE_rideRadical = 196, RULE_rideModes = 197, RULE_sayRadical = 198, RULE_scheduleRadical = 199, 
		RULE_functionId = 200, RULE_scheduleAppendOrReplace = 201, RULE_scheduleModes = 202, 
		RULE_scoreboardRadical = 203, RULE_scoreboardOptions = 204, RULE_scoreboardObjective = 205, 
		RULE_scoreboardType = 206, RULE_value = 207, RULE_scoreboardHeartsOrInteger = 208, 
		RULE_scoreboardOperator = 209, RULE_scoreboardSlots = 210, RULE_displayname = 211, 
		RULE_rendertype = 212, RULE_scoreboardObjectivesBehaviors = 213, RULE_scoreboardPlayersBehaviors = 214, 
		RULE_seedRadical = 215, RULE_setblockRadical = 216, RULE_setblockModes = 217, 
		RULE_setworldspawnRadical = 218, RULE_spawnpointRadical = 219, RULE_spectateRadical = 220, 
		RULE_spreadplayersRadical = 221, RULE_spreadplayersOptions = 222, RULE_spreadDistance = 223, 
		RULE_maxRange = 224, RULE_respectTeams = 225, RULE_under = 226, RULE_stopsoundRadical = 227, 
		RULE_soundId = 228, RULE_stopsoundTypes = 229, RULE_summonRadical = 230, 
		RULE_tagRadical = 231, RULE_tagOptions = 232, RULE_tagValue = 233, RULE_teamRadical = 234, 
		RULE_teamId = 235, RULE_teamName = 236, RULE_teamCollisionRule = 237, 
		RULE_teamColor = 238, RULE_teamVisibility = 239, RULE_teamOptions = 240, 
		RULE_teamAttributes = 241, RULE_teammsgRadical = 242, RULE_teleportRadical = 243, 
		RULE_teleportEyesOrFeet = 244, RULE_facing = 245, RULE_entity = 246, RULE_teleportOptions = 247, 
		RULE_tellRadical = 248, RULE_tellrawRadical = 249, RULE_timeRadical = 250, 
		RULE_timeDataTypes = 251, RULE_timeTimePoints = 252, RULE_timeOptions = 253, 
		RULE_titleRadical = 254, RULE_titleBehaviors = 255, RULE_fadeIn = 256, 
		RULE_stay = 257, RULE_fadeOut = 258, RULE_tmRadical = 259, RULE_tpRadical = 260, 
		RULE_triggerRadical = 261, RULE_triggerObjective = 262, RULE_triggerBehaviors = 263, 
		RULE_weatherRadical = 264, RULE_weatherMembers = 265, RULE_worldborderRadical = 266, 
		RULE_worldborderOptions = 267, RULE_worldborderWarningTypes = 268, RULE_worldborderModes = 269, 
		RULE_xpRadical = 270;
	public static readonly string[] ruleNames = {
		"dimensionId", "mobAttribute", "int", "intInterval", "number", "positiveNumber", 
		"gameTimeValue", "biomeId", "bool", "jsonValue", "jobject", "stringValue", 
		"stringKey", "jpair", "jarray", "jvalue", "jsonComponent", "uuid", "stringRule", 
		"filePath", "nbtPath", "dataType", "itemId", "blockId", "entityId", "blockNBT", 
		"entityNBT", "targetObjective", "storageId", "storageIdString", "pos3D", 
		"pos2D", "gamemodeValues", "singleSelector", "selector", "optionalSelector", 
		"commands", "advancementRadical", "grantOrRevoke", "advancementCriterion", 
		"advancementValue", "advancementModes", "attributeRadical", "attributeOptions", 
		"baseModifier", "get", "modifierOptions", "modifierModes", "bossbarRadical", 
		"bossbarId", "bossbarIdString", "bossbarOptions", "bossbarStyle", "bossbarColor", 
		"bossbarGetTarget", "bossbarAttributes", "clearRadical", "count", "cloneRadical", 
		"cloneFrom", "cloneTo", "cloneModes", "cloneBehaviors", "damageRadical", 
		"damageType", "from", "damageOptions", "dataRadical", "dataStringStart", 
		"dataStringEnd", "entityNBTPath", "blockNBTPath", "dataOptions", "dataGetTarget", 
		"dataMergeTarget", "dataModifyStringTarget", "dataModifyFromTarget", "dataModifyBehaviors", 
		"dataModifyOptions", "dataModifyTarget", "dataRemoveTarget", "datapackRadical", 
		"datapackState", "datapackId", "datapackBehaviors", "datapackOptions", 
		"debugRadical", "debugOptions", "defaultgamemodeRadical", "difficultyRadical", 
		"difficultyValues", "effectRadical", "effectOption", "effectID", "effectTime", 
		"seconds", "amplifier", "hideParticles", "enchantRadical", "enchantLevel", 
		"enchantID", "executeRadical", "executeEyesOrFeet", "axes", "as", "storage", 
		"executeAllOrMasked", "executeMaxOrValue", "executeJudgeDataOptions", 
		"executeJudgementOptions", "predicateValue", "executeOperations", "executeOn", 
		"executeOver", "executePositioned", "executeStoreTarget", "executeStore", 
		"executeFacing", "executeOptions", "experienceRadical", "query", "experienceAmount", 
		"expreienceType", "experienceOptions", "fillRadical", "fillOptions", "fillbiomeRadical", 
		"fillBiomeOptions", "forceloadRadical", "forceloadRemoveObjectives", "forceloadOptions", 
		"functionRadical", "gamemodeRadical", "gameruleRadical", "gameruleName", 
		"gameruleValue", "giveRadical", "helpRadical", "commandList", "itemRadical", 
		"itemSlot", "itemModifierFile", "itemOptions", "itemBehaviors", "itemModifyTarget", 
		"itemReplaceTarget", "jfrRadical", "jfrStartOrStop", "kickRadical", "reason", 
		"killRadical", "listRadical", "uuids", "locateRadical", "poiId", "structureId", 
		"locateOptions", "lootRadical", "lootFilePath", "lootTool", "block", "lootOptions", 
		"lootReplace", "lootModes", "meRadical", "action", "msgRadical", "message", 
		"particleRadical", "rgb", "size", "particleSpeedAndCount", "gameTick", 
		"particleOptions", "absolutePos", "particleId", "placeRadical", "featureId", 
		"jigsawTarget", "jigsawFilePath", "templateFilePath", "placeModes", "placeMirrorItems", 
		"placeRotationModes", "playsoundRadical", "volume", "pitch", "minVolume", 
		"soundTypes", "publishRadical", "port", "recipeRadical", "recipeFilePath", 
		"recipeGiveOrTake", "reloadRadical", "returnRadical", "rideRadical", "rideModes", 
		"sayRadical", "scheduleRadical", "functionId", "scheduleAppendOrReplace", 
		"scheduleModes", "scoreboardRadical", "scoreboardOptions", "scoreboardObjective", 
		"scoreboardType", "value", "scoreboardHeartsOrInteger", "scoreboardOperator", 
		"scoreboardSlots", "displayname", "rendertype", "scoreboardObjectivesBehaviors", 
		"scoreboardPlayersBehaviors", "seedRadical", "setblockRadical", "setblockModes", 
		"setworldspawnRadical", "spawnpointRadical", "spectateRadical", "spreadplayersRadical", 
		"spreadplayersOptions", "spreadDistance", "maxRange", "respectTeams", 
		"under", "stopsoundRadical", "soundId", "stopsoundTypes", "summonRadical", 
		"tagRadical", "tagOptions", "tagValue", "teamRadical", "teamId", "teamName", 
		"teamCollisionRule", "teamColor", "teamVisibility", "teamOptions", "teamAttributes", 
		"teammsgRadical", "teleportRadical", "teleportEyesOrFeet", "facing", "entity", 
		"teleportOptions", "tellRadical", "tellrawRadical", "timeRadical", "timeDataTypes", 
		"timeTimePoints", "timeOptions", "titleRadical", "titleBehaviors", "fadeIn", 
		"stay", "fadeOut", "tmRadical", "tpRadical", "triggerRadical", "triggerObjective", 
		"triggerBehaviors", "weatherRadical", "weatherMembers", "worldborderRadical", 
		"worldborderOptions", "worldborderWarningTypes", "worldborderModes", "xpRadical"
	};

	private static readonly string[] _LiteralNames = {
		null, "'..'", "':'", "'.'", "'byte'", "'double'", "'float'", "'int'", 
		"'long'", "'short'", "'minecraft:'", "'survival'", "'creative'", "'adventure'", 
		"'spectator'", "'@a'", "'@a['", "' '", "'@a[]'", "'@e'", "'@e['", "'@e[]'", 
		"'@p'", "'@p['", "'@p[]'", "'@r'", "'@r['", "'@r[]'", "'@s'", "'@s['", 
		"'@s[]'", "'advancement'", "'grant'", "'revoke'", "'everything'", "'only'", 
		"'from'", "'through'", "'until'", "'attribute'", "'base'", "'get'", "'modifier'", 
		"'set'", "'add'", "'remove'", "'value'", "'multiply'", "'multiply_base'", 
		"'bossbar'", "'list'", "'max'", "'players'", "'visible'", "'color'", "'name'", 
		"'style'", "'clear'", "'clone'", "'to'", "'filtered'", "'masked'", "'replace'", 
		"'force'", "'move'", "'normal'", "'damage'", "'at'", "'by'", "'data'", 
		"'merge'", "'modify'", "'block'", "'entity'", "'storage'", "'string'", 
		"'append'", "'insert'", "'prepend'", "'datapack'", "'available'", "'enable'", 
		"'after'", "'before'", "'first'", "'last'", "'disable'", "'debug'", "'function'", 
		"'start'", "'stop'", "'defaultgamemode'", "'difficulty'", "'easy'", "'hard'", 
		"'peaceful'", "'effect'", "'give'", "'infinite'", "'enchant'", "'execute'", 
		"'eyes'", "'feet'", "'as'", "'all'", "'biome'", "'blocks'", "'dimension'", 
		"'loaded'", "'predicate'", "'score'", "'<'", "'<='", "'>='", "'matches'", 
		"'attacker'", "'controller'", "'leasher'", "'origin'", "'owner'", "'passengers'", 
		"'target'", "'vehicle'", "'motion_blocking'", "'motion_blocking_no_leaves'", 
		"'ocean_floor'", "'world_surface'", "'over'", "'result'", "'success'", 
		"'align'", "'anchored'", "'facing'", "'if'", "'unless'", "'in'", "'on'", 
		"'positioned'", "'rotated'", "'run'", "'store'", "'summon'", "'experience'", 
		"'query'", "'levels'", "'points'", "'fill'", "'destroy'", "'hollow'", 
		"'keep'", "'outline'", "'fillbiome'", "'forceload'", "'gamemode'", "'gamerule'", 
		"'help'", "'item'", "'with'", "'jfr'", "'kick'", "'kill'", "'uuids'", 
		"'locate'", "'poi'", "'structure'", "'loot'", "'mainhand'", "'offhand'", 
		"'spawn'", "'fish'", "'mine'", "'me'", "'msg'", "'particle'", "'place'", 
		"'feature'", "'jigsaw'", "'template'", "'front_back'", "'left_right'", 
		"'none'", "'180'", "'clockwise_90'", "'counterclockwise_90'", "'playsound'", 
		"'ambient'", "'hostile'", "'master'", "'music'", "'neutral'", "'player'", 
		"'record'", "'voice'", "'weather'", "'publish'", "'recipe'", "'take'", 
		"'reload'", "'return'", "'ride'", "'dismount'", "'mount'", "'say'", "'schedule'", 
		"'scoreboard'", "'objectives'", "'hearts'", "'integer'", "'%='", "'*='", 
		"'+='", "'-='", "'/='", "'>'", "'><'", "'displayname'", "'rendertype'", 
		"'setdisplay'", "'operation'", "'reset'", "'seed'", "'setblock'", "'setworldspawn'", 
		"'spawnpoint'", "'spectate'", "'spreadplayers'", "'true'", "'false'", 
		"'under'", "'stopsound'", "'*'", "'tag'", "'team'", "'always'", "'never'", 
		"'pushOtherTeams'", "'pushOwnTeam'", "'hideForOtherTeams'", "'hideForOwnTeam'", 
		"'empty'", "'join'", "'leave'", "'collisionRule'", "'deathMessageVisibility'", 
		"'displayName'", "'friendlyFire'", "'nametagVisibility'", "'prefix'", 
		"'suffix'", "'seeFriendlyInvisibles'", "'teammsg'", "'teleport'", "'tell'", 
		"'tellraw'", "'time'", "'day'", "'daytime'", "'gametime'", "'midnight'", 
		"'night'", "'noon'", "'title'", "'actionbar'", "'subtitle'", "'times'", 
		"'tm'", "'tp'", "'trigger'", "'rain'", "'thunder'", "'worldborder'", "'center'", 
		"'warning'", "'distance'", "'amount'", "'buffer'", "'xp'", null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "'['", "']'", "'{'", "'}'", "','", "'='"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "Any", "DimensionId", "MobAttribute", "Integer", "IntInterval", 
		"Number", "PositiveNumber", "Int", "Double", "PositiveDouble", "DoubleInterval", 
		"PositiveDoubleInterval", "GameTimeValue", "IdString", "ScoreboardSlots", 
		"SoundId", "EffectId", "BiomeID", "Bool", "StringValue", "PlayerName", 
		"StringKey", "Uuid", "String", "ScoreboardObjective", "ScoreboardType", 
		"LowerString", "FilePath", "NbtPathParameter", "BlockStateKey", "BlockStateValue", 
		"BlockState", "BlockId", "EntityId", "Coordinates", "GamemodeValues", 
		"MarkValue", "NameValue", "FileReferrerValue", "PredicateValue", "OpenSquareBrackets", 
		"CloseSquareBrackets", "OpenCurlyBrace", "CloseCurlyBrace", "Comma", "Equal", 
		"NumberKey", "PositiveNumberKey", "PositiveDoubleIntervalKey", "DoubleIntervalKey", 
		"IntIntervalKey", "IntKey", "JsonKey", "TagKey", "TeamKey", "AdvancementPath", 
		"NameSpace", "ScorePath", "SortValue", "JsonValue", "Jkey", "Jobject", 
		"Jpair", "Jarray", "Jvalue", "AdvancementParameter", "AdvancementValue", 
		"ScoreParameter", "ScoresValue", "SelectorParameters", "Parameter", "BossbarId", 
		"EnchantID", "Axes", "GameruleName", "CommandList", "ItemSlot", "Gametick", 
		"TeamName"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "mccommand.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static mccommandParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}

		public mccommandParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public mccommandParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class DimensionIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode DimensionId() { return GetToken(mccommandParser.DimensionId, 0); }
		public DimensionIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dimensionId; } }
	}

	[RuleVersion(0)]
	public DimensionIdContext dimensionId() {
		DimensionIdContext _localctx = new DimensionIdContext(Context, State);
		EnterRule(_localctx, 0, RULE_dimensionId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 542;
			Match(DimensionId);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MobAttributeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode MobAttribute() { return GetToken(mccommandParser.MobAttribute, 0); }
		public MobAttributeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_mobAttribute; } }
	}

	[RuleVersion(0)]
	public MobAttributeContext mobAttribute() {
		MobAttributeContext _localctx = new MobAttributeContext(Context, State);
		EnterRule(_localctx, 2, RULE_mobAttribute);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 544;
			Match(MobAttribute);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IntContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public IntContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_int; } }
	}

	[RuleVersion(0)]
	public IntContext @int() {
		IntContext _localctx = new IntContext(Context, State);
		EnterRule(_localctx, 4, RULE_int);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 546;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IntIntervalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Integer() { return GetTokens(mccommandParser.Integer); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer(int i) {
			return GetToken(mccommandParser.Integer, i);
		}
		public IntIntervalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_intInterval; } }
	}

	[RuleVersion(0)]
	public IntIntervalContext intInterval() {
		IntIntervalContext _localctx = new IntIntervalContext(Context, State);
		EnterRule(_localctx, 6, RULE_intInterval);
		try {
			State = 555;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,0,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 548;
				Match(Integer);
				State = 549;
				Match(T__0);
				}
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 550;
				Match(T__0);
				State = 551;
				Match(Integer);
				}
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 552;
				Match(Integer);
				State = 553;
				Match(T__0);
				State = 554;
				Match(Integer);
				}
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class NumberContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		public NumberContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_number; } }
	}

	[RuleVersion(0)]
	public NumberContext number() {
		NumberContext _localctx = new NumberContext(Context, State);
		EnterRule(_localctx, 8, RULE_number);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 557;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PositiveNumberContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode PositiveNumber() { return GetToken(mccommandParser.PositiveNumber, 0); }
		public PositiveNumberContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_positiveNumber; } }
	}

	[RuleVersion(0)]
	public PositiveNumberContext positiveNumber() {
		PositiveNumberContext _localctx = new PositiveNumberContext(Context, State);
		EnterRule(_localctx, 10, RULE_positiveNumber);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 559;
			Match(PositiveNumber);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GameTimeValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode GameTimeValue() { return GetToken(mccommandParser.GameTimeValue, 0); }
		public GameTimeValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gameTimeValue; } }
	}

	[RuleVersion(0)]
	public GameTimeValueContext gameTimeValue() {
		GameTimeValueContext _localctx = new GameTimeValueContext(Context, State);
		EnterRule(_localctx, 12, RULE_gameTimeValue);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 561;
			Match(GameTimeValue);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BiomeIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode BiomeID() { return GetToken(mccommandParser.BiomeID, 0); }
		public BiomeIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_biomeId; } }
	}

	[RuleVersion(0)]
	public BiomeIdContext biomeId() {
		BiomeIdContext _localctx = new BiomeIdContext(Context, State);
		EnterRule(_localctx, 14, RULE_biomeId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 563;
			Match(BiomeID);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BoolContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(mccommandParser.Bool, 0); }
		public BoolContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bool; } }
	}

	[RuleVersion(0)]
	public BoolContext @bool() {
		BoolContext _localctx = new BoolContext(Context, State);
		EnterRule(_localctx, 16, RULE_bool);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 565;
			Match(Bool);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JsonValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public JobjectContext jobject() {
			return GetRuleContext<JobjectContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JarrayContext jarray() {
			return GetRuleContext<JarrayContext>(0);
		}
		public JsonValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jsonValue; } }
	}

	[RuleVersion(0)]
	public JsonValueContext jsonValue() {
		JsonValueContext _localctx = new JsonValueContext(Context, State);
		EnterRule(_localctx, 18, RULE_jsonValue);
		try {
			State = 569;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case OpenCurlyBrace:
				EnterOuterAlt(_localctx, 1);
				{
				State = 567;
				jobject();
				}
				break;
			case OpenSquareBrackets:
				EnterOuterAlt(_localctx, 2);
				{
				State = 568;
				jarray();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JobjectContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode OpenCurlyBrace() { return GetToken(mccommandParser.OpenCurlyBrace, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public JpairContext[] jpair() {
			return GetRuleContexts<JpairContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public JpairContext jpair(int i) {
			return GetRuleContext<JpairContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CloseCurlyBrace() { return GetToken(mccommandParser.CloseCurlyBrace, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Comma() { return GetTokens(mccommandParser.Comma); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Comma(int i) {
			return GetToken(mccommandParser.Comma, i);
		}
		public JobjectContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jobject; } }
	}

	[RuleVersion(0)]
	public JobjectContext jobject() {
		JobjectContext _localctx = new JobjectContext(Context, State);
		EnterRule(_localctx, 20, RULE_jobject);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 571;
			Match(OpenCurlyBrace);
			State = 572;
			jpair();
			State = 577;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==Comma) {
				{
				{
				State = 573;
				Match(Comma);
				State = 574;
				jpair();
				}
				}
				State = 579;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			State = 580;
			Match(CloseCurlyBrace);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StringValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode StringValue() { return GetToken(mccommandParser.StringValue, 0); }
		public StringValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_stringValue; } }
	}

	[RuleVersion(0)]
	public StringValueContext stringValue() {
		StringValueContext _localctx = new StringValueContext(Context, State);
		EnterRule(_localctx, 22, RULE_stringValue);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 582;
			Match(StringValue);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StringKeyContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode StringKey() { return GetToken(mccommandParser.StringKey, 0); }
		public StringKeyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_stringKey; } }
	}

	[RuleVersion(0)]
	public StringKeyContext stringKey() {
		StringKeyContext _localctx = new StringKeyContext(Context, State);
		EnterRule(_localctx, 24, RULE_stringKey);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 584;
			Match(StringKey);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JpairContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public StringKeyContext stringKey() {
			return GetRuleContext<StringKeyContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JvalueContext jvalue() {
			return GetRuleContext<JvalueContext>(0);
		}
		public JpairContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jpair; } }
	}

	[RuleVersion(0)]
	public JpairContext jpair() {
		JpairContext _localctx = new JpairContext(Context, State);
		EnterRule(_localctx, 26, RULE_jpair);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 586;
			stringKey();
			State = 587;
			Match(T__1);
			State = 588;
			jvalue();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JarrayContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode OpenSquareBrackets() { return GetToken(mccommandParser.OpenSquareBrackets, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CloseSquareBrackets() { return GetToken(mccommandParser.CloseSquareBrackets, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public JvalueContext[] jvalue() {
			return GetRuleContexts<JvalueContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public JvalueContext jvalue(int i) {
			return GetRuleContext<JvalueContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Comma() { return GetTokens(mccommandParser.Comma); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Comma(int i) {
			return GetToken(mccommandParser.Comma, i);
		}
		public JarrayContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jarray; } }
	}

	[RuleVersion(0)]
	public JarrayContext jarray() {
		JarrayContext _localctx = new JarrayContext(Context, State);
		EnterRule(_localctx, 28, RULE_jarray);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 590;
			Match(OpenSquareBrackets);
			{
			State = 591;
			jvalue();
			State = 596;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==Comma) {
				{
				{
				State = 592;
				Match(Comma);
				State = 593;
				jvalue();
				}
				}
				State = 598;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			}
			State = 599;
			Match(CloseSquareBrackets);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JvalueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public StringValueContext stringValue() {
			return GetRuleContext<StringValueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JobjectContext jobject() {
			return GetRuleContext<JobjectContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JarrayContext jarray() {
			return GetRuleContext<JarrayContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BoolContext @bool() {
			return GetRuleContext<BoolContext>(0);
		}
		public JvalueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jvalue; } }
	}

	[RuleVersion(0)]
	public JvalueContext jvalue() {
		JvalueContext _localctx = new JvalueContext(Context, State);
		EnterRule(_localctx, 30, RULE_jvalue);
		try {
			State = 606;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case StringValue:
				EnterOuterAlt(_localctx, 1);
				{
				State = 601;
				stringValue();
				}
				break;
			case Number:
				EnterOuterAlt(_localctx, 2);
				{
				State = 602;
				number();
				}
				break;
			case OpenCurlyBrace:
				EnterOuterAlt(_localctx, 3);
				{
				State = 603;
				jobject();
				}
				break;
			case OpenSquareBrackets:
				EnterOuterAlt(_localctx, 4);
				{
				State = 604;
				jarray();
				}
				break;
			case Bool:
				EnterOuterAlt(_localctx, 5);
				{
				State = 605;
				@bool();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JsonComponentContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode JsonValue() { return GetToken(mccommandParser.JsonValue, 0); }
		public JsonComponentContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jsonComponent; } }
	}

	[RuleVersion(0)]
	public JsonComponentContext jsonComponent() {
		JsonComponentContext _localctx = new JsonComponentContext(Context, State);
		EnterRule(_localctx, 32, RULE_jsonComponent);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 608;
			Match(JsonValue);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class UuidContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Uuid() { return GetToken(mccommandParser.Uuid, 0); }
		public UuidContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_uuid; } }
	}

	[RuleVersion(0)]
	public UuidContext uuid() {
		UuidContext _localctx = new UuidContext(Context, State);
		EnterRule(_localctx, 34, RULE_uuid);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 610;
			Match(Uuid);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StringRuleContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode String() { return GetToken(mccommandParser.String, 0); }
		public StringRuleContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_stringRule; } }
	}

	[RuleVersion(0)]
	public StringRuleContext stringRule() {
		StringRuleContext _localctx = new StringRuleContext(Context, State);
		EnterRule(_localctx, 36, RULE_stringRule);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 612;
			Match(String);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FilePathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public FilePathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_filePath; } }
	}

	[RuleVersion(0)]
	public FilePathContext filePath() {
		FilePathContext _localctx = new FilePathContext(Context, State);
		EnterRule(_localctx, 38, RULE_filePath);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 614;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class NbtPathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] NbtPathParameter() { return GetTokens(mccommandParser.NbtPathParameter); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode NbtPathParameter(int i) {
			return GetToken(mccommandParser.NbtPathParameter, i);
		}
		public NbtPathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_nbtPath; } }
	}

	[RuleVersion(0)]
	public NbtPathContext nbtPath() {
		NbtPathContext _localctx = new NbtPathContext(Context, State);
		EnterRule(_localctx, 40, RULE_nbtPath);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 616;
			Match(NbtPathParameter);
			State = 621;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,5,Context);
			while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1+1 ) {
					{
					{
					State = 617;
					Match(T__2);
					State = 618;
					Match(NbtPathParameter);
					}
					} 
				}
				State = 623;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,5,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataTypeContext : ParserRuleContext {
		public DataTypeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataType; } }
	}

	[RuleVersion(0)]
	public DataTypeContext dataType() {
		DataTypeContext _localctx = new DataTypeContext(Context, State);
		EnterRule(_localctx, 42, RULE_dataType);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 624;
			_la = TokenStream.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & 1008L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public ItemIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemId; } }
	}

	[RuleVersion(0)]
	public ItemIdContext itemId() {
		ItemIdContext _localctx = new ItemIdContext(Context, State);
		EnterRule(_localctx, 44, RULE_itemId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 626;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BlockIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode BlockId() { return GetToken(mccommandParser.BlockId, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public BlockIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_blockId; } }
	}

	[RuleVersion(0)]
	public BlockIdContext blockId() {
		BlockIdContext _localctx = new BlockIdContext(Context, State);
		EnterRule(_localctx, 46, RULE_blockId);
		try {
			State = 631;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__9:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 628;
				Match(T__9);
				State = 629;
				Match(BlockId);
				}
				}
				break;
			case IdString:
				EnterOuterAlt(_localctx, 2);
				{
				State = 630;
				Match(IdString);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EntityIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode EntityId() { return GetToken(mccommandParser.EntityId, 0); }
		public EntityIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_entityId; } }
	}

	[RuleVersion(0)]
	public EntityIdContext entityId() {
		EntityIdContext _localctx = new EntityIdContext(Context, State);
		EnterRule(_localctx, 48, RULE_entityId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 633;
			Match(EntityId);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BlockNBTContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode JsonValue() { return GetToken(mccommandParser.JsonValue, 0); }
		public BlockNBTContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_blockNBT; } }
	}

	[RuleVersion(0)]
	public BlockNBTContext blockNBT() {
		BlockNBTContext _localctx = new BlockNBTContext(Context, State);
		EnterRule(_localctx, 50, RULE_blockNBT);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 635;
			Match(JsonValue);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EntityNBTContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public JsonValueContext jsonValue() {
			return GetRuleContext<JsonValueContext>(0);
		}
		public EntityNBTContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_entityNBT; } }
	}

	[RuleVersion(0)]
	public EntityNBTContext entityNBT() {
		EntityNBTContext _localctx = new EntityNBTContext(Context, State);
		EnterRule(_localctx, 52, RULE_entityNBT);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 637;
			jsonValue();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TargetObjectiveContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public TargetObjectiveContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_targetObjective; } }
	}

	[RuleVersion(0)]
	public TargetObjectiveContext targetObjective() {
		TargetObjectiveContext _localctx = new TargetObjectiveContext(Context, State);
		EnterRule(_localctx, 54, RULE_targetObjective);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 639;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StorageIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public StorageIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_storageId; } }
	}

	[RuleVersion(0)]
	public StorageIdContext storageId() {
		StorageIdContext _localctx = new StorageIdContext(Context, State);
		EnterRule(_localctx, 56, RULE_storageId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 641;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StorageIdStringContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public StorageIdStringContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_storageIdString; } }
	}

	[RuleVersion(0)]
	public StorageIdStringContext storageIdString() {
		StorageIdStringContext _localctx = new StorageIdStringContext(Context, State);
		EnterRule(_localctx, 58, RULE_storageIdString);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 643;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pos3DContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Coordinates() { return GetTokens(mccommandParser.Coordinates); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Coordinates(int i) {
			return GetToken(mccommandParser.Coordinates, i);
		}
		public Pos3DContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pos3D; } }
	}

	[RuleVersion(0)]
	public Pos3DContext pos3D() {
		Pos3DContext _localctx = new Pos3DContext(Context, State);
		EnterRule(_localctx, 60, RULE_pos3D);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 645;
			Match(Coordinates);
			State = 646;
			Match(Coordinates);
			State = 647;
			Match(Coordinates);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pos2DContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Coordinates() { return GetTokens(mccommandParser.Coordinates); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Coordinates(int i) {
			return GetToken(mccommandParser.Coordinates, i);
		}
		public Pos2DContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pos2D; } }
	}

	[RuleVersion(0)]
	public Pos2DContext pos2D() {
		Pos2DContext _localctx = new Pos2DContext(Context, State);
		EnterRule(_localctx, 62, RULE_pos2D);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 649;
			Match(Coordinates);
			State = 650;
			Match(Coordinates);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GamemodeValuesContext : ParserRuleContext {
		public GamemodeValuesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gamemodeValues; } }
	}

	[RuleVersion(0)]
	public GamemodeValuesContext gamemodeValues() {
		GamemodeValuesContext _localctx = new GamemodeValuesContext(Context, State);
		EnterRule(_localctx, 64, RULE_gamemodeValues);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 652;
			_la = TokenStream.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & 30720L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SingleSelectorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode PlayerName() { return GetToken(mccommandParser.PlayerName, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode SelectorParameters() { return GetToken(mccommandParser.SelectorParameters, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CloseSquareBrackets() { return GetToken(mccommandParser.CloseSquareBrackets, 0); }
		public SingleSelectorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_singleSelector; } }
	}

	[RuleVersion(0)]
	public SingleSelectorContext singleSelector() {
		SingleSelectorContext _localctx = new SingleSelectorContext(Context, State);
		EnterRule(_localctx, 66, RULE_singleSelector);
		int _la;
		try {
			int _alt;
			State = 720;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case PlayerName:
				EnterOuterAlt(_localctx, 1);
				{
				State = 654;
				Match(PlayerName);
				}
				break;
			case T__14:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 655;
				Match(T__14);
				State = 657;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 656;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__15:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 659;
				Match(T__15);
				State = 663;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,8,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 660;
						Match(T__16);
						}
						} 
					}
					State = 665;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,8,Context);
				}
				State = 666;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__17:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 667;
				Match(T__17);
				}
				}
				break;
			case T__18:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 668;
				Match(T__18);
				State = 670;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 669;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__19:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 672;
				Match(T__19);
				State = 676;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,10,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 673;
						Match(T__16);
						}
						} 
					}
					State = 678;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,10,Context);
				}
				State = 679;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__20:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 680;
				Match(T__20);
				}
				}
				break;
			case T__21:
				EnterOuterAlt(_localctx, 8);
				{
				{
				State = 681;
				Match(T__21);
				State = 683;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 682;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__22:
				EnterOuterAlt(_localctx, 9);
				{
				{
				State = 685;
				Match(T__22);
				State = 689;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,12,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 686;
						Match(T__16);
						}
						} 
					}
					State = 691;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,12,Context);
				}
				State = 692;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__23:
				EnterOuterAlt(_localctx, 10);
				{
				{
				State = 693;
				Match(T__23);
				}
				}
				break;
			case T__24:
				EnterOuterAlt(_localctx, 11);
				{
				{
				State = 694;
				Match(T__24);
				State = 696;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 695;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__25:
				EnterOuterAlt(_localctx, 12);
				{
				{
				State = 698;
				Match(T__25);
				State = 702;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,14,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 699;
						Match(T__16);
						}
						} 
					}
					State = 704;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,14,Context);
				}
				State = 705;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__26:
				EnterOuterAlt(_localctx, 13);
				{
				{
				State = 706;
				Match(T__26);
				}
				}
				break;
			case T__27:
				EnterOuterAlt(_localctx, 14);
				{
				{
				State = 707;
				Match(T__27);
				State = 709;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 708;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__28:
				EnterOuterAlt(_localctx, 15);
				{
				{
				State = 711;
				Match(T__28);
				State = 715;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,16,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 712;
						Match(T__16);
						}
						} 
					}
					State = 717;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,16,Context);
				}
				State = 718;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__29:
				EnterOuterAlt(_localctx, 16);
				{
				{
				State = 719;
				Match(T__29);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SelectorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode PlayerName() { return GetToken(mccommandParser.PlayerName, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode SelectorParameters() { return GetToken(mccommandParser.SelectorParameters, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CloseSquareBrackets() { return GetToken(mccommandParser.CloseSquareBrackets, 0); }
		public SelectorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_selector; } }
	}

	[RuleVersion(0)]
	public SelectorContext selector() {
		SelectorContext _localctx = new SelectorContext(Context, State);
		EnterRule(_localctx, 68, RULE_selector);
		int _la;
		try {
			int _alt;
			State = 783;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case PlayerName:
				EnterOuterAlt(_localctx, 1);
				{
				State = 722;
				Match(PlayerName);
				}
				break;
			case T__14:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 723;
				Match(T__14);
				State = 725;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 724;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__15:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 727;
				Match(T__15);
				State = 731;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,19,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 728;
						Match(T__16);
						}
						} 
					}
					State = 733;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,19,Context);
				}
				State = 734;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__18:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 735;
				Match(T__18);
				State = 737;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 736;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__19:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 739;
				Match(T__19);
				State = 743;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,21,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 740;
						Match(T__16);
						}
						} 
					}
					State = 745;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,21,Context);
				}
				State = 746;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__21:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 747;
				Match(T__21);
				State = 749;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 748;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__22:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 751;
				Match(T__22);
				State = 755;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,23,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 752;
						Match(T__16);
						}
						} 
					}
					State = 757;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,23,Context);
				}
				State = 758;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__24:
				EnterOuterAlt(_localctx, 8);
				{
				{
				State = 759;
				Match(T__24);
				State = 761;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 760;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__25:
				EnterOuterAlt(_localctx, 9);
				{
				{
				State = 763;
				Match(T__25);
				State = 767;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,25,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 764;
						Match(T__16);
						}
						} 
					}
					State = 769;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,25,Context);
				}
				State = 770;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__27:
				EnterOuterAlt(_localctx, 10);
				{
				{
				State = 771;
				Match(T__27);
				State = 773;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 772;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__28:
				EnterOuterAlt(_localctx, 11);
				{
				{
				State = 775;
				Match(T__28);
				State = 779;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,27,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 776;
						Match(T__16);
						}
						} 
					}
					State = 781;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,27,Context);
				}
				State = 782;
				Match(CloseSquareBrackets);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class OptionalSelectorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode PlayerName() { return GetToken(mccommandParser.PlayerName, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode SelectorParameters() { return GetToken(mccommandParser.SelectorParameters, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CloseSquareBrackets() { return GetToken(mccommandParser.CloseSquareBrackets, 0); }
		public OptionalSelectorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_optionalSelector; } }
	}

	[RuleVersion(0)]
	public OptionalSelectorContext optionalSelector() {
		OptionalSelectorContext _localctx = new OptionalSelectorContext(Context, State);
		EnterRule(_localctx, 70, RULE_optionalSelector);
		int _la;
		try {
			int _alt;
			State = 851;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case PlayerName:
				EnterOuterAlt(_localctx, 1);
				{
				State = 785;
				Match(PlayerName);
				}
				break;
			case T__14:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 786;
				Match(T__14);
				State = 788;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 787;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__15:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 790;
				Match(T__15);
				State = 794;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,30,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 791;
						Match(T__16);
						}
						} 
					}
					State = 796;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,30,Context);
				}
				State = 797;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__17:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 798;
				Match(T__17);
				}
				}
				break;
			case T__18:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 799;
				Match(T__18);
				State = 801;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 800;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__19:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 803;
				Match(T__19);
				State = 807;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,32,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 804;
						Match(T__16);
						}
						} 
					}
					State = 809;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,32,Context);
				}
				State = 810;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__20:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 811;
				Match(T__20);
				}
				}
				break;
			case T__21:
				EnterOuterAlt(_localctx, 8);
				{
				{
				State = 812;
				Match(T__21);
				State = 814;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 813;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__22:
				EnterOuterAlt(_localctx, 9);
				{
				{
				State = 816;
				Match(T__22);
				State = 820;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,34,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 817;
						Match(T__16);
						}
						} 
					}
					State = 822;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,34,Context);
				}
				State = 823;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__23:
				EnterOuterAlt(_localctx, 10);
				{
				{
				State = 824;
				Match(T__23);
				}
				}
				break;
			case T__24:
				EnterOuterAlt(_localctx, 11);
				{
				{
				State = 825;
				Match(T__24);
				State = 827;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 826;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__25:
				EnterOuterAlt(_localctx, 12);
				{
				{
				State = 829;
				Match(T__25);
				State = 833;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,36,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 830;
						Match(T__16);
						}
						} 
					}
					State = 835;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,36,Context);
				}
				State = 836;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__26:
				EnterOuterAlt(_localctx, 13);
				{
				{
				State = 837;
				Match(T__26);
				}
				}
				break;
			case T__27:
				EnterOuterAlt(_localctx, 14);
				{
				{
				State = 838;
				Match(T__27);
				State = 840;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==SelectorParameters) {
					{
					State = 839;
					Match(SelectorParameters);
					}
				}

				}
				}
				break;
			case T__28:
				EnterOuterAlt(_localctx, 15);
				{
				{
				State = 842;
				Match(T__28);
				State = 846;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,38,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 843;
						Match(T__16);
						}
						} 
					}
					State = 848;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,38,Context);
				}
				State = 849;
				Match(CloseSquareBrackets);
				}
				}
				break;
			case T__29:
				EnterOuterAlt(_localctx, 16);
				{
				{
				State = 850;
				Match(T__29);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CommandsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AdvancementRadicalContext advancementRadical() {
			return GetRuleContext<AdvancementRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AttributeRadicalContext attributeRadical() {
			return GetRuleContext<AttributeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BossbarRadicalContext bossbarRadical() {
			return GetRuleContext<BossbarRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ClearRadicalContext clearRadical() {
			return GetRuleContext<ClearRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CloneRadicalContext cloneRadical() {
			return GetRuleContext<CloneRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DamageRadicalContext damageRadical() {
			return GetRuleContext<DamageRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataRadicalContext dataRadical() {
			return GetRuleContext<DataRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DatapackRadicalContext datapackRadical() {
			return GetRuleContext<DatapackRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DebugRadicalContext debugRadical() {
			return GetRuleContext<DebugRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DefaultgamemodeRadicalContext defaultgamemodeRadical() {
			return GetRuleContext<DefaultgamemodeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DifficultyRadicalContext difficultyRadical() {
			return GetRuleContext<DifficultyRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EffectRadicalContext effectRadical() {
			return GetRuleContext<EffectRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EnchantRadicalContext enchantRadical() {
			return GetRuleContext<EnchantRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteRadicalContext executeRadical() {
			return GetRuleContext<ExecuteRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExperienceRadicalContext experienceRadical() {
			return GetRuleContext<ExperienceRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FillRadicalContext fillRadical() {
			return GetRuleContext<FillRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FillbiomeRadicalContext fillbiomeRadical() {
			return GetRuleContext<FillbiomeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ForceloadRadicalContext forceloadRadical() {
			return GetRuleContext<ForceloadRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FunctionRadicalContext functionRadical() {
			return GetRuleContext<FunctionRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GamemodeRadicalContext gamemodeRadical() {
			return GetRuleContext<GamemodeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GameruleRadicalContext gameruleRadical() {
			return GetRuleContext<GameruleRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GiveRadicalContext giveRadical() {
			return GetRuleContext<GiveRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HelpRadicalContext helpRadical() {
			return GetRuleContext<HelpRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemRadicalContext itemRadical() {
			return GetRuleContext<ItemRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JfrRadicalContext jfrRadical() {
			return GetRuleContext<JfrRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public KickRadicalContext kickRadical() {
			return GetRuleContext<KickRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public KillRadicalContext killRadical() {
			return GetRuleContext<KillRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ListRadicalContext listRadical() {
			return GetRuleContext<ListRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LocateRadicalContext locateRadical() {
			return GetRuleContext<LocateRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LootRadicalContext lootRadical() {
			return GetRuleContext<LootRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MeRadicalContext meRadical() {
			return GetRuleContext<MeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MsgRadicalContext msgRadical() {
			return GetRuleContext<MsgRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ParticleRadicalContext particleRadical() {
			return GetRuleContext<ParticleRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PlaceRadicalContext placeRadical() {
			return GetRuleContext<PlaceRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PlaysoundRadicalContext playsoundRadical() {
			return GetRuleContext<PlaysoundRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PublishRadicalContext publishRadical() {
			return GetRuleContext<PublishRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RecipeRadicalContext recipeRadical() {
			return GetRuleContext<RecipeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ReloadRadicalContext reloadRadical() {
			return GetRuleContext<ReloadRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ReturnRadicalContext returnRadical() {
			return GetRuleContext<ReturnRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RideRadicalContext rideRadical() {
			return GetRuleContext<RideRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SayRadicalContext sayRadical() {
			return GetRuleContext<SayRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScheduleRadicalContext scheduleRadical() {
			return GetRuleContext<ScheduleRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardRadicalContext scoreboardRadical() {
			return GetRuleContext<ScoreboardRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SeedRadicalContext seedRadical() {
			return GetRuleContext<SeedRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SetblockRadicalContext setblockRadical() {
			return GetRuleContext<SetblockRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SetworldspawnRadicalContext setworldspawnRadical() {
			return GetRuleContext<SetworldspawnRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SpawnpointRadicalContext spawnpointRadical() {
			return GetRuleContext<SpawnpointRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SpectateRadicalContext spectateRadical() {
			return GetRuleContext<SpectateRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SpreadplayersRadicalContext spreadplayersRadical() {
			return GetRuleContext<SpreadplayersRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StopsoundRadicalContext stopsoundRadical() {
			return GetRuleContext<StopsoundRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SummonRadicalContext summonRadical() {
			return GetRuleContext<SummonRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TagRadicalContext tagRadical() {
			return GetRuleContext<TagRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeamRadicalContext teamRadical() {
			return GetRuleContext<TeamRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeammsgRadicalContext teammsgRadical() {
			return GetRuleContext<TeammsgRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeleportRadicalContext teleportRadical() {
			return GetRuleContext<TeleportRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TellRadicalContext tellRadical() {
			return GetRuleContext<TellRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TellrawRadicalContext tellrawRadical() {
			return GetRuleContext<TellrawRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TimeRadicalContext timeRadical() {
			return GetRuleContext<TimeRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TitleRadicalContext titleRadical() {
			return GetRuleContext<TitleRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TmRadicalContext tmRadical() {
			return GetRuleContext<TmRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TpRadicalContext tpRadical() {
			return GetRuleContext<TpRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TriggerRadicalContext triggerRadical() {
			return GetRuleContext<TriggerRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public WeatherRadicalContext weatherRadical() {
			return GetRuleContext<WeatherRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public WorldborderRadicalContext worldborderRadical() {
			return GetRuleContext<WorldborderRadicalContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public XpRadicalContext xpRadical() {
			return GetRuleContext<XpRadicalContext>(0);
		}
		public CommandsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_commands; } }
	}

	[RuleVersion(0)]
	public CommandsContext commands() {
		CommandsContext _localctx = new CommandsContext(Context, State);
		EnterRule(_localctx, 72, RULE_commands);
		try {
			State = 918;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__30:
				EnterOuterAlt(_localctx, 1);
				{
				State = 853;
				advancementRadical();
				}
				break;
			case T__38:
				EnterOuterAlt(_localctx, 2);
				{
				State = 854;
				attributeRadical();
				}
				break;
			case T__48:
				EnterOuterAlt(_localctx, 3);
				{
				State = 855;
				bossbarRadical();
				}
				break;
			case T__56:
				EnterOuterAlt(_localctx, 4);
				{
				State = 856;
				clearRadical();
				}
				break;
			case T__57:
				EnterOuterAlt(_localctx, 5);
				{
				State = 857;
				cloneRadical();
				}
				break;
			case T__65:
				EnterOuterAlt(_localctx, 6);
				{
				State = 858;
				damageRadical();
				}
				break;
			case T__68:
				EnterOuterAlt(_localctx, 7);
				{
				State = 859;
				dataRadical();
				}
				break;
			case T__78:
				EnterOuterAlt(_localctx, 8);
				{
				State = 860;
				datapackRadical();
				}
				break;
			case T__86:
				EnterOuterAlt(_localctx, 9);
				{
				State = 861;
				debugRadical();
				}
				break;
			case T__90:
				EnterOuterAlt(_localctx, 10);
				{
				State = 862;
				defaultgamemodeRadical();
				}
				break;
			case T__91:
				EnterOuterAlt(_localctx, 11);
				{
				State = 863;
				difficultyRadical();
				}
				break;
			case T__95:
				EnterOuterAlt(_localctx, 12);
				{
				State = 864;
				effectRadical();
				}
				break;
			case T__98:
				EnterOuterAlt(_localctx, 13);
				{
				State = 865;
				enchantRadical();
				}
				break;
			case T__99:
				EnterOuterAlt(_localctx, 14);
				{
				State = 866;
				executeRadical();
				}
				break;
			case T__141:
				EnterOuterAlt(_localctx, 15);
				{
				State = 867;
				experienceRadical();
				}
				break;
			case T__145:
				EnterOuterAlt(_localctx, 16);
				{
				State = 868;
				fillRadical();
				}
				break;
			case T__150:
				EnterOuterAlt(_localctx, 17);
				{
				State = 869;
				fillbiomeRadical();
				}
				break;
			case T__151:
				EnterOuterAlt(_localctx, 18);
				{
				State = 870;
				forceloadRadical();
				}
				break;
			case T__87:
				EnterOuterAlt(_localctx, 19);
				{
				State = 871;
				functionRadical();
				}
				break;
			case T__152:
				EnterOuterAlt(_localctx, 20);
				{
				State = 872;
				gamemodeRadical();
				}
				break;
			case T__153:
				EnterOuterAlt(_localctx, 21);
				{
				State = 873;
				gameruleRadical();
				}
				break;
			case T__96:
				EnterOuterAlt(_localctx, 22);
				{
				State = 874;
				giveRadical();
				}
				break;
			case T__154:
				EnterOuterAlt(_localctx, 23);
				{
				State = 875;
				helpRadical();
				}
				break;
			case T__155:
				EnterOuterAlt(_localctx, 24);
				{
				State = 876;
				itemRadical();
				}
				break;
			case T__157:
				EnterOuterAlt(_localctx, 25);
				{
				State = 877;
				jfrRadical();
				}
				break;
			case T__158:
				EnterOuterAlt(_localctx, 26);
				{
				State = 878;
				kickRadical();
				}
				break;
			case T__159:
				EnterOuterAlt(_localctx, 27);
				{
				State = 879;
				killRadical();
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 28);
				{
				State = 880;
				listRadical();
				}
				break;
			case T__161:
				EnterOuterAlt(_localctx, 29);
				{
				State = 881;
				locateRadical();
				}
				break;
			case T__164:
				EnterOuterAlt(_localctx, 30);
				{
				State = 882;
				lootRadical();
				}
				break;
			case T__170:
				EnterOuterAlt(_localctx, 31);
				{
				State = 883;
				meRadical();
				}
				break;
			case T__171:
				EnterOuterAlt(_localctx, 32);
				{
				State = 884;
				msgRadical();
				}
				break;
			case T__172:
				EnterOuterAlt(_localctx, 33);
				{
				State = 885;
				particleRadical();
				}
				break;
			case T__173:
				EnterOuterAlt(_localctx, 34);
				{
				State = 886;
				placeRadical();
				}
				break;
			case T__183:
				EnterOuterAlt(_localctx, 35);
				{
				State = 887;
				playsoundRadical();
				}
				break;
			case T__193:
				EnterOuterAlt(_localctx, 36);
				{
				State = 888;
				publishRadical();
				}
				break;
			case T__194:
				EnterOuterAlt(_localctx, 37);
				{
				State = 889;
				recipeRadical();
				}
				break;
			case T__196:
				EnterOuterAlt(_localctx, 38);
				{
				State = 890;
				reloadRadical();
				}
				break;
			case T__197:
				EnterOuterAlt(_localctx, 39);
				{
				State = 891;
				returnRadical();
				}
				break;
			case T__198:
				EnterOuterAlt(_localctx, 40);
				{
				State = 892;
				rideRadical();
				}
				break;
			case T__201:
				EnterOuterAlt(_localctx, 41);
				{
				State = 893;
				sayRadical();
				}
				break;
			case T__202:
				EnterOuterAlt(_localctx, 42);
				{
				State = 894;
				scheduleRadical();
				}
				break;
			case T__203:
				EnterOuterAlt(_localctx, 43);
				{
				State = 895;
				scoreboardRadical();
				}
				break;
			case T__219:
				EnterOuterAlt(_localctx, 44);
				{
				State = 896;
				seedRadical();
				}
				break;
			case T__220:
				EnterOuterAlt(_localctx, 45);
				{
				State = 897;
				setblockRadical();
				}
				break;
			case T__221:
				EnterOuterAlt(_localctx, 46);
				{
				State = 898;
				setworldspawnRadical();
				}
				break;
			case T__222:
				EnterOuterAlt(_localctx, 47);
				{
				State = 899;
				spawnpointRadical();
				}
				break;
			case T__223:
				EnterOuterAlt(_localctx, 48);
				{
				State = 900;
				spectateRadical();
				}
				break;
			case T__224:
				EnterOuterAlt(_localctx, 49);
				{
				State = 901;
				spreadplayersRadical();
				}
				break;
			case T__228:
				EnterOuterAlt(_localctx, 50);
				{
				State = 902;
				stopsoundRadical();
				}
				break;
			case T__140:
				EnterOuterAlt(_localctx, 51);
				{
				State = 903;
				summonRadical();
				}
				break;
			case T__230:
				EnterOuterAlt(_localctx, 52);
				{
				State = 904;
				tagRadical();
				}
				break;
			case T__231:
				EnterOuterAlt(_localctx, 53);
				{
				State = 905;
				teamRadical();
				}
				break;
			case T__249:
				EnterOuterAlt(_localctx, 54);
				{
				State = 906;
				teammsgRadical();
				}
				break;
			case T__250:
				EnterOuterAlt(_localctx, 55);
				{
				State = 907;
				teleportRadical();
				}
				break;
			case T__251:
				EnterOuterAlt(_localctx, 56);
				{
				State = 908;
				tellRadical();
				}
				break;
			case T__252:
				EnterOuterAlt(_localctx, 57);
				{
				State = 909;
				tellrawRadical();
				}
				break;
			case T__253:
				EnterOuterAlt(_localctx, 58);
				{
				State = 910;
				timeRadical();
				}
				break;
			case T__260:
				EnterOuterAlt(_localctx, 59);
				{
				State = 911;
				titleRadical();
				}
				break;
			case T__264:
				EnterOuterAlt(_localctx, 60);
				{
				State = 912;
				tmRadical();
				}
				break;
			case T__265:
				EnterOuterAlt(_localctx, 61);
				{
				State = 913;
				tpRadical();
				}
				break;
			case T__266:
				EnterOuterAlt(_localctx, 62);
				{
				State = 914;
				triggerRadical();
				}
				break;
			case T__192:
				EnterOuterAlt(_localctx, 63);
				{
				State = 915;
				weatherRadical();
				}
				break;
			case T__269:
				EnterOuterAlt(_localctx, 64);
				{
				State = 916;
				worldborderRadical();
				}
				break;
			case T__275:
				EnterOuterAlt(_localctx, 65);
				{
				State = 917;
				xpRadical();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AdvancementRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public GrantOrRevokeContext grantOrRevoke() {
			return GetRuleContext<GrantOrRevokeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AdvancementModesContext advancementModes() {
			return GetRuleContext<AdvancementModesContext>(0);
		}
		public AdvancementRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_advancementRadical; } }
	}

	[RuleVersion(0)]
	public AdvancementRadicalContext advancementRadical() {
		AdvancementRadicalContext _localctx = new AdvancementRadicalContext(Context, State);
		EnterRule(_localctx, 74, RULE_advancementRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 920;
			Match(T__30);
			State = 921;
			grantOrRevoke();
			State = 922;
			selector();
			State = 923;
			advancementModes();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GrantOrRevokeContext : ParserRuleContext {
		public GrantOrRevokeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_grantOrRevoke; } }
	}

	[RuleVersion(0)]
	public GrantOrRevokeContext grantOrRevoke() {
		GrantOrRevokeContext _localctx = new GrantOrRevokeContext(Context, State);
		EnterRule(_localctx, 76, RULE_grantOrRevoke);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 925;
			_la = TokenStream.LA(1);
			if ( !(_la==T__31 || _la==T__32) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AdvancementCriterionContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public AdvancementCriterionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_advancementCriterion; } }
	}

	[RuleVersion(0)]
	public AdvancementCriterionContext advancementCriterion() {
		AdvancementCriterionContext _localctx = new AdvancementCriterionContext(Context, State);
		EnterRule(_localctx, 78, RULE_advancementCriterion);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 927;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AdvancementValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public AdvancementValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_advancementValue; } }
	}

	[RuleVersion(0)]
	public AdvancementValueContext advancementValue() {
		AdvancementValueContext _localctx = new AdvancementValueContext(Context, State);
		EnterRule(_localctx, 80, RULE_advancementValue);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 929;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AdvancementModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AdvancementValueContext advancementValue() {
			return GetRuleContext<AdvancementValueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AdvancementCriterionContext advancementCriterion() {
			return GetRuleContext<AdvancementCriterionContext>(0);
		}
		public AdvancementModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_advancementModes; } }
	}

	[RuleVersion(0)]
	public AdvancementModesContext advancementModes() {
		AdvancementModesContext _localctx = new AdvancementModesContext(Context, State);
		EnterRule(_localctx, 82, RULE_advancementModes);
		try {
			State = 944;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__33:
			case T__34:
				EnterOuterAlt(_localctx, 1);
				{
				State = 936;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__33:
					{
					State = 931;
					Match(T__33);
					}
					break;
				case T__34:
					{
					{
					State = 932;
					Match(T__34);
					State = 933;
					advancementValue();
					State = 934;
					advancementCriterion();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case T__35:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 938;
				Match(T__35);
				State = 939;
				advancementValue();
				}
				}
				break;
			case T__36:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 940;
				Match(T__36);
				State = 941;
				advancementValue();
				}
				}
				break;
			case T__37:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 942;
				Match(T__37);
				State = 943;
				advancementValue();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MobAttributeContext mobAttribute() {
			return GetRuleContext<MobAttributeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AttributeOptionsContext attributeOptions() {
			return GetRuleContext<AttributeOptionsContext>(0);
		}
		public AttributeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributeRadical; } }
	}

	[RuleVersion(0)]
	public AttributeRadicalContext attributeRadical() {
		AttributeRadicalContext _localctx = new AttributeRadicalContext(Context, State);
		EnterRule(_localctx, 84, RULE_attributeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 946;
			Match(T__38);
			State = 947;
			selector();
			State = 948;
			mobAttribute();
			State = 949;
			attributeOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributeOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BaseModifierContext baseModifier() {
			return GetRuleContext<BaseModifierContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ModifierOptionsContext modifierOptions() {
			return GetRuleContext<ModifierOptionsContext>(0);
		}
		public AttributeOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributeOptions; } }
	}

	[RuleVersion(0)]
	public AttributeOptionsContext attributeOptions() {
		AttributeOptionsContext _localctx = new AttributeOptionsContext(Context, State);
		EnterRule(_localctx, 86, RULE_attributeOptions);
		try {
			State = 959;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__39:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 951;
				Match(T__39);
				State = 952;
				baseModifier();
				State = 953;
				number();
				}
				}
				break;
			case T__40:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 955;
				Match(T__40);
				State = 956;
				number();
				}
				}
				break;
			case T__41:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 957;
				Match(T__41);
				State = 958;
				modifierOptions();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BaseModifierContext : ParserRuleContext {
		public BaseModifierContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_baseModifier; } }
	}

	[RuleVersion(0)]
	public BaseModifierContext baseModifier() {
		BaseModifierContext _localctx = new BaseModifierContext(Context, State);
		EnterRule(_localctx, 88, RULE_baseModifier);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 961;
			_la = TokenStream.LA(1);
			if ( !(_la==T__40 || _la==T__42) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GetContext : ParserRuleContext {
		public GetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_get; } }
	}

	[RuleVersion(0)]
	public GetContext get() {
		GetContext _localctx = new GetContext(Context, State);
		EnterRule(_localctx, 90, RULE_get);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 963;
			Match(T__40);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ModifierOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public UuidContext uuid() {
			return GetRuleContext<UuidContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StringRuleContext stringRule() {
			return GetRuleContext<StringRuleContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ModifierModesContext modifierModes() {
			return GetRuleContext<ModifierModesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GetContext get() {
			return GetRuleContext<GetContext>(0);
		}
		public ModifierOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_modifierOptions; } }
	}

	[RuleVersion(0)]
	public ModifierOptionsContext modifierOptions() {
		ModifierOptionsContext _localctx = new ModifierOptionsContext(Context, State);
		EnterRule(_localctx, 92, RULE_modifierOptions);
		try {
			State = 980;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 965;
				Match(T__43);
				State = 966;
				uuid();
				State = 967;
				Match(T__16);
				State = 968;
				stringRule();
				State = 969;
				Match(T__16);
				State = 970;
				number();
				State = 971;
				modifierModes();
				}
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 973;
				Match(T__44);
				State = 974;
				uuid();
				}
				}
				break;
			case T__45:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 975;
				Match(T__45);
				State = 976;
				get();
				State = 977;
				uuid();
				State = 978;
				number();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ModifierModesContext : ParserRuleContext {
		public ModifierModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_modifierModes; } }
	}

	[RuleVersion(0)]
	public ModifierModesContext modifierModes() {
		ModifierModesContext _localctx = new ModifierModesContext(Context, State);
		EnterRule(_localctx, 94, RULE_modifierModes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 982;
			_la = TokenStream.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & 439804651110400L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BossbarOptionsContext bossbarOptions() {
			return GetRuleContext<BossbarOptionsContext>(0);
		}
		public BossbarRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarRadical; } }
	}

	[RuleVersion(0)]
	public BossbarRadicalContext bossbarRadical() {
		BossbarRadicalContext _localctx = new BossbarRadicalContext(Context, State);
		EnterRule(_localctx, 96, RULE_bossbarRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 984;
			Match(T__48);
			State = 985;
			bossbarOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode BossbarId() { return GetToken(mccommandParser.BossbarId, 0); }
		public BossbarIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarId; } }
	}

	[RuleVersion(0)]
	public BossbarIdContext bossbarId() {
		BossbarIdContext _localctx = new BossbarIdContext(Context, State);
		EnterRule(_localctx, 98, RULE_bossbarId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 987;
			Match(BossbarId);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarIdStringContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode BossbarId() { return GetToken(mccommandParser.BossbarId, 0); }
		public BossbarIdStringContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarIdString; } }
	}

	[RuleVersion(0)]
	public BossbarIdStringContext bossbarIdString() {
		BossbarIdStringContext _localctx = new BossbarIdStringContext(Context, State);
		EnterRule(_localctx, 100, RULE_bossbarIdString);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 989;
			Match(BossbarId);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BossbarIdStringContext bossbarIdString() {
			return GetRuleContext<BossbarIdStringContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BossbarIdContext bossbarId() {
			return GetRuleContext<BossbarIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BossbarGetTargetContext bossbarGetTarget() {
			return GetRuleContext<BossbarGetTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BossbarAttributesContext bossbarAttributes() {
			return GetRuleContext<BossbarAttributesContext>(0);
		}
		public BossbarOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarOptions; } }
	}

	[RuleVersion(0)]
	public BossbarOptionsContext bossbarOptions() {
		BossbarOptionsContext _localctx = new BossbarOptionsContext(Context, State);
		EnterRule(_localctx, 102, RULE_bossbarOptions);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1006;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				{
				{
				State = 991;
				Match(T__43);
				State = 992;
				bossbarIdString();
				State = 993;
				jsonComponent();
				}
				}
				break;
			case T__40:
				{
				{
				State = 995;
				Match(T__40);
				State = 996;
				bossbarId();
				State = 997;
				bossbarGetTarget();
				}
				}
				break;
			case T__49:
				{
				State = 999;
				Match(T__49);
				}
				break;
			case T__44:
				{
				{
				State = 1000;
				Match(T__44);
				State = 1001;
				bossbarId();
				}
				}
				break;
			case T__42:
				{
				{
				State = 1002;
				Match(T__42);
				State = 1003;
				bossbarId();
				State = 1004;
				bossbarAttributes();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarStyleContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public BossbarStyleContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarStyle; } }
	}

	[RuleVersion(0)]
	public BossbarStyleContext bossbarStyle() {
		BossbarStyleContext _localctx = new BossbarStyleContext(Context, State);
		EnterRule(_localctx, 104, RULE_bossbarStyle);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1008;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarColorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public BossbarColorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarColor; } }
	}

	[RuleVersion(0)]
	public BossbarColorContext bossbarColor() {
		BossbarColorContext _localctx = new BossbarColorContext(Context, State);
		EnterRule(_localctx, 106, RULE_bossbarColor);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1010;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarGetTargetContext : ParserRuleContext {
		public BossbarGetTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarGetTarget; } }
	}

	[RuleVersion(0)]
	public BossbarGetTargetContext bossbarGetTarget() {
		BossbarGetTargetContext _localctx = new BossbarGetTargetContext(Context, State);
		EnterRule(_localctx, 108, RULE_bossbarGetTarget);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1012;
			_la = TokenStream.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & 15832967439974400L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BossbarAttributesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BossbarColorContext bossbarColor() {
			return GetRuleContext<BossbarColorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BossbarStyleContext bossbarStyle() {
			return GetRuleContext<BossbarStyleContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BoolContext @bool() {
			return GetRuleContext<BoolContext>(0);
		}
		public BossbarAttributesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bossbarAttributes; } }
	}

	[RuleVersion(0)]
	public BossbarAttributesContext bossbarAttributes() {
		BossbarAttributesContext _localctx = new BossbarAttributesContext(Context, State);
		EnterRule(_localctx, 110, RULE_bossbarAttributes);
		try {
			State = 1028;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__53:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1014;
				Match(T__53);
				State = 1015;
				bossbarColor();
				}
				}
				break;
			case T__50:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1016;
				Match(T__50);
				State = 1017;
				@int();
				}
				}
				break;
			case T__54:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1018;
				Match(T__54);
				State = 1019;
				jsonComponent();
				}
				}
				break;
			case T__51:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1020;
				Match(T__51);
				State = 1021;
				selector();
				}
				}
				break;
			case T__55:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 1022;
				Match(T__55);
				State = 1023;
				bossbarStyle();
				}
				}
				break;
			case T__45:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 1024;
				Match(T__45);
				State = 1025;
				@int();
				}
				}
				break;
			case T__52:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 1026;
				Match(T__52);
				State = 1027;
				@bool();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ClearRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public OptionalSelectorContext optionalSelector() {
			return GetRuleContext<OptionalSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemIdContext itemId() {
			return GetRuleContext<ItemIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CountContext count() {
			return GetRuleContext<CountContext>(0);
		}
		public ClearRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_clearRadical; } }
	}

	[RuleVersion(0)]
	public ClearRadicalContext clearRadical() {
		ClearRadicalContext _localctx = new ClearRadicalContext(Context, State);
		EnterRule(_localctx, 112, RULE_clearRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1030;
			Match(T__56);
			State = 1031;
			optionalSelector();
			State = 1032;
			itemId();
			State = 1033;
			count();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public CountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_count; } }
	}

	[RuleVersion(0)]
	public CountContext count() {
		CountContext _localctx = new CountContext(Context, State);
		EnterRule(_localctx, 114, RULE_count);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1035;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CloneRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CloneFromContext cloneFrom() {
			return GetRuleContext<CloneFromContext>(0);
		}
		public CloneRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cloneRadical; } }
	}

	[RuleVersion(0)]
	public CloneRadicalContext cloneRadical() {
		CloneRadicalContext _localctx = new CloneRadicalContext(Context, State);
		EnterRule(_localctx, 116, RULE_cloneRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1037;
			Match(T__57);
			State = 1038;
			cloneFrom();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CloneFromContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DimensionIdContext dimensionId() {
			return GetRuleContext<DimensionIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext[] pos3D() {
			return GetRuleContexts<Pos3DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D(int i) {
			return GetRuleContext<Pos3DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CloneToContext cloneTo() {
			return GetRuleContext<CloneToContext>(0);
		}
		public CloneFromContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cloneFrom; } }
	}

	[RuleVersion(0)]
	public CloneFromContext cloneFrom() {
		CloneFromContext _localctx = new CloneFromContext(Context, State);
		EnterRule(_localctx, 118, RULE_cloneFrom);
		try {
			State = 1050;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__35:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1040;
				Match(T__35);
				State = 1041;
				dimensionId();
				State = 1042;
				pos3D();
				State = 1043;
				pos3D();
				State = 1044;
				cloneTo();
				}
				}
				break;
			case Coordinates:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1046;
				pos3D();
				State = 1047;
				pos3D();
				State = 1048;
				cloneTo();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CloneToContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DimensionIdContext dimensionId() {
			return GetRuleContext<DimensionIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CloneModesContext cloneModes() {
			return GetRuleContext<CloneModesContext>(0);
		}
		public CloneToContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cloneTo; } }
	}

	[RuleVersion(0)]
	public CloneToContext cloneTo() {
		CloneToContext _localctx = new CloneToContext(Context, State);
		EnterRule(_localctx, 120, RULE_cloneTo);
		try {
			State = 1060;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__58:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1052;
				Match(T__58);
				State = 1053;
				dimensionId();
				State = 1054;
				pos3D();
				State = 1055;
				cloneModes();
				}
				}
				break;
			case Coordinates:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1057;
				pos3D();
				State = 1058;
				cloneModes();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CloneModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BlockIdContext blockId() {
			return GetRuleContext<BlockIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CloneBehaviorsContext cloneBehaviors() {
			return GetRuleContext<CloneBehaviorsContext>(0);
		}
		public CloneModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cloneModes; } }
	}

	[RuleVersion(0)]
	public CloneModesContext cloneModes() {
		CloneModesContext _localctx = new CloneModesContext(Context, State);
		EnterRule(_localctx, 122, RULE_cloneModes);
		int _la;
		try {
			State = 1068;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__59:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1062;
				Match(T__59);
				State = 1063;
				blockId();
				State = 1064;
				cloneBehaviors();
				}
				}
				break;
			case T__60:
			case T__61:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1066;
				_la = TokenStream.LA(1);
				if ( !(_la==T__60 || _la==T__61) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 1067;
				cloneBehaviors();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CloneBehaviorsContext : ParserRuleContext {
		public CloneBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cloneBehaviors; } }
	}

	[RuleVersion(0)]
	public CloneBehaviorsContext cloneBehaviors() {
		CloneBehaviorsContext _localctx = new CloneBehaviorsContext(Context, State);
		EnterRule(_localctx, 124, RULE_cloneBehaviors);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1070;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 63)) & ~0x3f) == 0 && ((1L << (_la - 63)) & 7L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DamageRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DamageTypeContext damageType() {
			return GetRuleContext<DamageTypeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DamageOptionsContext damageOptions() {
			return GetRuleContext<DamageOptionsContext>(0);
		}
		public DamageRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_damageRadical; } }
	}

	[RuleVersion(0)]
	public DamageRadicalContext damageRadical() {
		DamageRadicalContext _localctx = new DamageRadicalContext(Context, State);
		EnterRule(_localctx, 126, RULE_damageRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1072;
			Match(T__65);
			State = 1073;
			singleSelector();
			State = 1074;
			number();
			State = 1075;
			Match(T__16);
			State = 1076;
			damageType();
			State = 1077;
			damageOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DamageTypeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public DamageTypeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_damageType; } }
	}

	[RuleVersion(0)]
	public DamageTypeContext damageType() {
		DamageTypeContext _localctx = new DamageTypeContext(Context, State);
		EnterRule(_localctx, 128, RULE_damageType);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1079;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FromContext : ParserRuleContext {
		public FromContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_from; } }
	}

	[RuleVersion(0)]
	public FromContext from() {
		FromContext _localctx = new FromContext(Context, State);
		EnterRule(_localctx, 130, RULE_from);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1081;
			Match(T__35);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DamageOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext[] singleSelector() {
			return GetRuleContexts<SingleSelectorContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector(int i) {
			return GetRuleContext<SingleSelectorContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FromContext from() {
			return GetRuleContext<FromContext>(0);
		}
		public DamageOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_damageOptions; } }
	}

	[RuleVersion(0)]
	public DamageOptionsContext damageOptions() {
		DamageOptionsContext _localctx = new DamageOptionsContext(Context, State);
		EnterRule(_localctx, 132, RULE_damageOptions);
		try {
			State = 1090;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__66:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1083;
				Match(T__66);
				State = 1084;
				pos3D();
				}
				}
				break;
			case T__67:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1085;
				Match(T__67);
				State = 1086;
				singleSelector();
				State = 1087;
				from();
				State = 1088;
				singleSelector();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DataOptionsContext dataOptions() {
			return GetRuleContext<DataOptionsContext>(0);
		}
		public DataRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataRadical; } }
	}

	[RuleVersion(0)]
	public DataRadicalContext dataRadical() {
		DataRadicalContext _localctx = new DataRadicalContext(Context, State);
		EnterRule(_localctx, 134, RULE_dataRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1092;
			Match(T__68);
			State = 1093;
			dataOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataStringStartContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public DataStringStartContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataStringStart; } }
	}

	[RuleVersion(0)]
	public DataStringStartContext dataStringStart() {
		DataStringStartContext _localctx = new DataStringStartContext(Context, State);
		EnterRule(_localctx, 136, RULE_dataStringStart);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1095;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataStringEndContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public DataStringEndContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataStringEnd; } }
	}

	[RuleVersion(0)]
	public DataStringEndContext dataStringEnd() {
		DataStringEndContext _localctx = new DataStringEndContext(Context, State);
		EnterRule(_localctx, 138, RULE_dataStringEnd);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1097;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EntityNBTPathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] NbtPathParameter() { return GetTokens(mccommandParser.NbtPathParameter); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode NbtPathParameter(int i) {
			return GetToken(mccommandParser.NbtPathParameter, i);
		}
		public EntityNBTPathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_entityNBTPath; } }
	}

	[RuleVersion(0)]
	public EntityNBTPathContext entityNBTPath() {
		EntityNBTPathContext _localctx = new EntityNBTPathContext(Context, State);
		EnterRule(_localctx, 140, RULE_entityNBTPath);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 1099;
			Match(NbtPathParameter);
			State = 1104;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,51,Context);
			while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1+1 ) {
					{
					{
					State = 1100;
					Match(T__2);
					State = 1101;
					Match(NbtPathParameter);
					}
					} 
				}
				State = 1106;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,51,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BlockNBTPathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] NbtPathParameter() { return GetTokens(mccommandParser.NbtPathParameter); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode NbtPathParameter(int i) {
			return GetToken(mccommandParser.NbtPathParameter, i);
		}
		public BlockNBTPathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_blockNBTPath; } }
	}

	[RuleVersion(0)]
	public BlockNBTPathContext blockNBTPath() {
		BlockNBTPathContext _localctx = new BlockNBTPathContext(Context, State);
		EnterRule(_localctx, 142, RULE_blockNBTPath);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 1107;
			Match(NbtPathParameter);
			State = 1112;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,52,Context);
			while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1+1 ) {
					{
					{
					State = 1108;
					Match(T__2);
					State = 1109;
					Match(NbtPathParameter);
					}
					} 
				}
				State = 1114;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,52,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DataGetTargetContext dataGetTarget() {
			return GetRuleContext<DataGetTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataMergeTargetContext dataMergeTarget() {
			return GetRuleContext<DataMergeTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataModifyTargetContext dataModifyTarget() {
			return GetRuleContext<DataModifyTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataRemoveTargetContext dataRemoveTarget() {
			return GetRuleContext<DataRemoveTargetContext>(0);
		}
		public DataOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataOptions; } }
	}

	[RuleVersion(0)]
	public DataOptionsContext dataOptions() {
		DataOptionsContext _localctx = new DataOptionsContext(Context, State);
		EnterRule(_localctx, 144, RULE_dataOptions);
		try {
			State = 1123;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__40:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1115;
				Match(T__40);
				State = 1116;
				dataGetTarget();
				}
				}
				break;
			case T__69:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1117;
				Match(T__69);
				State = 1118;
				dataMergeTarget();
				}
				}
				break;
			case T__70:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1119;
				Match(T__70);
				State = 1120;
				dataModifyTarget();
				}
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1121;
				Match(T__44);
				State = 1122;
				dataRemoveTarget();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataGetTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockNBTPathContext blockNBTPath() {
			return GetRuleContext<BlockNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityNBTPathContext entityNBTPath() {
			return GetRuleContext<EntityNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdStringContext storageIdString() {
			return GetRuleContext<StorageIdStringContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		public DataGetTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataGetTarget; } }
	}

	[RuleVersion(0)]
	public DataGetTargetContext dataGetTarget() {
		DataGetTargetContext _localctx = new DataGetTargetContext(Context, State);
		EnterRule(_localctx, 146, RULE_dataGetTarget);
		try {
			State = 1140;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1125;
				Match(T__71);
				State = 1126;
				pos3D();
				State = 1127;
				blockNBTPath();
				State = 1128;
				number();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1130;
				Match(T__72);
				State = 1131;
				singleSelector();
				State = 1132;
				entityNBTPath();
				State = 1133;
				number();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1135;
				Match(T__73);
				State = 1136;
				storageIdString();
				State = 1137;
				nbtPath();
				State = 1138;
				number();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataMergeTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockNBTContext blockNBT() {
			return GetRuleContext<BlockNBTContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityNBTContext entityNBT() {
			return GetRuleContext<EntityNBTContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdContext storageId() {
			return GetRuleContext<StorageIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		public DataMergeTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataMergeTarget; } }
	}

	[RuleVersion(0)]
	public DataMergeTargetContext dataMergeTarget() {
		DataMergeTargetContext _localctx = new DataMergeTargetContext(Context, State);
		EnterRule(_localctx, 148, RULE_dataMergeTarget);
		try {
			State = 1154;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1142;
				Match(T__71);
				State = 1143;
				pos3D();
				State = 1144;
				blockNBT();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1146;
				Match(T__72);
				State = 1147;
				singleSelector();
				State = 1148;
				entityNBT();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1150;
				Match(T__73);
				State = 1151;
				storageId();
				State = 1152;
				jsonComponent();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataModifyStringTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockNBTPathContext blockNBTPath() {
			return GetRuleContext<BlockNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataStringStartContext dataStringStart() {
			return GetRuleContext<DataStringStartContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataStringEndContext dataStringEnd() {
			return GetRuleContext<DataStringEndContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityNBTPathContext entityNBTPath() {
			return GetRuleContext<EntityNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdContext storageId() {
			return GetRuleContext<StorageIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		public DataModifyStringTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataModifyStringTarget; } }
	}

	[RuleVersion(0)]
	public DataModifyStringTargetContext dataModifyStringTarget() {
		DataModifyStringTargetContext _localctx = new DataModifyStringTargetContext(Context, State);
		EnterRule(_localctx, 150, RULE_dataModifyStringTarget);
		try {
			State = 1174;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1156;
				Match(T__71);
				State = 1157;
				pos3D();
				State = 1158;
				blockNBTPath();
				State = 1159;
				dataStringStart();
				State = 1160;
				dataStringEnd();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1162;
				Match(T__72);
				State = 1163;
				singleSelector();
				State = 1164;
				entityNBTPath();
				State = 1165;
				dataStringStart();
				State = 1166;
				dataStringEnd();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1168;
				Match(T__73);
				State = 1169;
				storageId();
				State = 1170;
				nbtPath();
				State = 1171;
				dataStringStart();
				State = 1172;
				dataStringEnd();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataModifyFromTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockNBTPathContext blockNBTPath() {
			return GetRuleContext<BlockNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityNBTPathContext entityNBTPath() {
			return GetRuleContext<EntityNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdContext storageId() {
			return GetRuleContext<StorageIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		public DataModifyFromTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataModifyFromTarget; } }
	}

	[RuleVersion(0)]
	public DataModifyFromTargetContext dataModifyFromTarget() {
		DataModifyFromTargetContext _localctx = new DataModifyFromTargetContext(Context, State);
		EnterRule(_localctx, 152, RULE_dataModifyFromTarget);
		try {
			State = 1188;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1176;
				Match(T__71);
				State = 1177;
				pos3D();
				State = 1178;
				blockNBTPath();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1180;
				Match(T__72);
				State = 1181;
				singleSelector();
				State = 1182;
				entityNBTPath();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1184;
				Match(T__73);
				State = 1185;
				storageId();
				State = 1186;
				nbtPath();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataModifyBehaviorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DataModifyFromTargetContext dataModifyFromTarget() {
			return GetRuleContext<DataModifyFromTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataModifyStringTargetContext dataModifyStringTarget() {
			return GetRuleContext<DataModifyStringTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		public DataModifyBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataModifyBehaviors; } }
	}

	[RuleVersion(0)]
	public DataModifyBehaviorsContext dataModifyBehaviors() {
		DataModifyBehaviorsContext _localctx = new DataModifyBehaviorsContext(Context, State);
		EnterRule(_localctx, 154, RULE_dataModifyBehaviors);
		try {
			State = 1196;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__35:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1190;
				Match(T__35);
				State = 1191;
				dataModifyFromTarget();
				}
				}
				break;
			case T__74:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1192;
				Match(T__74);
				State = 1193;
				dataModifyStringTarget();
				}
				}
				break;
			case T__45:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1194;
				Match(T__45);
				State = 1195;
				jsonComponent();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataModifyOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DataModifyBehaviorsContext dataModifyBehaviors() {
			return GetRuleContext<DataModifyBehaviorsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		public DataModifyOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataModifyOptions; } }
	}

	[RuleVersion(0)]
	public DataModifyOptionsContext dataModifyOptions() {
		DataModifyOptionsContext _localctx = new DataModifyOptionsContext(Context, State);
		EnterRule(_localctx, 156, RULE_dataModifyOptions);
		try {
			State = 1210;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__75:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1198;
				Match(T__75);
				State = 1199;
				dataModifyBehaviors();
				}
				}
				break;
			case T__76:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1200;
				Match(T__76);
				State = 1201;
				@int();
				State = 1202;
				dataModifyBehaviors();
				}
				}
				break;
			case T__69:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1204;
				Match(T__69);
				State = 1205;
				dataModifyBehaviors();
				}
				}
				break;
			case T__77:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1206;
				Match(T__77);
				State = 1207;
				dataModifyBehaviors();
				}
				}
				break;
			case T__42:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 1208;
				Match(T__42);
				State = 1209;
				dataModifyBehaviors();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataModifyTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockNBTPathContext blockNBTPath() {
			return GetRuleContext<BlockNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataModifyOptionsContext dataModifyOptions() {
			return GetRuleContext<DataModifyOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityNBTPathContext entityNBTPath() {
			return GetRuleContext<EntityNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdContext storageId() {
			return GetRuleContext<StorageIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		public DataModifyTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataModifyTarget; } }
	}

	[RuleVersion(0)]
	public DataModifyTargetContext dataModifyTarget() {
		DataModifyTargetContext _localctx = new DataModifyTargetContext(Context, State);
		EnterRule(_localctx, 158, RULE_dataModifyTarget);
		try {
			State = 1227;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1212;
				Match(T__71);
				State = 1213;
				pos3D();
				State = 1214;
				blockNBTPath();
				State = 1215;
				dataModifyOptions();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1217;
				Match(T__72);
				State = 1218;
				singleSelector();
				State = 1219;
				entityNBTPath();
				State = 1220;
				dataModifyOptions();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1222;
				Match(T__73);
				State = 1223;
				storageId();
				State = 1224;
				nbtPath();
				State = 1225;
				dataModifyOptions();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DataRemoveTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockNBTPathContext blockNBTPath() {
			return GetRuleContext<BlockNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityNBTPathContext entityNBTPath() {
			return GetRuleContext<EntityNBTPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdStringContext storageIdString() {
			return GetRuleContext<StorageIdStringContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		public DataRemoveTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dataRemoveTarget; } }
	}

	[RuleVersion(0)]
	public DataRemoveTargetContext dataRemoveTarget() {
		DataRemoveTargetContext _localctx = new DataRemoveTargetContext(Context, State);
		EnterRule(_localctx, 160, RULE_dataRemoveTarget);
		try {
			State = 1241;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1229;
				Match(T__71);
				State = 1230;
				pos3D();
				State = 1231;
				blockNBTPath();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1233;
				Match(T__72);
				State = 1234;
				singleSelector();
				State = 1235;
				entityNBTPath();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1237;
				Match(T__73);
				State = 1238;
				storageIdString();
				State = 1239;
				nbtPath();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DatapackRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DatapackOptionsContext datapackOptions() {
			return GetRuleContext<DatapackOptionsContext>(0);
		}
		public DatapackRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_datapackRadical; } }
	}

	[RuleVersion(0)]
	public DatapackRadicalContext datapackRadical() {
		DatapackRadicalContext _localctx = new DatapackRadicalContext(Context, State);
		EnterRule(_localctx, 162, RULE_datapackRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1243;
			Match(T__78);
			State = 1244;
			datapackOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DatapackStateContext : ParserRuleContext {
		public DatapackStateContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_datapackState; } }
	}

	[RuleVersion(0)]
	public DatapackStateContext datapackState() {
		DatapackStateContext _localctx = new DatapackStateContext(Context, State);
		EnterRule(_localctx, 164, RULE_datapackState);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1246;
			_la = TokenStream.LA(1);
			if ( !(_la==T__79 || _la==T__80) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DatapackIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode String() { return GetToken(mccommandParser.String, 0); }
		public DatapackIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_datapackId; } }
	}

	[RuleVersion(0)]
	public DatapackIdContext datapackId() {
		DatapackIdContext _localctx = new DatapackIdContext(Context, State);
		EnterRule(_localctx, 166, RULE_datapackId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1248;
			Match(String);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DatapackBehaviorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DatapackIdContext datapackId() {
			return GetRuleContext<DatapackIdContext>(0);
		}
		public DatapackBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_datapackBehaviors; } }
	}

	[RuleVersion(0)]
	public DatapackBehaviorsContext datapackBehaviors() {
		DatapackBehaviorsContext _localctx = new DatapackBehaviorsContext(Context, State);
		EnterRule(_localctx, 168, RULE_datapackBehaviors);
		try {
			State = 1256;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__81:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1250;
				Match(T__81);
				State = 1251;
				datapackId();
				}
				}
				break;
			case T__82:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1252;
				Match(T__82);
				State = 1253;
				datapackId();
				}
				}
				break;
			case T__83:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1254;
				Match(T__83);
				}
				break;
			case T__84:
				EnterOuterAlt(_localctx, 4);
				{
				State = 1255;
				Match(T__84);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DatapackOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DatapackIdContext datapackId() {
			return GetRuleContext<DatapackIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DatapackBehaviorsContext datapackBehaviors() {
			return GetRuleContext<DatapackBehaviorsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DatapackStateContext datapackState() {
			return GetRuleContext<DatapackStateContext>(0);
		}
		public DatapackOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_datapackOptions; } }
	}

	[RuleVersion(0)]
	public DatapackOptionsContext datapackOptions() {
		DatapackOptionsContext _localctx = new DatapackOptionsContext(Context, State);
		EnterRule(_localctx, 170, RULE_datapackOptions);
		try {
			State = 1266;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__85:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1258;
				Match(T__85);
				State = 1259;
				datapackId();
				}
				}
				break;
			case T__80:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1260;
				Match(T__80);
				State = 1261;
				datapackId();
				State = 1262;
				datapackBehaviors();
				}
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1264;
				Match(T__49);
				State = 1265;
				datapackState();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DebugRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DebugOptionsContext debugOptions() {
			return GetRuleContext<DebugOptionsContext>(0);
		}
		public DebugRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_debugRadical; } }
	}

	[RuleVersion(0)]
	public DebugRadicalContext debugRadical() {
		DebugRadicalContext _localctx = new DebugRadicalContext(Context, State);
		EnterRule(_localctx, 172, RULE_debugRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1268;
			Match(T__86);
			State = 1269;
			debugOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DebugOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DatapackIdContext datapackId() {
			return GetRuleContext<DatapackIdContext>(0);
		}
		public DebugOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_debugOptions; } }
	}

	[RuleVersion(0)]
	public DebugOptionsContext debugOptions() {
		DebugOptionsContext _localctx = new DebugOptionsContext(Context, State);
		EnterRule(_localctx, 174, RULE_debugOptions);
		try {
			State = 1275;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__87:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1271;
				Match(T__87);
				State = 1272;
				datapackId();
				}
				}
				break;
			case T__88:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1273;
				Match(T__88);
				}
				break;
			case T__89:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1274;
				Match(T__89);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DefaultgamemodeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public GamemodeValuesContext gamemodeValues() {
			return GetRuleContext<GamemodeValuesContext>(0);
		}
		public DefaultgamemodeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_defaultgamemodeRadical; } }
	}

	[RuleVersion(0)]
	public DefaultgamemodeRadicalContext defaultgamemodeRadical() {
		DefaultgamemodeRadicalContext _localctx = new DefaultgamemodeRadicalContext(Context, State);
		EnterRule(_localctx, 176, RULE_defaultgamemodeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1277;
			Match(T__90);
			State = 1278;
			gamemodeValues();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DifficultyRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public DifficultyValuesContext difficultyValues() {
			return GetRuleContext<DifficultyValuesContext>(0);
		}
		public DifficultyRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_difficultyRadical; } }
	}

	[RuleVersion(0)]
	public DifficultyRadicalContext difficultyRadical() {
		DifficultyRadicalContext _localctx = new DifficultyRadicalContext(Context, State);
		EnterRule(_localctx, 178, RULE_difficultyRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1280;
			Match(T__91);
			State = 1281;
			difficultyValues();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DifficultyValuesContext : ParserRuleContext {
		public DifficultyValuesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_difficultyValues; } }
	}

	[RuleVersion(0)]
	public DifficultyValuesContext difficultyValues() {
		DifficultyValuesContext _localctx = new DifficultyValuesContext(Context, State);
		EnterRule(_localctx, 180, RULE_difficultyValues);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1283;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 65)) & ~0x3f) == 0 && ((1L << (_la - 65)) & 1879048193L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EffectRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public EffectOptionContext effectOption() {
			return GetRuleContext<EffectOptionContext>(0);
		}
		public EffectRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_effectRadical; } }
	}

	[RuleVersion(0)]
	public EffectRadicalContext effectRadical() {
		EffectRadicalContext _localctx = new EffectRadicalContext(Context, State);
		EnterRule(_localctx, 182, RULE_effectRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1285;
			Match(T__95);
			State = 1286;
			effectOption();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EffectOptionContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public OptionalSelectorContext optionalSelector() {
			return GetRuleContext<OptionalSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EffectIDContext effectID() {
			return GetRuleContext<EffectIDContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EffectTimeContext effectTime() {
			return GetRuleContext<EffectTimeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AmplifierContext amplifier() {
			return GetRuleContext<AmplifierContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HideParticlesContext hideParticles() {
			return GetRuleContext<HideParticlesContext>(0);
		}
		public EffectOptionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_effectOption; } }
	}

	[RuleVersion(0)]
	public EffectOptionContext effectOption() {
		EffectOptionContext _localctx = new EffectOptionContext(Context, State);
		EnterRule(_localctx, 184, RULE_effectOption);
		try {
			State = 1304;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__56:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1288;
				Match(T__56);
				State = 1289;
				optionalSelector();
				State = 1290;
				effectID();
				}
				}
				break;
			case T__96:
			case T__97:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1302;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__96:
					{
					State = 1292;
					Match(T__96);
					State = 1293;
					selector();
					State = 1294;
					effectID();
					State = 1295;
					effectTime();
					}
					break;
				case T__97:
					{
					State = 1297;
					Match(T__97);
					State = 1298;
					Match(T__16);
					State = 1299;
					amplifier();
					State = 1300;
					hideParticles();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EffectIDContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode EffectId() { return GetToken(mccommandParser.EffectId, 0); }
		public EffectIDContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_effectID; } }
	}

	[RuleVersion(0)]
	public EffectIDContext effectID() {
		EffectIDContext _localctx = new EffectIDContext(Context, State);
		EnterRule(_localctx, 186, RULE_effectID);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1306;
			Match(EffectId);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EffectTimeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public EffectTimeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_effectTime; } }
	}

	[RuleVersion(0)]
	public EffectTimeContext effectTime() {
		EffectTimeContext _localctx = new EffectTimeContext(Context, State);
		EnterRule(_localctx, 188, RULE_effectTime);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1308;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SecondsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public SecondsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_seconds; } }
	}

	[RuleVersion(0)]
	public SecondsContext seconds() {
		SecondsContext _localctx = new SecondsContext(Context, State);
		EnterRule(_localctx, 190, RULE_seconds);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1310;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AmplifierContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public AmplifierContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_amplifier; } }
	}

	[RuleVersion(0)]
	public AmplifierContext amplifier() {
		AmplifierContext _localctx = new AmplifierContext(Context, State);
		EnterRule(_localctx, 192, RULE_amplifier);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1312;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HideParticlesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(mccommandParser.Bool, 0); }
		public HideParticlesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hideParticles; } }
	}

	[RuleVersion(0)]
	public HideParticlesContext hideParticles() {
		HideParticlesContext _localctx = new HideParticlesContext(Context, State);
		EnterRule(_localctx, 194, RULE_hideParticles);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1314;
			Match(Bool);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EnchantRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EnchantIDContext enchantID() {
			return GetRuleContext<EnchantIDContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EnchantLevelContext enchantLevel() {
			return GetRuleContext<EnchantLevelContext>(0);
		}
		public EnchantRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_enchantRadical; } }
	}

	[RuleVersion(0)]
	public EnchantRadicalContext enchantRadical() {
		EnchantRadicalContext _localctx = new EnchantRadicalContext(Context, State);
		EnterRule(_localctx, 196, RULE_enchantRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1316;
			Match(T__98);
			State = 1317;
			selector();
			State = 1318;
			enchantID();
			State = 1319;
			enchantLevel();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EnchantLevelContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public EnchantLevelContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_enchantLevel; } }
	}

	[RuleVersion(0)]
	public EnchantLevelContext enchantLevel() {
		EnchantLevelContext _localctx = new EnchantLevelContext(Context, State);
		EnterRule(_localctx, 198, RULE_enchantLevel);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1321;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EnchantIDContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode EnchantID() { return GetToken(mccommandParser.EnchantID, 0); }
		public EnchantIDContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_enchantID; } }
	}

	[RuleVersion(0)]
	public EnchantIDContext enchantID() {
		EnchantIDContext _localctx = new EnchantIDContext(Context, State);
		EnterRule(_localctx, 200, RULE_enchantID);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1323;
			Match(EnchantID);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOptionsContext executeOptions() {
			return GetRuleContext<ExecuteOptionsContext>(0);
		}
		public ExecuteRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeRadical; } }
	}

	[RuleVersion(0)]
	public ExecuteRadicalContext executeRadical() {
		ExecuteRadicalContext _localctx = new ExecuteRadicalContext(Context, State);
		EnterRule(_localctx, 202, RULE_executeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1325;
			Match(T__99);
			State = 1326;
			executeOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteEyesOrFeetContext : ParserRuleContext {
		public ExecuteEyesOrFeetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeEyesOrFeet; } }
	}

	[RuleVersion(0)]
	public ExecuteEyesOrFeetContext executeEyesOrFeet() {
		ExecuteEyesOrFeetContext _localctx = new ExecuteEyesOrFeetContext(Context, State);
		EnterRule(_localctx, 204, RULE_executeEyesOrFeet);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1328;
			_la = TokenStream.LA(1);
			if ( !(_la==T__100 || _la==T__101) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AxesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Axes() { return GetToken(mccommandParser.Axes, 0); }
		public AxesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_axes; } }
	}

	[RuleVersion(0)]
	public AxesContext axes() {
		AxesContext _localctx = new AxesContext(Context, State);
		EnterRule(_localctx, 206, RULE_axes);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1330;
			Match(Axes);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AsContext : ParserRuleContext {
		public AsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_as; } }
	}

	[RuleVersion(0)]
	public AsContext @as() {
		AsContext _localctx = new AsContext(Context, State);
		EnterRule(_localctx, 208, RULE_as);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1332;
			Match(T__102);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StorageContext : ParserRuleContext {
		public StorageContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_storage; } }
	}

	[RuleVersion(0)]
	public StorageContext storage() {
		StorageContext _localctx = new StorageContext(Context, State);
		EnterRule(_localctx, 210, RULE_storage);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1334;
			Match(T__73);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteAllOrMaskedContext : ParserRuleContext {
		public ExecuteAllOrMaskedContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeAllOrMasked; } }
	}

	[RuleVersion(0)]
	public ExecuteAllOrMaskedContext executeAllOrMasked() {
		ExecuteAllOrMaskedContext _localctx = new ExecuteAllOrMaskedContext(Context, State);
		EnterRule(_localctx, 212, RULE_executeAllOrMasked);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1336;
			_la = TokenStream.LA(1);
			if ( !(_la==T__60 || _la==T__103) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteMaxOrValueContext : ParserRuleContext {
		public ExecuteMaxOrValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeMaxOrValue; } }
	}

	[RuleVersion(0)]
	public ExecuteMaxOrValueContext executeMaxOrValue() {
		ExecuteMaxOrValueContext _localctx = new ExecuteMaxOrValueContext(Context, State);
		EnterRule(_localctx, 214, RULE_executeMaxOrValue);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1338;
			_la = TokenStream.LA(1);
			if ( !(_la==T__45 || _la==T__50) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteJudgeDataOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOptionsContext executeOptions() {
			return GetRuleContext<ExecuteOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdContext storageId() {
			return GetRuleContext<StorageIdContext>(0);
		}
		public ExecuteJudgeDataOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeJudgeDataOptions; } }
	}

	[RuleVersion(0)]
	public ExecuteJudgeDataOptionsContext executeJudgeDataOptions() {
		ExecuteJudgeDataOptionsContext _localctx = new ExecuteJudgeDataOptionsContext(Context, State);
		EnterRule(_localctx, 216, RULE_executeJudgeDataOptions);
		try {
			State = 1356;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1340;
				Match(T__71);
				State = 1341;
				pos3D();
				State = 1342;
				nbtPath();
				State = 1343;
				executeOptions();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1345;
				Match(T__72);
				State = 1346;
				singleSelector();
				State = 1347;
				nbtPath();
				State = 1348;
				executeOptions();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1350;
				Match(T__73);
				State = 1351;
				storageId();
				State = 1352;
				Match(T__16);
				State = 1353;
				nbtPath();
				State = 1354;
				executeOptions();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteJudgementOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext[] pos3D() {
			return GetRuleContexts<Pos3DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D(int i) {
			return GetRuleContext<Pos3DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BiomeIdContext biomeId() {
			return GetRuleContext<BiomeIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOptionsContext executeOptions() {
			return GetRuleContext<ExecuteOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockIdContext blockId() {
			return GetRuleContext<BlockIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteJudgeDataOptionsContext executeJudgeDataOptions() {
			return GetRuleContext<ExecuteJudgeDataOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DimensionIdContext dimensionId() {
			return GetRuleContext<DimensionIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PredicateValueContext predicateValue() {
			return GetRuleContext<PredicateValueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TargetObjectiveContext targetObjective() {
			return GetRuleContext<TargetObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOperationsContext executeOperations() {
			return GetRuleContext<ExecuteOperationsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteAllOrMaskedContext executeAllOrMasked() {
			return GetRuleContext<ExecuteAllOrMaskedContext>(0);
		}
		public ExecuteJudgementOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeJudgementOptions; } }
	}

	[RuleVersion(0)]
	public ExecuteJudgementOptionsContext executeJudgementOptions() {
		ExecuteJudgementOptionsContext _localctx = new ExecuteJudgementOptionsContext(Context, State);
		EnterRule(_localctx, 218, RULE_executeJudgementOptions);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1399;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__104:
				{
				{
				State = 1358;
				Match(T__104);
				State = 1359;
				pos3D();
				State = 1360;
				biomeId();
				State = 1361;
				executeOptions();
				}
				}
				break;
			case T__71:
				{
				{
				State = 1363;
				Match(T__71);
				State = 1364;
				pos3D();
				State = 1365;
				blockId();
				State = 1366;
				executeOptions();
				}
				}
				break;
			case T__105:
				{
				{
				State = 1368;
				Match(T__105);
				State = 1369;
				pos3D();
				State = 1370;
				pos3D();
				State = 1371;
				pos3D();
				{
				State = 1372;
				executeAllOrMasked();
				State = 1373;
				executeOptions();
				}
				}
				}
				break;
			case T__68:
				{
				{
				State = 1375;
				Match(T__68);
				State = 1376;
				executeJudgeDataOptions();
				}
				}
				break;
			case T__106:
				{
				{
				State = 1377;
				Match(T__106);
				State = 1378;
				dimensionId();
				State = 1379;
				executeOptions();
				}
				}
				break;
			case T__72:
				{
				{
				State = 1381;
				Match(T__72);
				State = 1382;
				selector();
				State = 1383;
				executeOptions();
				}
				}
				break;
			case T__107:
				{
				{
				State = 1385;
				Match(T__107);
				State = 1386;
				pos3D();
				State = 1387;
				executeOptions();
				}
				}
				break;
			case T__108:
				{
				{
				State = 1389;
				Match(T__108);
				State = 1390;
				predicateValue();
				State = 1391;
				executeOptions();
				}
				}
				break;
			case T__109:
				{
				{
				State = 1393;
				Match(T__109);
				State = 1394;
				singleSelector();
				State = 1395;
				targetObjective();
				State = 1396;
				executeOperations();
				State = 1397;
				executeOptions();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PredicateValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FileReferrerValue() { return GetToken(mccommandParser.FileReferrerValue, 0); }
		public PredicateValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_predicateValue; } }
	}

	[RuleVersion(0)]
	public PredicateValueContext predicateValue() {
		PredicateValueContext _localctx = new PredicateValueContext(Context, State);
		EnterRule(_localctx, 220, RULE_predicateValue);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1401;
			Match(FileReferrerValue);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteOperationsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TargetObjectiveContext targetObjective() {
			return GetRuleContext<TargetObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Equal() { return GetToken(mccommandParser.Equal, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntIntervalContext intInterval() {
			return GetRuleContext<IntIntervalContext>(0);
		}
		public ExecuteOperationsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeOperations; } }
	}

	[RuleVersion(0)]
	public ExecuteOperationsContext executeOperations() {
		ExecuteOperationsContext _localctx = new ExecuteOperationsContext(Context, State);
		EnterRule(_localctx, 222, RULE_executeOperations);
		int _la;
		try {
			State = 1412;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__110:
			case T__111:
			case T__112:
			case Equal:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1403;
				_la = TokenStream.LA(1);
				if ( !(((((_la - 111)) & ~0x3f) == 0 && ((1L << (_la - 111)) & 7L) != 0) || _la==Equal) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 1404;
				singleSelector();
				State = 1405;
				targetObjective();
				}
				}
				break;
			case T__0:
			case T__113:
			case Integer:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1410;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__113:
					{
					State = 1407;
					Match(T__113);
					State = 1408;
					@int();
					}
					break;
				case T__0:
				case Integer:
					{
					State = 1409;
					intInterval();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteOnContext : ParserRuleContext {
		public ExecuteOnContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeOn; } }
	}

	[RuleVersion(0)]
	public ExecuteOnContext executeOn() {
		ExecuteOnContext _localctx = new ExecuteOnContext(Context, State);
		EnterRule(_localctx, 224, RULE_executeOn);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1414;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 115)) & ~0x3f) == 0 && ((1L << (_la - 115)) & 255L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteOverContext : ParserRuleContext {
		public ExecuteOverContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeOver; } }
	}

	[RuleVersion(0)]
	public ExecuteOverContext executeOver() {
		ExecuteOverContext _localctx = new ExecuteOverContext(Context, State);
		EnterRule(_localctx, 226, RULE_executeOver);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1416;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 123)) & ~0x3f) == 0 && ((1L << (_la - 123)) & 15L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecutePositionedContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOverContext executeOver() {
			return GetRuleContext<ExecuteOverContext>(0);
		}
		public ExecutePositionedContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executePositioned; } }
	}

	[RuleVersion(0)]
	public ExecutePositionedContext executePositioned() {
		ExecutePositionedContext _localctx = new ExecutePositionedContext(Context, State);
		EnterRule(_localctx, 228, RULE_executePositioned);
		try {
			State = 1422;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__102:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1418;
				Match(T__102);
				State = 1419;
				selector();
				}
				}
				break;
			case T__126:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1420;
				Match(T__126);
				State = 1421;
				executeOver();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteStoreTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NbtPathContext nbtPath() {
			return GetRuleContext<NbtPathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DataTypeContext dataType() {
			return GetRuleContext<DataTypeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BossbarIdContext bossbarId() {
			return GetRuleContext<BossbarIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteMaxOrValueContext executeMaxOrValue() {
			return GetRuleContext<ExecuteMaxOrValueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TargetObjectiveContext targetObjective() {
			return GetRuleContext<TargetObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StorageIdContext storageId() {
			return GetRuleContext<StorageIdContext>(0);
		}
		public ExecuteStoreTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeStoreTarget; } }
	}

	[RuleVersion(0)]
	public ExecuteStoreTargetContext executeStoreTarget() {
		ExecuteStoreTargetContext _localctx = new ExecuteStoreTargetContext(Context, State);
		EnterRule(_localctx, 230, RULE_executeStoreTarget);
		try {
			State = 1451;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1424;
				Match(T__71);
				State = 1425;
				pos3D();
				State = 1426;
				nbtPath();
				State = 1427;
				dataType();
				State = 1428;
				number();
				}
				}
				break;
			case T__48:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1430;
				Match(T__48);
				State = 1431;
				bossbarId();
				State = 1432;
				executeMaxOrValue();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1434;
				Match(T__72);
				State = 1435;
				singleSelector();
				State = 1436;
				nbtPath();
				State = 1437;
				dataType();
				State = 1438;
				number();
				}
				}
				break;
			case T__109:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1440;
				Match(T__109);
				State = 1441;
				selector();
				State = 1442;
				targetObjective();
				}
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 1444;
				Match(T__73);
				State = 1445;
				storageId();
				State = 1446;
				Match(T__16);
				State = 1447;
				nbtPath();
				State = 1448;
				dataType();
				State = 1449;
				number();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteStoreContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteStoreTargetContext executeStoreTarget() {
			return GetRuleContext<ExecuteStoreTargetContext>(0);
		}
		public ExecuteStoreContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeStore; } }
	}

	[RuleVersion(0)]
	public ExecuteStoreContext executeStore() {
		ExecuteStoreContext _localctx = new ExecuteStoreContext(Context, State);
		EnterRule(_localctx, 232, RULE_executeStore);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1453;
			_la = TokenStream.LA(1);
			if ( !(_la==T__127 || _la==T__128) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			State = 1454;
			executeStoreTarget();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteFacingContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOptionsContext executeOptions() {
			return GetRuleContext<ExecuteOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteEyesOrFeetContext executeEyesOrFeet() {
			return GetRuleContext<ExecuteEyesOrFeetContext>(0);
		}
		public ExecuteFacingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeFacing; } }
	}

	[RuleVersion(0)]
	public ExecuteFacingContext executeFacing() {
		ExecuteFacingContext _localctx = new ExecuteFacingContext(Context, State);
		EnterRule(_localctx, 234, RULE_executeFacing);
		try {
			State = 1464;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case Coordinates:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1456;
				pos3D();
				State = 1457;
				executeOptions();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1459;
				Match(T__72);
				State = 1460;
				selector();
				State = 1461;
				executeEyesOrFeet();
				State = 1462;
				executeOptions();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExecuteOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AxesContext axes() {
			return GetRuleContext<AxesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOptionsContext executeOptions() {
			return GetRuleContext<ExecuteOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteEyesOrFeetContext executeEyesOrFeet() {
			return GetRuleContext<ExecuteEyesOrFeetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteFacingContext executeFacing() {
			return GetRuleContext<ExecuteFacingContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteJudgementOptionsContext executeJudgementOptions() {
			return GetRuleContext<ExecuteJudgementOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DimensionIdContext dimensionId() {
			return GetRuleContext<DimensionIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteOnContext executeOn() {
			return GetRuleContext<ExecuteOnContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecutePositionedContext executePositioned() {
			return GetRuleContext<ExecutePositionedContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AsContext @as() {
			return GetRuleContext<AsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommandsContext commands() {
			return GetRuleContext<CommandsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExecuteStoreContext executeStore() {
			return GetRuleContext<ExecuteStoreContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityIdContext entityId() {
			return GetRuleContext<EntityIdContext>(0);
		}
		public ExecuteOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_executeOptions; } }
	}

	[RuleVersion(0)]
	public ExecuteOptionsContext executeOptions() {
		ExecuteOptionsContext _localctx = new ExecuteOptionsContext(Context, State);
		EnterRule(_localctx, 236, RULE_executeOptions);
		int _la;
		try {
			State = 1516;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__129:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1466;
				Match(T__129);
				State = 1467;
				axes();
				State = 1468;
				executeOptions();
				}
				}
				break;
			case T__130:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1470;
				Match(T__130);
				State = 1471;
				executeEyesOrFeet();
				State = 1472;
				executeOptions();
				}
				}
				break;
			case T__66:
			case T__102:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1474;
				_la = TokenStream.LA(1);
				if ( !(_la==T__66 || _la==T__102) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 1475;
				selector();
				State = 1476;
				executeOptions();
				}
				}
				break;
			case T__131:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1478;
				Match(T__131);
				State = 1479;
				executeFacing();
				State = 1480;
				executeOptions();
				}
				}
				break;
			case T__132:
			case T__133:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 1482;
				_la = TokenStream.LA(1);
				if ( !(_la==T__132 || _la==T__133) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 1483;
				executeJudgementOptions();
				State = 1484;
				executeOptions();
				}
				}
				break;
			case T__134:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 1486;
				Match(T__134);
				State = 1487;
				dimensionId();
				State = 1488;
				executeOptions();
				}
				}
				break;
			case T__135:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 1490;
				Match(T__135);
				State = 1491;
				executeOn();
				State = 1492;
				executeOptions();
				}
				}
				break;
			case T__136:
				EnterOuterAlt(_localctx, 8);
				{
				{
				State = 1494;
				Match(T__136);
				State = 1497;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case Coordinates:
					{
					State = 1495;
					pos3D();
					}
					break;
				case T__102:
				case T__126:
					{
					State = 1496;
					executePositioned();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				State = 1499;
				executeOptions();
				}
				}
				break;
			case T__137:
				EnterOuterAlt(_localctx, 9);
				{
				{
				State = 1501;
				Match(T__137);
				State = 1502;
				@as();
				State = 1503;
				selector();
				State = 1504;
				executeOptions();
				}
				}
				break;
			case T__138:
				EnterOuterAlt(_localctx, 10);
				{
				{
				State = 1506;
				Match(T__138);
				State = 1507;
				commands();
				}
				}
				break;
			case T__139:
				EnterOuterAlt(_localctx, 11);
				{
				{
				State = 1508;
				Match(T__139);
				State = 1509;
				executeStore();
				State = 1510;
				executeOptions();
				}
				}
				break;
			case T__140:
				EnterOuterAlt(_localctx, 12);
				{
				{
				State = 1512;
				Match(T__140);
				State = 1513;
				entityId();
				State = 1514;
				executeOptions();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExperienceRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ExperienceOptionsContext experienceOptions() {
			return GetRuleContext<ExperienceOptionsContext>(0);
		}
		public ExperienceRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_experienceRadical; } }
	}

	[RuleVersion(0)]
	public ExperienceRadicalContext experienceRadical() {
		ExperienceRadicalContext _localctx = new ExperienceRadicalContext(Context, State);
		EnterRule(_localctx, 238, RULE_experienceRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1518;
			Match(T__141);
			State = 1519;
			experienceOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class QueryContext : ParserRuleContext {
		public QueryContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_query; } }
	}

	[RuleVersion(0)]
	public QueryContext query() {
		QueryContext _localctx = new QueryContext(Context, State);
		EnterRule(_localctx, 240, RULE_query);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1521;
			Match(T__142);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExperienceAmountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public ExperienceAmountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_experienceAmount; } }
	}

	[RuleVersion(0)]
	public ExperienceAmountContext experienceAmount() {
		ExperienceAmountContext _localctx = new ExperienceAmountContext(Context, State);
		EnterRule(_localctx, 242, RULE_experienceAmount);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1523;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExpreienceTypeContext : ParserRuleContext {
		public ExpreienceTypeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_expreienceType; } }
	}

	[RuleVersion(0)]
	public ExpreienceTypeContext expreienceType() {
		ExpreienceTypeContext _localctx = new ExpreienceTypeContext(Context, State);
		EnterRule(_localctx, 244, RULE_expreienceType);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1525;
			_la = TokenStream.LA(1);
			if ( !(_la==T__143 || _la==T__144) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExperienceOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExperienceAmountContext experienceAmount() {
			return GetRuleContext<ExperienceAmountContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpreienceTypeContext expreienceType() {
			return GetRuleContext<ExpreienceTypeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		public ExperienceOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_experienceOptions; } }
	}

	[RuleVersion(0)]
	public ExperienceOptionsContext experienceOptions() {
		ExperienceOptionsContext _localctx = new ExperienceOptionsContext(Context, State);
		EnterRule(_localctx, 246, RULE_experienceOptions);
		int _la;
		try {
			State = 1537;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__42:
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1527;
				_la = TokenStream.LA(1);
				if ( !(_la==T__42 || _la==T__43) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 1528;
				selector();
				State = 1529;
				experienceAmount();
				State = 1530;
				Match(T__16);
				State = 1531;
				expreienceType();
				}
				}
				break;
			case T__142:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1533;
				Match(T__142);
				State = 1534;
				singleSelector();
				State = 1535;
				expreienceType();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FillRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext[] pos3D() {
			return GetRuleContexts<Pos3DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D(int i) {
			return GetRuleContext<Pos3DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockIdContext blockId() {
			return GetRuleContext<BlockIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FillOptionsContext fillOptions() {
			return GetRuleContext<FillOptionsContext>(0);
		}
		public FillRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fillRadical; } }
	}

	[RuleVersion(0)]
	public FillRadicalContext fillRadical() {
		FillRadicalContext _localctx = new FillRadicalContext(Context, State);
		EnterRule(_localctx, 248, RULE_fillRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1539;
			Match(T__145);
			State = 1540;
			pos3D();
			State = 1541;
			pos3D();
			State = 1542;
			blockId();
			State = 1543;
			fillOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FillOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BlockIdContext blockId() {
			return GetRuleContext<BlockIdContext>(0);
		}
		public FillOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fillOptions; } }
	}

	[RuleVersion(0)]
	public FillOptionsContext fillOptions() {
		FillOptionsContext _localctx = new FillOptionsContext(Context, State);
		EnterRule(_localctx, 250, RULE_fillOptions);
		int _la;
		try {
			State = 1548;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__146:
			case T__147:
			case T__148:
			case T__149:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1545;
				_la = TokenStream.LA(1);
				if ( !(((((_la - 147)) & ~0x3f) == 0 && ((1L << (_la - 147)) & 15L) != 0)) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				}
				break;
			case T__61:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1546;
				Match(T__61);
				State = 1547;
				blockId();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FillbiomeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext[] pos3D() {
			return GetRuleContexts<Pos3DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D(int i) {
			return GetRuleContext<Pos3DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BiomeIdContext biomeId() {
			return GetRuleContext<BiomeIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FillBiomeOptionsContext fillBiomeOptions() {
			return GetRuleContext<FillBiomeOptionsContext>(0);
		}
		public FillbiomeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fillbiomeRadical; } }
	}

	[RuleVersion(0)]
	public FillbiomeRadicalContext fillbiomeRadical() {
		FillbiomeRadicalContext _localctx = new FillbiomeRadicalContext(Context, State);
		EnterRule(_localctx, 252, RULE_fillbiomeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1550;
			Match(T__150);
			State = 1551;
			pos3D();
			State = 1552;
			pos3D();
			State = 1553;
			biomeId();
			State = 1554;
			fillBiomeOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FillBiomeOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BiomeIdContext biomeId() {
			return GetRuleContext<BiomeIdContext>(0);
		}
		public FillBiomeOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fillBiomeOptions; } }
	}

	[RuleVersion(0)]
	public FillBiomeOptionsContext fillBiomeOptions() {
		FillBiomeOptionsContext _localctx = new FillBiomeOptionsContext(Context, State);
		EnterRule(_localctx, 254, RULE_fillBiomeOptions);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1556;
			Match(T__61);
			State = 1557;
			biomeId();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ForceloadRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ForceloadOptionsContext forceloadOptions() {
			return GetRuleContext<ForceloadOptionsContext>(0);
		}
		public ForceloadRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_forceloadRadical; } }
	}

	[RuleVersion(0)]
	public ForceloadRadicalContext forceloadRadical() {
		ForceloadRadicalContext _localctx = new ForceloadRadicalContext(Context, State);
		EnterRule(_localctx, 256, RULE_forceloadRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1559;
			Match(T__151);
			State = 1560;
			forceloadOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ForceloadRemoveObjectivesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext[] pos2D() {
			return GetRuleContexts<Pos2DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext pos2D(int i) {
			return GetRuleContext<Pos2DContext>(i);
		}
		public ForceloadRemoveObjectivesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_forceloadRemoveObjectives; } }
	}

	[RuleVersion(0)]
	public ForceloadRemoveObjectivesContext forceloadRemoveObjectives() {
		ForceloadRemoveObjectivesContext _localctx = new ForceloadRemoveObjectivesContext(Context, State);
		EnterRule(_localctx, 258, RULE_forceloadRemoveObjectives);
		try {
			State = 1566;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case Coordinates:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1562;
				pos2D();
				State = 1563;
				pos2D();
				}
				}
				break;
			case T__103:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1565;
				Match(T__103);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ForceloadOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext[] pos2D() {
			return GetRuleContexts<Pos2DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext pos2D(int i) {
			return GetRuleContext<Pos2DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ForceloadRemoveObjectivesContext forceloadRemoveObjectives() {
			return GetRuleContext<ForceloadRemoveObjectivesContext>(0);
		}
		public ForceloadOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_forceloadOptions; } }
	}

	[RuleVersion(0)]
	public ForceloadOptionsContext forceloadOptions() {
		ForceloadOptionsContext _localctx = new ForceloadOptionsContext(Context, State);
		EnterRule(_localctx, 260, RULE_forceloadOptions);
		try {
			State = 1576;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1568;
				Match(T__43);
				State = 1569;
				pos2D();
				State = 1570;
				pos2D();
				}
				}
				break;
			case T__142:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1572;
				Match(T__142);
				State = 1573;
				pos2D();
				}
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1574;
				Match(T__44);
				State = 1575;
				forceloadRemoveObjectives();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FunctionRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public FunctionIdContext functionId() {
			return GetRuleContext<FunctionIdContext>(0);
		}
		public FunctionRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_functionRadical; } }
	}

	[RuleVersion(0)]
	public FunctionRadicalContext functionRadical() {
		FunctionRadicalContext _localctx = new FunctionRadicalContext(Context, State);
		EnterRule(_localctx, 262, RULE_functionRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1578;
			Match(T__87);
			State = 1579;
			functionId();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GamemodeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public GamemodeValuesContext gamemodeValues() {
			return GetRuleContext<GamemodeValuesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public OptionalSelectorContext optionalSelector() {
			return GetRuleContext<OptionalSelectorContext>(0);
		}
		public GamemodeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gamemodeRadical; } }
	}

	[RuleVersion(0)]
	public GamemodeRadicalContext gamemodeRadical() {
		GamemodeRadicalContext _localctx = new GamemodeRadicalContext(Context, State);
		EnterRule(_localctx, 264, RULE_gamemodeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1581;
			Match(T__152);
			State = 1582;
			gamemodeValues();
			State = 1583;
			optionalSelector();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GameruleRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public GameruleNameContext gameruleName() {
			return GetRuleContext<GameruleNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GameruleValueContext gameruleValue() {
			return GetRuleContext<GameruleValueContext>(0);
		}
		public GameruleRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gameruleRadical; } }
	}

	[RuleVersion(0)]
	public GameruleRadicalContext gameruleRadical() {
		GameruleRadicalContext _localctx = new GameruleRadicalContext(Context, State);
		EnterRule(_localctx, 266, RULE_gameruleRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1585;
			Match(T__153);
			State = 1586;
			gameruleName();
			State = 1587;
			gameruleValue();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GameruleNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode GameruleName() { return GetToken(mccommandParser.GameruleName, 0); }
		public GameruleNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gameruleName; } }
	}

	[RuleVersion(0)]
	public GameruleNameContext gameruleName() {
		GameruleNameContext _localctx = new GameruleNameContext(Context, State);
		EnterRule(_localctx, 268, RULE_gameruleName);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1589;
			Match(GameruleName);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GameruleValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(mccommandParser.Bool, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public GameruleValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gameruleValue; } }
	}

	[RuleVersion(0)]
	public GameruleValueContext gameruleValue() {
		GameruleValueContext _localctx = new GameruleValueContext(Context, State);
		EnterRule(_localctx, 270, RULE_gameruleValue);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1591;
			_la = TokenStream.LA(1);
			if ( !(_la==Integer || _la==Bool) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GiveRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemIdContext itemId() {
			return GetRuleContext<ItemIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		public GiveRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_giveRadical; } }
	}

	[RuleVersion(0)]
	public GiveRadicalContext giveRadical() {
		GiveRadicalContext _localctx = new GiveRadicalContext(Context, State);
		EnterRule(_localctx, 272, RULE_giveRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1593;
			Match(T__96);
			State = 1594;
			selector();
			State = 1595;
			itemId();
			State = 1596;
			@int();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HelpRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CommandListContext commandList() {
			return GetRuleContext<CommandListContext>(0);
		}
		public HelpRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_helpRadical; } }
	}

	[RuleVersion(0)]
	public HelpRadicalContext helpRadical() {
		HelpRadicalContext _localctx = new HelpRadicalContext(Context, State);
		EnterRule(_localctx, 274, RULE_helpRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1598;
			Match(T__154);
			{
			State = 1599;
			commandList();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CommandListContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CommandList() { return GetToken(mccommandParser.CommandList, 0); }
		public CommandListContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_commandList; } }
	}

	[RuleVersion(0)]
	public CommandListContext commandList() {
		CommandListContext _localctx = new CommandListContext(Context, State);
		EnterRule(_localctx, 276, RULE_commandList);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1601;
			Match(CommandList);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemOptionsContext itemOptions() {
			return GetRuleContext<ItemOptionsContext>(0);
		}
		public ItemRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemRadical; } }
	}

	[RuleVersion(0)]
	public ItemRadicalContext itemRadical() {
		ItemRadicalContext _localctx = new ItemRadicalContext(Context, State);
		EnterRule(_localctx, 278, RULE_itemRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1603;
			Match(T__155);
			State = 1604;
			Match(T__16);
			State = 1605;
			itemOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemSlotContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ItemSlot() { return GetToken(mccommandParser.ItemSlot, 0); }
		public ItemSlotContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemSlot; } }
	}

	[RuleVersion(0)]
	public ItemSlotContext itemSlot() {
		ItemSlotContext _localctx = new ItemSlotContext(Context, State);
		EnterRule(_localctx, 280, RULE_itemSlot);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1607;
			Match(ItemSlot);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemModifierFileContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public ItemModifierFileContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemModifierFile; } }
	}

	[RuleVersion(0)]
	public ItemModifierFileContext itemModifierFile() {
		ItemModifierFileContext _localctx = new ItemModifierFileContext(Context, State);
		EnterRule(_localctx, 282, RULE_itemModifierFile);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1609;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemModifyTargetContext itemModifyTarget() {
			return GetRuleContext<ItemModifyTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemReplaceTargetContext itemReplaceTarget() {
			return GetRuleContext<ItemReplaceTargetContext>(0);
		}
		public ItemOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemOptions; } }
	}

	[RuleVersion(0)]
	public ItemOptionsContext itemOptions() {
		ItemOptionsContext _localctx = new ItemOptionsContext(Context, State);
		EnterRule(_localctx, 284, RULE_itemOptions);
		try {
			State = 1615;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__70:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1611;
				Match(T__70);
				State = 1612;
				itemModifyTarget();
				}
				}
				break;
			case T__61:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1613;
				Match(T__61);
				State = 1614;
				itemReplaceTarget();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemBehaviorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemModifyTargetContext itemModifyTarget() {
			return GetRuleContext<ItemModifyTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemIdContext itemId() {
			return GetRuleContext<ItemIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		public ItemBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemBehaviors; } }
	}

	[RuleVersion(0)]
	public ItemBehaviorsContext itemBehaviors() {
		ItemBehaviorsContext _localctx = new ItemBehaviorsContext(Context, State);
		EnterRule(_localctx, 286, RULE_itemBehaviors);
		try {
			State = 1623;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__35:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1617;
				Match(T__35);
				State = 1618;
				itemModifyTarget();
				}
				}
				break;
			case T__156:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1619;
				Match(T__156);
				State = 1620;
				itemId();
				State = 1621;
				@int();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemModifyTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemSlotContext itemSlot() {
			return GetRuleContext<ItemSlotContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemModifierFileContext itemModifierFile() {
			return GetRuleContext<ItemModifierFileContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		public ItemModifyTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemModifyTarget; } }
	}

	[RuleVersion(0)]
	public ItemModifyTargetContext itemModifyTarget() {
		ItemModifyTargetContext _localctx = new ItemModifyTargetContext(Context, State);
		EnterRule(_localctx, 288, RULE_itemModifyTarget);
		try {
			State = 1635;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1625;
				Match(T__71);
				State = 1626;
				pos3D();
				State = 1627;
				itemSlot();
				State = 1628;
				itemModifierFile();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1630;
				Match(T__72);
				State = 1631;
				selector();
				State = 1632;
				itemSlot();
				State = 1633;
				itemModifierFile();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemReplaceTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemSlotContext itemSlot() {
			return GetRuleContext<ItemSlotContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemBehaviorsContext itemBehaviors() {
			return GetRuleContext<ItemBehaviorsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		public ItemReplaceTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemReplaceTarget; } }
	}

	[RuleVersion(0)]
	public ItemReplaceTargetContext itemReplaceTarget() {
		ItemReplaceTargetContext _localctx = new ItemReplaceTargetContext(Context, State);
		EnterRule(_localctx, 290, RULE_itemReplaceTarget);
		try {
			State = 1647;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1637;
				Match(T__71);
				State = 1638;
				pos3D();
				State = 1639;
				itemSlot();
				State = 1640;
				itemBehaviors();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1642;
				Match(T__72);
				State = 1643;
				selector();
				State = 1644;
				itemSlot();
				State = 1645;
				itemBehaviors();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JfrRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public JfrStartOrStopContext jfrStartOrStop() {
			return GetRuleContext<JfrStartOrStopContext>(0);
		}
		public JfrRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jfrRadical; } }
	}

	[RuleVersion(0)]
	public JfrRadicalContext jfrRadical() {
		JfrRadicalContext _localctx = new JfrRadicalContext(Context, State);
		EnterRule(_localctx, 292, RULE_jfrRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1649;
			Match(T__157);
			State = 1650;
			jfrStartOrStop();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JfrStartOrStopContext : ParserRuleContext {
		public JfrStartOrStopContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jfrStartOrStop; } }
	}

	[RuleVersion(0)]
	public JfrStartOrStopContext jfrStartOrStop() {
		JfrStartOrStopContext _localctx = new JfrStartOrStopContext(Context, State);
		EnterRule(_localctx, 294, RULE_jfrStartOrStop);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1652;
			_la = TokenStream.LA(1);
			if ( !(_la==T__88 || _la==T__89) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class KickRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ReasonContext reason() {
			return GetRuleContext<ReasonContext>(0);
		}
		public KickRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_kickRadical; } }
	}

	[RuleVersion(0)]
	public KickRadicalContext kickRadical() {
		KickRadicalContext _localctx = new KickRadicalContext(Context, State);
		EnterRule(_localctx, 296, RULE_kickRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1654;
			Match(T__158);
			State = 1655;
			selector();
			State = 1656;
			reason();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ReasonContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Any() { return GetTokens(mccommandParser.Any); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Any(int i) {
			return GetToken(mccommandParser.Any, i);
		}
		public ReasonContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_reason; } }
	}

	[RuleVersion(0)]
	public ReasonContext reason() {
		ReasonContext _localctx = new ReasonContext(Context, State);
		EnterRule(_localctx, 298, RULE_reason);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1659;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			do {
				{
				{
				State = 1658;
				Match(Any);
				}
				}
				State = 1661;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			} while ( _la==Any );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class KillRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		public KillRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_killRadical; } }
	}

	[RuleVersion(0)]
	public KillRadicalContext killRadical() {
		KillRadicalContext _localctx = new KillRadicalContext(Context, State);
		EnterRule(_localctx, 300, RULE_killRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1663;
			Match(T__159);
			State = 1664;
			selector();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ListRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public UuidsContext uuids() {
			return GetRuleContext<UuidsContext>(0);
		}
		public ListRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_listRadical; } }
	}

	[RuleVersion(0)]
	public ListRadicalContext listRadical() {
		ListRadicalContext _localctx = new ListRadicalContext(Context, State);
		EnterRule(_localctx, 302, RULE_listRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1666;
			Match(T__49);
			State = 1667;
			uuids();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class UuidsContext : ParserRuleContext {
		public UuidsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_uuids; } }
	}

	[RuleVersion(0)]
	public UuidsContext uuids() {
		UuidsContext _localctx = new UuidsContext(Context, State);
		EnterRule(_localctx, 304, RULE_uuids);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1669;
			Match(T__160);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LocateRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LocateOptionsContext locateOptions() {
			return GetRuleContext<LocateOptionsContext>(0);
		}
		public LocateRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_locateRadical; } }
	}

	[RuleVersion(0)]
	public LocateRadicalContext locateRadical() {
		LocateRadicalContext _localctx = new LocateRadicalContext(Context, State);
		EnterRule(_localctx, 306, RULE_locateRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1671;
			Match(T__161);
			State = 1672;
			locateOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PoiIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public PoiIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_poiId; } }
	}

	[RuleVersion(0)]
	public PoiIdContext poiId() {
		PoiIdContext _localctx = new PoiIdContext(Context, State);
		EnterRule(_localctx, 308, RULE_poiId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1674;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StructureIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public StructureIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_structureId; } }
	}

	[RuleVersion(0)]
	public StructureIdContext structureId() {
		StructureIdContext _localctx = new StructureIdContext(Context, State);
		EnterRule(_localctx, 310, RULE_structureId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1676;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LocateOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BiomeIdContext biomeId() {
			return GetRuleContext<BiomeIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PoiIdContext poiId() {
			return GetRuleContext<PoiIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StructureIdContext structureId() {
			return GetRuleContext<StructureIdContext>(0);
		}
		public LocateOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_locateOptions; } }
	}

	[RuleVersion(0)]
	public LocateOptionsContext locateOptions() {
		LocateOptionsContext _localctx = new LocateOptionsContext(Context, State);
		EnterRule(_localctx, 312, RULE_locateOptions);
		try {
			State = 1684;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__104:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1678;
				Match(T__104);
				State = 1679;
				biomeId();
				}
				}
				break;
			case T__162:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1680;
				Match(T__162);
				State = 1681;
				poiId();
				}
				}
				break;
			case T__163:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1682;
				Match(T__163);
				State = 1683;
				structureId();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LootOptionsContext lootOptions() {
			return GetRuleContext<LootOptionsContext>(0);
		}
		public LootRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootRadical; } }
	}

	[RuleVersion(0)]
	public LootRadicalContext lootRadical() {
		LootRadicalContext _localctx = new LootRadicalContext(Context, State);
		EnterRule(_localctx, 314, RULE_lootRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1686;
			Match(T__164);
			State = 1687;
			lootOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootFilePathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public LootFilePathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootFilePath; } }
	}

	[RuleVersion(0)]
	public LootFilePathContext lootFilePath() {
		LootFilePathContext _localctx = new LootFilePathContext(Context, State);
		EnterRule(_localctx, 316, RULE_lootFilePath);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1689;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootToolContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public LootToolContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootTool; } }
	}

	[RuleVersion(0)]
	public LootToolContext lootTool() {
		LootToolContext _localctx = new LootToolContext(Context, State);
		EnterRule(_localctx, 318, RULE_lootTool);
		int _la;
		try {
			State = 1697;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__165:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1691;
				Match(T__165);
				}
				break;
			case T__166:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1692;
				Match(T__166);
				}
				break;
			case T__9:
			case IdString:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1694;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__9) {
					{
					State = 1693;
					Match(T__9);
					}
				}

				State = 1696;
				Match(IdString);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BlockContext : ParserRuleContext {
		public BlockContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_block; } }
	}

	[RuleVersion(0)]
	public BlockContext block() {
		BlockContext _localctx = new BlockContext(Context, State);
		EnterRule(_localctx, 320, RULE_block);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1699;
			Match(T__71);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LootModesContext lootModes() {
			return GetRuleContext<LootModesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LootReplaceContext lootReplace() {
			return GetRuleContext<LootReplaceContext>(0);
		}
		public LootOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootOptions; } }
	}

	[RuleVersion(0)]
	public LootOptionsContext lootOptions() {
		LootOptionsContext _localctx = new LootOptionsContext(Context, State);
		EnterRule(_localctx, 322, RULE_lootOptions);
		try {
			State = 1715;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__96:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1701;
				Match(T__96);
				State = 1702;
				selector();
				State = 1703;
				lootModes();
				}
				}
				break;
			case T__76:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1705;
				Match(T__76);
				State = 1706;
				pos3D();
				State = 1707;
				lootModes();
				}
				}
				break;
			case T__61:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1709;
				Match(T__61);
				State = 1710;
				lootReplace();
				}
				}
				break;
			case T__167:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1711;
				Match(T__167);
				State = 1712;
				pos3D();
				State = 1713;
				lootModes();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootReplaceContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemSlotContext itemSlot() {
			return GetRuleContext<ItemSlotContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LootModesContext lootModes() {
			return GetRuleContext<LootModesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		public LootReplaceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootReplace; } }
	}

	[RuleVersion(0)]
	public LootReplaceContext lootReplace() {
		LootReplaceContext _localctx = new LootReplaceContext(Context, State);
		EnterRule(_localctx, 324, RULE_lootReplace);
		try {
			State = 1727;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1717;
				Match(T__71);
				State = 1718;
				pos3D();
				State = 1719;
				itemSlot();
				State = 1720;
				lootModes();
				}
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1722;
				Match(T__72);
				State = 1723;
				selector();
				State = 1724;
				itemSlot();
				State = 1725;
				lootModes();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LootFilePathContext lootFilePath() {
			return GetRuleContext<LootFilePathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LootToolContext lootTool() {
			return GetRuleContext<LootToolContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		public LootModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootModes; } }
	}

	[RuleVersion(0)]
	public LootModesContext lootModes() {
		LootModesContext _localctx = new LootModesContext(Context, State);
		EnterRule(_localctx, 326, RULE_lootModes);
		try {
			State = 1742;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__168:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1729;
				Match(T__168);
				State = 1730;
				lootFilePath();
				State = 1731;
				pos3D();
				State = 1732;
				lootTool();
				}
				}
				break;
			case T__159:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1734;
				Match(T__159);
				State = 1735;
				singleSelector();
				}
				}
				break;
			case T__164:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1736;
				Match(T__164);
				State = 1737;
				lootFilePath();
				}
				}
				break;
			case T__169:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1738;
				Match(T__169);
				State = 1739;
				pos3D();
				State = 1740;
				lootTool();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ActionContext action() {
			return GetRuleContext<ActionContext>(0);
		}
		public MeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_meRadical; } }
	}

	[RuleVersion(0)]
	public MeRadicalContext meRadical() {
		MeRadicalContext _localctx = new MeRadicalContext(Context, State);
		EnterRule(_localctx, 328, RULE_meRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1744;
			Match(T__170);
			State = 1745;
			action();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ActionContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Any() { return GetToken(mccommandParser.Any, 0); }
		public ActionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_action; } }
	}

	[RuleVersion(0)]
	public ActionContext action() {
		ActionContext _localctx = new ActionContext(Context, State);
		EnterRule(_localctx, 330, RULE_action);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1747;
			Match(Any);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MsgRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MessageContext message() {
			return GetRuleContext<MessageContext>(0);
		}
		public MsgRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_msgRadical; } }
	}

	[RuleVersion(0)]
	public MsgRadicalContext msgRadical() {
		MsgRadicalContext _localctx = new MsgRadicalContext(Context, State);
		EnterRule(_localctx, 332, RULE_msgRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1749;
			Match(T__171);
			State = 1750;
			selector();
			State = 1751;
			message();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MessageContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Any() { return GetTokens(mccommandParser.Any); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Any(int i) {
			return GetToken(mccommandParser.Any, i);
		}
		public MessageContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_message; } }
	}

	[RuleVersion(0)]
	public MessageContext message() {
		MessageContext _localctx = new MessageContext(Context, State);
		EnterRule(_localctx, 334, RULE_message);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1754;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			do {
				{
				{
				State = 1753;
				Match(Any);
				}
				}
				State = 1756;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			} while ( _la==Any );
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ParticleRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ParticleIdContext particleId() {
			return GetRuleContext<ParticleIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext[] pos3D() {
			return GetRuleContexts<Pos3DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D(int i) {
			return GetRuleContext<Pos3DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ParticleSpeedAndCountContext particleSpeedAndCount() {
			return GetRuleContext<ParticleSpeedAndCountContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ParticleOptionsContext particleOptions() {
			return GetRuleContext<ParticleOptionsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public OptionalSelectorContext optionalSelector() {
			return GetRuleContext<OptionalSelectorContext>(0);
		}
		public ParticleRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_particleRadical; } }
	}

	[RuleVersion(0)]
	public ParticleRadicalContext particleRadical() {
		ParticleRadicalContext _localctx = new ParticleRadicalContext(Context, State);
		EnterRule(_localctx, 336, RULE_particleRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1758;
			Match(T__172);
			State = 1759;
			particleId();
			State = 1760;
			pos3D();
			State = 1761;
			Match(T__16);
			State = 1762;
			pos3D();
			State = 1763;
			Match(T__16);
			State = 1764;
			particleSpeedAndCount();
			State = 1765;
			particleOptions();
			State = 1766;
			optionalSelector();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RgbContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode PositiveNumber() { return GetToken(mccommandParser.PositiveNumber, 0); }
		public RgbContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_rgb; } }
	}

	[RuleVersion(0)]
	public RgbContext rgb() {
		RgbContext _localctx = new RgbContext(Context, State);
		EnterRule(_localctx, 338, RULE_rgb);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1768;
			Match(PositiveNumber);
			State = 1769;
			Match(T__16);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SizeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode PositiveNumber() { return GetToken(mccommandParser.PositiveNumber, 0); }
		public SizeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_size; } }
	}

	[RuleVersion(0)]
	public SizeContext size() {
		SizeContext _localctx = new SizeContext(Context, State);
		EnterRule(_localctx, 340, RULE_size);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1771;
			Match(PositiveNumber);
			State = 1772;
			Match(T__16);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ParticleSpeedAndCountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(mccommandParser.Int, 0); }
		public ParticleSpeedAndCountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_particleSpeedAndCount; } }
	}

	[RuleVersion(0)]
	public ParticleSpeedAndCountContext particleSpeedAndCount() {
		ParticleSpeedAndCountContext _localctx = new ParticleSpeedAndCountContext(Context, State);
		EnterRule(_localctx, 342, RULE_particleSpeedAndCount);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1774;
			Match(Number);
			State = 1775;
			Match(Int);
			State = 1776;
			Match(T__16);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GameTickContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Gametick() { return GetToken(mccommandParser.Gametick, 0); }
		public GameTickContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gameTick; } }
	}

	[RuleVersion(0)]
	public GameTickContext gameTick() {
		GameTickContext _localctx = new GameTickContext(Context, State);
		EnterRule(_localctx, 344, RULE_gameTick);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1778;
			Match(Gametick);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ParticleOptionsContext : ParserRuleContext {
		public ParticleOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_particleOptions; } }
	}

	[RuleVersion(0)]
	public ParticleOptionsContext particleOptions() {
		ParticleOptionsContext _localctx = new ParticleOptionsContext(Context, State);
		EnterRule(_localctx, 346, RULE_particleOptions);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1780;
			_la = TokenStream.LA(1);
			if ( !(_la==T__62 || _la==T__64) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AbsolutePosContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Number() { return GetTokens(mccommandParser.Number); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number(int i) {
			return GetToken(mccommandParser.Number, i);
		}
		public AbsolutePosContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_absolutePos; } }
	}

	[RuleVersion(0)]
	public AbsolutePosContext absolutePos() {
		AbsolutePosContext _localctx = new AbsolutePosContext(Context, State);
		EnterRule(_localctx, 348, RULE_absolutePos);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1782;
			Match(Number);
			State = 1783;
			Match(T__16);
			State = 1784;
			Match(Number);
			State = 1785;
			Match(T__16);
			State = 1786;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ParticleIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public ParticleIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_particleId; } }
	}

	[RuleVersion(0)]
	public ParticleIdContext particleId() {
		ParticleIdContext _localctx = new ParticleIdContext(Context, State);
		EnterRule(_localctx, 350, RULE_particleId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1788;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PlaceRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public PlaceModesContext placeModes() {
			return GetRuleContext<PlaceModesContext>(0);
		}
		public PlaceRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_placeRadical; } }
	}

	[RuleVersion(0)]
	public PlaceRadicalContext placeRadical() {
		PlaceRadicalContext _localctx = new PlaceRadicalContext(Context, State);
		EnterRule(_localctx, 352, RULE_placeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1790;
			Match(T__173);
			State = 1791;
			placeModes();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FeatureIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public FeatureIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_featureId; } }
	}

	[RuleVersion(0)]
	public FeatureIdContext featureId() {
		FeatureIdContext _localctx = new FeatureIdContext(Context, State);
		EnterRule(_localctx, 354, RULE_featureId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1793;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JigsawTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public JigsawTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jigsawTarget; } }
	}

	[RuleVersion(0)]
	public JigsawTargetContext jigsawTarget() {
		JigsawTargetContext _localctx = new JigsawTargetContext(Context, State);
		EnterRule(_localctx, 356, RULE_jigsawTarget);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1795;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JigsawFilePathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public JigsawFilePathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jigsawFilePath; } }
	}

	[RuleVersion(0)]
	public JigsawFilePathContext jigsawFilePath() {
		JigsawFilePathContext _localctx = new JigsawFilePathContext(Context, State);
		EnterRule(_localctx, 358, RULE_jigsawFilePath);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1797;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TemplateFilePathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public TemplateFilePathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_templateFilePath; } }
	}

	[RuleVersion(0)]
	public TemplateFilePathContext templateFilePath() {
		TemplateFilePathContext _localctx = new TemplateFilePathContext(Context, State);
		EnterRule(_localctx, 360, RULE_templateFilePath);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1799;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PlaceModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public FeatureIdContext featureId() {
			return GetRuleContext<FeatureIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JigsawFilePathContext jigsawFilePath() {
			return GetRuleContext<JigsawFilePathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JigsawTargetContext jigsawTarget() {
			return GetRuleContext<JigsawTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StructureIdContext structureId() {
			return GetRuleContext<StructureIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TemplateFilePathContext templateFilePath() {
			return GetRuleContext<TemplateFilePathContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PlaceRotationModesContext placeRotationModes() {
			return GetRuleContext<PlaceRotationModesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		public PlaceModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_placeModes; } }
	}

	[RuleVersion(0)]
	public PlaceModesContext placeModes() {
		PlaceModesContext _localctx = new PlaceModesContext(Context, State);
		EnterRule(_localctx, 362, RULE_placeModes);
		try {
			State = 1824;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__174:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1801;
				Match(T__174);
				State = 1802;
				featureId();
				State = 1803;
				pos3D();
				}
				}
				break;
			case T__175:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1805;
				Match(T__175);
				State = 1806;
				jigsawFilePath();
				State = 1807;
				jigsawTarget();
				State = 1808;
				@int();
				State = 1809;
				Match(T__16);
				State = 1810;
				pos3D();
				}
				}
				break;
			case T__163:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1812;
				Match(T__163);
				State = 1813;
				structureId();
				State = 1814;
				pos3D();
				}
				}
				break;
			case T__176:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1816;
				Match(T__176);
				State = 1817;
				templateFilePath();
				State = 1818;
				pos3D();
				State = 1819;
				placeRotationModes();
				State = 1820;
				number();
				State = 1821;
				Match(T__16);
				State = 1822;
				@int();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PlaceMirrorItemsContext : ParserRuleContext {
		public PlaceMirrorItemsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_placeMirrorItems; } }
	}

	[RuleVersion(0)]
	public PlaceMirrorItemsContext placeMirrorItems() {
		PlaceMirrorItemsContext _localctx = new PlaceMirrorItemsContext(Context, State);
		EnterRule(_localctx, 364, RULE_placeMirrorItems);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1826;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 178)) & ~0x3f) == 0 && ((1L << (_la - 178)) & 7L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PlaceRotationModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public PlaceMirrorItemsContext placeMirrorItems() {
			return GetRuleContext<PlaceMirrorItemsContext>(0);
		}
		public PlaceRotationModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_placeRotationModes; } }
	}

	[RuleVersion(0)]
	public PlaceRotationModesContext placeRotationModes() {
		PlaceRotationModesContext _localctx = new PlaceRotationModesContext(Context, State);
		EnterRule(_localctx, 366, RULE_placeRotationModes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1828;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 180)) & ~0x3f) == 0 && ((1L << (_la - 180)) & 15L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			State = 1829;
			placeMirrorItems();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PlaysoundRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SoundIdContext soundId() {
			return GetRuleContext<SoundIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SoundTypesContext soundTypes() {
			return GetRuleContext<SoundTypesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public VolumeContext volume() {
			return GetRuleContext<VolumeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PitchContext pitch() {
			return GetRuleContext<PitchContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MinVolumeContext minVolume() {
			return GetRuleContext<MinVolumeContext>(0);
		}
		public PlaysoundRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_playsoundRadical; } }
	}

	[RuleVersion(0)]
	public PlaysoundRadicalContext playsoundRadical() {
		PlaysoundRadicalContext _localctx = new PlaysoundRadicalContext(Context, State);
		EnterRule(_localctx, 368, RULE_playsoundRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1831;
			Match(T__183);
			State = 1832;
			soundId();
			State = 1833;
			soundTypes();
			State = 1834;
			selector();
			State = 1835;
			pos3D();
			State = 1836;
			volume();
			State = 1837;
			pitch();
			State = 1838;
			minVolume();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class VolumeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		public VolumeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_volume; } }
	}

	[RuleVersion(0)]
	public VolumeContext volume() {
		VolumeContext _localctx = new VolumeContext(Context, State);
		EnterRule(_localctx, 370, RULE_volume);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1840;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PitchContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		public PitchContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pitch; } }
	}

	[RuleVersion(0)]
	public PitchContext pitch() {
		PitchContext _localctx = new PitchContext(Context, State);
		EnterRule(_localctx, 372, RULE_pitch);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1842;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MinVolumeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		public MinVolumeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_minVolume; } }
	}

	[RuleVersion(0)]
	public MinVolumeContext minVolume() {
		MinVolumeContext _localctx = new MinVolumeContext(Context, State);
		EnterRule(_localctx, 374, RULE_minVolume);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1844;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SoundTypesContext : ParserRuleContext {
		public SoundTypesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_soundTypes; } }
	}

	[RuleVersion(0)]
	public SoundTypesContext soundTypes() {
		SoundTypesContext _localctx = new SoundTypesContext(Context, State);
		EnterRule(_localctx, 376, RULE_soundTypes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1846;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 185)) & ~0x3f) == 0 && ((1L << (_la - 185)) & 511L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PublishRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BoolContext @bool() {
			return GetRuleContext<BoolContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GamemodeValuesContext gamemodeValues() {
			return GetRuleContext<GamemodeValuesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PortContext port() {
			return GetRuleContext<PortContext>(0);
		}
		public PublishRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_publishRadical; } }
	}

	[RuleVersion(0)]
	public PublishRadicalContext publishRadical() {
		PublishRadicalContext _localctx = new PublishRadicalContext(Context, State);
		EnterRule(_localctx, 378, RULE_publishRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1848;
			Match(T__193);
			State = 1849;
			@bool();
			State = 1850;
			gamemodeValues();
			State = 1851;
			port();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PortContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public PortContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_port; } }
	}

	[RuleVersion(0)]
	public PortContext port() {
		PortContext _localctx = new PortContext(Context, State);
		EnterRule(_localctx, 380, RULE_port);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1853;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RecipeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public RecipeGiveOrTakeContext recipeGiveOrTake() {
			return GetRuleContext<RecipeGiveOrTakeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RecipeFilePathContext recipeFilePath() {
			return GetRuleContext<RecipeFilePathContext>(0);
		}
		public RecipeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_recipeRadical; } }
	}

	[RuleVersion(0)]
	public RecipeRadicalContext recipeRadical() {
		RecipeRadicalContext _localctx = new RecipeRadicalContext(Context, State);
		EnterRule(_localctx, 382, RULE_recipeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1855;
			Match(T__194);
			State = 1856;
			recipeGiveOrTake();
			State = 1857;
			selector();
			State = 1858;
			recipeFilePath();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RecipeFilePathContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public RecipeFilePathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_recipeFilePath; } }
	}

	[RuleVersion(0)]
	public RecipeFilePathContext recipeFilePath() {
		RecipeFilePathContext _localctx = new RecipeFilePathContext(Context, State);
		EnterRule(_localctx, 384, RULE_recipeFilePath);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1860;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RecipeGiveOrTakeContext : ParserRuleContext {
		public RecipeGiveOrTakeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_recipeGiveOrTake; } }
	}

	[RuleVersion(0)]
	public RecipeGiveOrTakeContext recipeGiveOrTake() {
		RecipeGiveOrTakeContext _localctx = new RecipeGiveOrTakeContext(Context, State);
		EnterRule(_localctx, 386, RULE_recipeGiveOrTake);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1862;
			_la = TokenStream.LA(1);
			if ( !(_la==T__96 || _la==T__195) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ReloadRadicalContext : ParserRuleContext {
		public ReloadRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_reloadRadical; } }
	}

	[RuleVersion(0)]
	public ReloadRadicalContext reloadRadical() {
		ReloadRadicalContext _localctx = new ReloadRadicalContext(Context, State);
		EnterRule(_localctx, 388, RULE_reloadRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1864;
			Match(T__196);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ReturnRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		public ReturnRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_returnRadical; } }
	}

	[RuleVersion(0)]
	public ReturnRadicalContext returnRadical() {
		ReturnRadicalContext _localctx = new ReturnRadicalContext(Context, State);
		EnterRule(_localctx, 390, RULE_returnRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1866;
			Match(T__197);
			State = 1867;
			@int();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RideRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RideModesContext rideModes() {
			return GetRuleContext<RideModesContext>(0);
		}
		public RideRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_rideRadical; } }
	}

	[RuleVersion(0)]
	public RideRadicalContext rideRadical() {
		RideRadicalContext _localctx = new RideRadicalContext(Context, State);
		EnterRule(_localctx, 392, RULE_rideRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1869;
			Match(T__198);
			State = 1870;
			singleSelector();
			State = 1871;
			rideModes();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RideModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		public RideModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_rideModes; } }
	}

	[RuleVersion(0)]
	public RideModesContext rideModes() {
		RideModesContext _localctx = new RideModesContext(Context, State);
		EnterRule(_localctx, 394, RULE_rideModes);
		try {
			State = 1876;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__199:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1873;
				Match(T__199);
				}
				break;
			case T__200:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1874;
				Match(T__200);
				State = 1875;
				singleSelector();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SayRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public MessageContext message() {
			return GetRuleContext<MessageContext>(0);
		}
		public SayRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_sayRadical; } }
	}

	[RuleVersion(0)]
	public SayRadicalContext sayRadical() {
		SayRadicalContext _localctx = new SayRadicalContext(Context, State);
		EnterRule(_localctx, 396, RULE_sayRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1878;
			Match(T__201);
			State = 1879;
			message();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScheduleRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ScheduleModesContext scheduleModes() {
			return GetRuleContext<ScheduleModesContext>(0);
		}
		public ScheduleRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scheduleRadical; } }
	}

	[RuleVersion(0)]
	public ScheduleRadicalContext scheduleRadical() {
		ScheduleRadicalContext _localctx = new ScheduleRadicalContext(Context, State);
		EnterRule(_localctx, 398, RULE_scheduleRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1881;
			Match(T__202);
			State = 1882;
			scheduleModes();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FunctionIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FilePath() { return GetToken(mccommandParser.FilePath, 0); }
		public FunctionIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_functionId; } }
	}

	[RuleVersion(0)]
	public FunctionIdContext functionId() {
		FunctionIdContext _localctx = new FunctionIdContext(Context, State);
		EnterRule(_localctx, 400, RULE_functionId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1884;
			Match(FilePath);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScheduleAppendOrReplaceContext : ParserRuleContext {
		public ScheduleAppendOrReplaceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scheduleAppendOrReplace; } }
	}

	[RuleVersion(0)]
	public ScheduleAppendOrReplaceContext scheduleAppendOrReplace() {
		ScheduleAppendOrReplaceContext _localctx = new ScheduleAppendOrReplaceContext(Context, State);
		EnterRule(_localctx, 402, RULE_scheduleAppendOrReplace);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1886;
			_la = TokenStream.LA(1);
			if ( !(_la==T__61 || _la==T__75) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScheduleModesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public FunctionIdContext functionId() {
			return GetRuleContext<FunctionIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScheduleAppendOrReplaceContext scheduleAppendOrReplace() {
			return GetRuleContext<ScheduleAppendOrReplaceContext>(0);
		}
		public ScheduleModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scheduleModes; } }
	}

	[RuleVersion(0)]
	public ScheduleModesContext scheduleModes() {
		ScheduleModesContext _localctx = new ScheduleModesContext(Context, State);
		EnterRule(_localctx, 404, RULE_scheduleModes);
		try {
			State = 1895;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__56:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1888;
				Match(T__56);
				State = 1889;
				functionId();
				}
				}
				break;
			case T__87:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1890;
				Match(T__87);
				State = 1891;
				functionId();
				State = 1892;
				number();
				State = 1893;
				scheduleAppendOrReplace();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardOptionsContext scoreboardOptions() {
			return GetRuleContext<ScoreboardOptionsContext>(0);
		}
		public ScoreboardRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardRadical; } }
	}

	[RuleVersion(0)]
	public ScoreboardRadicalContext scoreboardRadical() {
		ScoreboardRadicalContext _localctx = new ScoreboardRadicalContext(Context, State);
		EnterRule(_localctx, 406, RULE_scoreboardRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1897;
			Match(T__203);
			State = 1898;
			scoreboardOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardObjectivesBehaviorsContext scoreboardObjectivesBehaviors() {
			return GetRuleContext<ScoreboardObjectivesBehaviorsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardPlayersBehaviorsContext scoreboardPlayersBehaviors() {
			return GetRuleContext<ScoreboardPlayersBehaviorsContext>(0);
		}
		public ScoreboardOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardOptions; } }
	}

	[RuleVersion(0)]
	public ScoreboardOptionsContext scoreboardOptions() {
		ScoreboardOptionsContext _localctx = new ScoreboardOptionsContext(Context, State);
		EnterRule(_localctx, 408, RULE_scoreboardOptions);
		try {
			State = 1904;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__204:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1900;
				Match(T__204);
				State = 1901;
				scoreboardObjectivesBehaviors();
				}
				}
				break;
			case T__51:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1902;
				Match(T__51);
				State = 1903;
				scoreboardPlayersBehaviors();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardObjectiveContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ScoreboardObjective() { return GetToken(mccommandParser.ScoreboardObjective, 0); }
		public ScoreboardObjectiveContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardObjective; } }
	}

	[RuleVersion(0)]
	public ScoreboardObjectiveContext scoreboardObjective() {
		ScoreboardObjectiveContext _localctx = new ScoreboardObjectiveContext(Context, State);
		EnterRule(_localctx, 410, RULE_scoreboardObjective);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1906;
			Match(ScoreboardObjective);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardTypeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ScoreboardType() { return GetToken(mccommandParser.ScoreboardType, 0); }
		public ScoreboardTypeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardType; } }
	}

	[RuleVersion(0)]
	public ScoreboardTypeContext scoreboardType() {
		ScoreboardTypeContext _localctx = new ScoreboardTypeContext(Context, State);
		EnterRule(_localctx, 412, RULE_scoreboardType);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1908;
			Match(ScoreboardType);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public ValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_value; } }
	}

	[RuleVersion(0)]
	public ValueContext value() {
		ValueContext _localctx = new ValueContext(Context, State);
		EnterRule(_localctx, 414, RULE_value);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1910;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardHeartsOrIntegerContext : ParserRuleContext {
		public ScoreboardHeartsOrIntegerContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardHeartsOrInteger; } }
	}

	[RuleVersion(0)]
	public ScoreboardHeartsOrIntegerContext scoreboardHeartsOrInteger() {
		ScoreboardHeartsOrIntegerContext _localctx = new ScoreboardHeartsOrIntegerContext(Context, State);
		EnterRule(_localctx, 416, RULE_scoreboardHeartsOrInteger);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1912;
			_la = TokenStream.LA(1);
			if ( !(_la==T__205 || _la==T__206) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardOperatorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Equal() { return GetToken(mccommandParser.Equal, 0); }
		public ScoreboardOperatorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardOperator; } }
	}

	[RuleVersion(0)]
	public ScoreboardOperatorContext scoreboardOperator() {
		ScoreboardOperatorContext _localctx = new ScoreboardOperatorContext(Context, State);
		EnterRule(_localctx, 418, RULE_scoreboardOperator);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1914;
			_la = TokenStream.LA(1);
			if ( !(_la==T__110 || ((((_la - 208)) & ~0x3f) == 0 && ((1L << (_la - 208)) & 127L) != 0) || _la==Equal) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardSlotsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ScoreboardSlots() { return GetToken(mccommandParser.ScoreboardSlots, 0); }
		public ScoreboardSlotsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardSlots; } }
	}

	[RuleVersion(0)]
	public ScoreboardSlotsContext scoreboardSlots() {
		ScoreboardSlotsContext _localctx = new ScoreboardSlotsContext(Context, State);
		EnterRule(_localctx, 420, RULE_scoreboardSlots);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1916;
			Match(ScoreboardSlots);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DisplaynameContext : ParserRuleContext {
		public DisplaynameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_displayname; } }
	}

	[RuleVersion(0)]
	public DisplaynameContext displayname() {
		DisplaynameContext _localctx = new DisplaynameContext(Context, State);
		EnterRule(_localctx, 422, RULE_displayname);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1918;
			Match(T__214);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RendertypeContext : ParserRuleContext {
		public RendertypeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_rendertype; } }
	}

	[RuleVersion(0)]
	public RendertypeContext rendertype() {
		RendertypeContext _localctx = new RendertypeContext(Context, State);
		EnterRule(_localctx, 424, RULE_rendertype);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1920;
			Match(T__215);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardObjectivesBehaviorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardObjectiveContext scoreboardObjective() {
			return GetRuleContext<ScoreboardObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardTypeContext scoreboardType() {
			return GetRuleContext<ScoreboardTypeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TargetObjectiveContext targetObjective() {
			return GetRuleContext<TargetObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DisplaynameContext displayname() {
			return GetRuleContext<DisplaynameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RendertypeContext rendertype() {
			return GetRuleContext<RendertypeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardHeartsOrIntegerContext scoreboardHeartsOrInteger() {
			return GetRuleContext<ScoreboardHeartsOrIntegerContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardSlotsContext scoreboardSlots() {
			return GetRuleContext<ScoreboardSlotsContext>(0);
		}
		public ScoreboardObjectivesBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardObjectivesBehaviors; } }
	}

	[RuleVersion(0)]
	public ScoreboardObjectivesBehaviorsContext scoreboardObjectivesBehaviors() {
		ScoreboardObjectivesBehaviorsContext _localctx = new ScoreboardObjectivesBehaviorsContext(Context, State);
		EnterRule(_localctx, 426, RULE_scoreboardObjectivesBehaviors);
		try {
			State = 1944;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1922;
				Match(T__43);
				State = 1923;
				scoreboardObjective();
				State = 1924;
				scoreboardType();
				State = 1925;
				jsonComponent();
				}
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1927;
				Match(T__49);
				}
				break;
			case T__70:
			case T__215:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1936;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__70:
					{
					State = 1928;
					Match(T__70);
					State = 1929;
					targetObjective();
					{
					State = 1930;
					displayname();
					State = 1931;
					jsonComponent();
					}
					}
					break;
				case T__215:
					{
					{
					State = 1933;
					rendertype();
					State = 1934;
					scoreboardHeartsOrInteger();
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1938;
				Match(T__44);
				State = 1939;
				targetObjective();
				}
				}
				break;
			case T__216:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 1940;
				Match(T__216);
				State = 1941;
				scoreboardSlots();
				State = 1942;
				targetObjective();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ScoreboardPlayersBehaviorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext[] selector() {
			return GetRuleContexts<SelectorContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector(int i) {
			return GetRuleContext<SelectorContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TargetObjectiveContext[] targetObjective() {
			return GetRuleContexts<TargetObjectiveContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public TargetObjectiveContext targetObjective(int i) {
			return GetRuleContext<TargetObjectiveContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ValueContext value() {
			return GetRuleContext<ValueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardObjectiveContext scoreboardObjective() {
			return GetRuleContext<ScoreboardObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ScoreboardOperatorContext scoreboardOperator() {
			return GetRuleContext<ScoreboardOperatorContext>(0);
		}
		public ScoreboardPlayersBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_scoreboardPlayersBehaviors; } }
	}

	[RuleVersion(0)]
	public ScoreboardPlayersBehaviorsContext scoreboardPlayersBehaviors() {
		ScoreboardPlayersBehaviorsContext _localctx = new ScoreboardPlayersBehaviorsContext(Context, State);
		EnterRule(_localctx, 428, RULE_scoreboardPlayersBehaviors);
		try {
			State = 1982;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 1946;
				Match(T__43);
				State = 1947;
				selector();
				State = 1948;
				targetObjective();
				State = 1949;
				value();
				}
				}
				break;
			case T__80:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 1951;
				Match(T__80);
				State = 1952;
				selector();
				State = 1953;
				targetObjective();
				}
				}
				break;
			case T__40:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 1955;
				Match(T__40);
				State = 1956;
				singleSelector();
				State = 1957;
				scoreboardObjective();
				}
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 1959;
				Match(T__49);
				State = 1960;
				singleSelector();
				}
				}
				break;
			case T__217:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 1961;
				Match(T__217);
				State = 1962;
				selector();
				State = 1963;
				targetObjective();
				State = 1964;
				scoreboardOperator();
				State = 1965;
				selector();
				State = 1966;
				targetObjective();
				}
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 1968;
				Match(T__44);
				State = 1969;
				selector();
				State = 1970;
				scoreboardObjective();
				State = 1971;
				value();
				}
				}
				break;
			case T__218:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 1973;
				Match(T__218);
				State = 1974;
				selector();
				State = 1975;
				targetObjective();
				}
				}
				break;
			case T__42:
				EnterOuterAlt(_localctx, 8);
				{
				{
				State = 1977;
				Match(T__42);
				State = 1978;
				selector();
				State = 1979;
				targetObjective();
				State = 1980;
				value();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SeedRadicalContext : ParserRuleContext {
		public SeedRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_seedRadical; } }
	}

	[RuleVersion(0)]
	public SeedRadicalContext seedRadical() {
		SeedRadicalContext _localctx = new SeedRadicalContext(Context, State);
		EnterRule(_localctx, 430, RULE_seedRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1984;
			Match(T__219);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SetblockRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockIdContext blockId() {
			return GetRuleContext<BlockIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SetblockModesContext setblockModes() {
			return GetRuleContext<SetblockModesContext>(0);
		}
		public SetblockRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_setblockRadical; } }
	}

	[RuleVersion(0)]
	public SetblockRadicalContext setblockRadical() {
		SetblockRadicalContext _localctx = new SetblockRadicalContext(Context, State);
		EnterRule(_localctx, 432, RULE_setblockRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1986;
			Match(T__220);
			State = 1987;
			pos3D();
			State = 1988;
			blockId();
			State = 1989;
			setblockModes();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SetblockModesContext : ParserRuleContext {
		public SetblockModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_setblockModes; } }
	}

	[RuleVersion(0)]
	public SetblockModesContext setblockModes() {
		SetblockModesContext _localctx = new SetblockModesContext(Context, State);
		EnterRule(_localctx, 434, RULE_setblockModes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1991;
			_la = TokenStream.LA(1);
			if ( !(_la==T__61 || _la==T__146 || _la==T__148) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SetworldspawnRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		public SetworldspawnRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_setworldspawnRadical; } }
	}

	[RuleVersion(0)]
	public SetworldspawnRadicalContext setworldspawnRadical() {
		SetworldspawnRadicalContext _localctx = new SetworldspawnRadicalContext(Context, State);
		EnterRule(_localctx, 436, RULE_setworldspawnRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1993;
			Match(T__221);
			State = 1994;
			pos3D();
			State = 1995;
			number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SpawnpointRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		public SpawnpointRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_spawnpointRadical; } }
	}

	[RuleVersion(0)]
	public SpawnpointRadicalContext spawnpointRadical() {
		SpawnpointRadicalContext _localctx = new SpawnpointRadicalContext(Context, State);
		EnterRule(_localctx, 438, RULE_spawnpointRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1997;
			Match(T__222);
			State = 1998;
			selector();
			State = 1999;
			pos3D();
			State = 2000;
			number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SpectateRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext[] singleSelector() {
			return GetRuleContexts<SingleSelectorContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector(int i) {
			return GetRuleContext<SingleSelectorContext>(i);
		}
		public SpectateRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_spectateRadical; } }
	}

	[RuleVersion(0)]
	public SpectateRadicalContext spectateRadical() {
		SpectateRadicalContext _localctx = new SpectateRadicalContext(Context, State);
		EnterRule(_localctx, 440, RULE_spectateRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2002;
			Match(T__223);
			State = 2003;
			singleSelector();
			State = 2004;
			singleSelector();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SpreadplayersRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext pos2D() {
			return GetRuleContext<Pos2DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SpreadDistanceContext spreadDistance() {
			return GetRuleContext<SpreadDistanceContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MaxRangeContext maxRange() {
			return GetRuleContext<MaxRangeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SpreadplayersOptionsContext spreadplayersOptions() {
			return GetRuleContext<SpreadplayersOptionsContext>(0);
		}
		public SpreadplayersRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_spreadplayersRadical; } }
	}

	[RuleVersion(0)]
	public SpreadplayersRadicalContext spreadplayersRadical() {
		SpreadplayersRadicalContext _localctx = new SpreadplayersRadicalContext(Context, State);
		EnterRule(_localctx, 442, RULE_spreadplayersRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2006;
			Match(T__224);
			State = 2007;
			pos2D();
			State = 2008;
			spreadDistance();
			State = 2009;
			Match(T__16);
			State = 2010;
			maxRange();
			State = 2011;
			spreadplayersOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SpreadplayersOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BoolContext @bool() {
			return GetRuleContext<BoolContext>(0);
		}
		public SpreadplayersOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_spreadplayersOptions; } }
	}

	[RuleVersion(0)]
	public SpreadplayersOptionsContext spreadplayersOptions() {
		SpreadplayersOptionsContext _localctx = new SpreadplayersOptionsContext(Context, State);
		EnterRule(_localctx, 444, RULE_spreadplayersOptions);
		try {
			State = 2023;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__225:
			case T__226:
				EnterOuterAlt(_localctx, 1);
				{
				State = 2016;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__225:
					{
					State = 2013;
					Match(T__225);
					}
					break;
				case T__226:
					{
					State = 2014;
					Match(T__226);
					State = 2015;
					selector();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case T__227:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 2018;
				Match(T__227);
				State = 2019;
				@int();
				State = 2020;
				@bool();
				State = 2021;
				selector();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SpreadDistanceContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		public SpreadDistanceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_spreadDistance; } }
	}

	[RuleVersion(0)]
	public SpreadDistanceContext spreadDistance() {
		SpreadDistanceContext _localctx = new SpreadDistanceContext(Context, State);
		EnterRule(_localctx, 446, RULE_spreadDistance);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2025;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MaxRangeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Number() { return GetToken(mccommandParser.Number, 0); }
		public MaxRangeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_maxRange; } }
	}

	[RuleVersion(0)]
	public MaxRangeContext maxRange() {
		MaxRangeContext _localctx = new MaxRangeContext(Context, State);
		EnterRule(_localctx, 448, RULE_maxRange);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2027;
			Match(Number);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RespectTeamsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(mccommandParser.Bool, 0); }
		public RespectTeamsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_respectTeams; } }
	}

	[RuleVersion(0)]
	public RespectTeamsContext respectTeams() {
		RespectTeamsContext _localctx = new RespectTeamsContext(Context, State);
		EnterRule(_localctx, 450, RULE_respectTeams);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2029;
			Match(Bool);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class UnderContext : ParserRuleContext {
		public UnderContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_under; } }
	}

	[RuleVersion(0)]
	public UnderContext under() {
		UnderContext _localctx = new UnderContext(Context, State);
		EnterRule(_localctx, 452, RULE_under);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2031;
			Match(T__227);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StopsoundRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StopsoundTypesContext stopsoundTypes() {
			return GetRuleContext<StopsoundTypesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SoundIdContext soundId() {
			return GetRuleContext<SoundIdContext>(0);
		}
		public StopsoundRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_stopsoundRadical; } }
	}

	[RuleVersion(0)]
	public StopsoundRadicalContext stopsoundRadical() {
		StopsoundRadicalContext _localctx = new StopsoundRadicalContext(Context, State);
		EnterRule(_localctx, 454, RULE_stopsoundRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2033;
			Match(T__228);
			State = 2034;
			selector();
			State = 2035;
			stopsoundTypes();
			State = 2036;
			soundId();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SoundIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode SoundId() { return GetToken(mccommandParser.SoundId, 0); }
		public SoundIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_soundId; } }
	}

	[RuleVersion(0)]
	public SoundIdContext soundId() {
		SoundIdContext _localctx = new SoundIdContext(Context, State);
		EnterRule(_localctx, 456, RULE_soundId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2038;
			Match(SoundId);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StopsoundTypesContext : ParserRuleContext {
		public StopsoundTypesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_stopsoundTypes; } }
	}

	[RuleVersion(0)]
	public StopsoundTypesContext stopsoundTypes() {
		StopsoundTypesContext _localctx = new StopsoundTypesContext(Context, State);
		EnterRule(_localctx, 458, RULE_stopsoundTypes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2040;
			_la = TokenStream.LA(1);
			if ( !(_la==T__71 || ((((_la - 185)) & ~0x3f) == 0 && ((1L << (_la - 185)) & 35184372089343L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SummonRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public EntityIdContext entityId() {
			return GetRuleContext<EntityIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D() {
			return GetRuleContext<Pos3DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		public SummonRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_summonRadical; } }
	}

	[RuleVersion(0)]
	public SummonRadicalContext summonRadical() {
		SummonRadicalContext _localctx = new SummonRadicalContext(Context, State);
		EnterRule(_localctx, 460, RULE_summonRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2042;
			Match(T__140);
			State = 2043;
			entityId();
			State = 2044;
			pos3D();
			State = 2045;
			jsonComponent();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TagRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TagOptionsContext tagOptions() {
			return GetRuleContext<TagOptionsContext>(0);
		}
		public TagRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tagRadical; } }
	}

	[RuleVersion(0)]
	public TagRadicalContext tagRadical() {
		TagRadicalContext _localctx = new TagRadicalContext(Context, State);
		EnterRule(_localctx, 462, RULE_tagRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2047;
			Match(T__230);
			State = 2048;
			selector();
			State = 2049;
			tagOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TagOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TagValueContext tagValue() {
			return GetRuleContext<TagValueContext>(0);
		}
		public TagOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tagOptions; } }
	}

	[RuleVersion(0)]
	public TagOptionsContext tagOptions() {
		TagOptionsContext _localctx = new TagOptionsContext(Context, State);
		EnterRule(_localctx, 464, RULE_tagOptions);
		try {
			State = 2057;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
			case T__44:
				EnterOuterAlt(_localctx, 1);
				{
				State = 2054;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__43:
					{
					State = 2051;
					Match(T__43);
					}
					break;
				case T__44:
					{
					State = 2052;
					Match(T__44);
					State = 2053;
					tagValue();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 2);
				{
				State = 2056;
				Match(T__49);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TagValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public TagValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tagValue; } }
	}

	[RuleVersion(0)]
	public TagValueContext tagValue() {
		TagValueContext _localctx = new TagValueContext(Context, State);
		EnterRule(_localctx, 466, RULE_tagValue);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2059;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TeamOptionsContext teamOptions() {
			return GetRuleContext<TeamOptionsContext>(0);
		}
		public TeamRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamRadical; } }
	}

	[RuleVersion(0)]
	public TeamRadicalContext teamRadical() {
		TeamRadicalContext _localctx = new TeamRadicalContext(Context, State);
		EnterRule(_localctx, 468, RULE_teamRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2061;
			Match(T__231);
			State = 2062;
			teamOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode TeamName() { return GetToken(mccommandParser.TeamName, 0); }
		public TeamIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamId; } }
	}

	[RuleVersion(0)]
	public TeamIdContext teamId() {
		TeamIdContext _localctx = new TeamIdContext(Context, State);
		EnterRule(_localctx, 470, RULE_teamId);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2064;
			Match(TeamName);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode TeamName() { return GetToken(mccommandParser.TeamName, 0); }
		public TeamNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamName; } }
	}

	[RuleVersion(0)]
	public TeamNameContext teamName() {
		TeamNameContext _localctx = new TeamNameContext(Context, State);
		EnterRule(_localctx, 472, RULE_teamName);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2066;
			Match(TeamName);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamCollisionRuleContext : ParserRuleContext {
		public TeamCollisionRuleContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamCollisionRule; } }
	}

	[RuleVersion(0)]
	public TeamCollisionRuleContext teamCollisionRule() {
		TeamCollisionRuleContext _localctx = new TeamCollisionRuleContext(Context, State);
		EnterRule(_localctx, 474, RULE_teamCollisionRule);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2068;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 233)) & ~0x3f) == 0 && ((1L << (_la - 233)) & 15L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamColorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public TeamColorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamColor; } }
	}

	[RuleVersion(0)]
	public TeamColorContext teamColor() {
		TeamColorContext _localctx = new TeamColorContext(Context, State);
		EnterRule(_localctx, 476, RULE_teamColor);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2070;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamVisibilityContext : ParserRuleContext {
		public TeamVisibilityContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamVisibility; } }
	}

	[RuleVersion(0)]
	public TeamVisibilityContext teamVisibility() {
		TeamVisibilityContext _localctx = new TeamVisibilityContext(Context, State);
		EnterRule(_localctx, 478, RULE_teamVisibility);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2072;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 233)) & ~0x3f) == 0 && ((1L << (_la - 233)) & 51L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TeamNameContext teamName() {
			return GetRuleContext<TeamNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeamIdContext teamId() {
			return GetRuleContext<TeamIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public OptionalSelectorContext optionalSelector() {
			return GetRuleContext<OptionalSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeamAttributesContext teamAttributes() {
			return GetRuleContext<TeamAttributesContext>(0);
		}
		public TeamOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamOptions; } }
	}

	[RuleVersion(0)]
	public TeamOptionsContext teamOptions() {
		TeamOptionsContext _localctx = new TeamOptionsContext(Context, State);
		EnterRule(_localctx, 480, RULE_teamOptions);
		try {
			State = 2094;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 2074;
				Match(T__43);
				State = 2075;
				teamName();
				State = 2076;
				jsonComponent();
				}
				}
				break;
			case T__238:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 2078;
				Match(T__238);
				State = 2079;
				teamId();
				}
				}
				break;
			case T__239:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 2080;
				Match(T__239);
				State = 2081;
				teamId();
				State = 2082;
				optionalSelector();
				}
				}
				break;
			case T__240:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 2084;
				Match(T__240);
				State = 2085;
				selector();
				}
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 2086;
				Match(T__49);
				State = 2087;
				teamId();
				}
				}
				break;
			case T__70:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 2088;
				Match(T__70);
				State = 2089;
				teamId();
				State = 2090;
				teamAttributes();
				}
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 2092;
				Match(T__44);
				State = 2093;
				teamId();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeamAttributesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TeamCollisionRuleContext teamCollisionRule() {
			return GetRuleContext<TeamCollisionRuleContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeamColorContext teamColor() {
			return GetRuleContext<TeamColorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeamVisibilityContext teamVisibility() {
			return GetRuleContext<TeamVisibilityContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BoolContext @bool() {
			return GetRuleContext<BoolContext>(0);
		}
		public TeamAttributesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teamAttributes; } }
	}

	[RuleVersion(0)]
	public TeamAttributesContext teamAttributes() {
		TeamAttributesContext _localctx = new TeamAttributesContext(Context, State);
		EnterRule(_localctx, 482, RULE_teamAttributes);
		int _la;
		try {
			State = 2112;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__241:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 2096;
				Match(T__241);
				State = 2097;
				teamCollisionRule();
				}
				}
				break;
			case T__53:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 2098;
				Match(T__53);
				State = 2099;
				teamColor();
				}
				}
				break;
			case T__242:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 2100;
				Match(T__242);
				State = 2101;
				teamVisibility();
				}
				}
				break;
			case T__243:
				EnterOuterAlt(_localctx, 4);
				{
				{
				State = 2102;
				Match(T__243);
				State = 2103;
				jsonComponent();
				}
				}
				break;
			case T__244:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 2104;
				Match(T__244);
				State = 2105;
				@bool();
				}
				}
				break;
			case T__245:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 2106;
				Match(T__245);
				State = 2107;
				teamVisibility();
				}
				}
				break;
			case T__246:
			case T__247:
				EnterOuterAlt(_localctx, 7);
				{
				{
				State = 2108;
				_la = TokenStream.LA(1);
				if ( !(_la==T__246 || _la==T__247) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 2109;
				jsonComponent();
				}
				}
				break;
			case T__248:
				EnterOuterAlt(_localctx, 8);
				{
				{
				State = 2110;
				Match(T__248);
				State = 2111;
				@bool();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeammsgRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public MessageContext message() {
			return GetRuleContext<MessageContext>(0);
		}
		public TeammsgRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teammsgRadical; } }
	}

	[RuleVersion(0)]
	public TeammsgRadicalContext teammsgRadical() {
		TeammsgRadicalContext _localctx = new TeammsgRadicalContext(Context, State);
		EnterRule(_localctx, 484, RULE_teammsgRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2114;
			Match(T__249);
			State = 2115;
			message();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeleportRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TeleportOptionsContext teleportOptions() {
			return GetRuleContext<TeleportOptionsContext>(0);
		}
		public TeleportRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teleportRadical; } }
	}

	[RuleVersion(0)]
	public TeleportRadicalContext teleportRadical() {
		TeleportRadicalContext _localctx = new TeleportRadicalContext(Context, State);
		EnterRule(_localctx, 486, RULE_teleportRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2117;
			Match(T__250);
			State = 2118;
			teleportOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeleportEyesOrFeetContext : ParserRuleContext {
		public TeleportEyesOrFeetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teleportEyesOrFeet; } }
	}

	[RuleVersion(0)]
	public TeleportEyesOrFeetContext teleportEyesOrFeet() {
		TeleportEyesOrFeetContext _localctx = new TeleportEyesOrFeetContext(Context, State);
		EnterRule(_localctx, 488, RULE_teleportEyesOrFeet);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2120;
			_la = TokenStream.LA(1);
			if ( !(_la==T__100 || _la==T__101) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FacingContext : ParserRuleContext {
		public FacingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_facing; } }
	}

	[RuleVersion(0)]
	public FacingContext facing() {
		FacingContext _localctx = new FacingContext(Context, State);
		EnterRule(_localctx, 490, RULE_facing);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2122;
			Match(T__131);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EntityContext : ParserRuleContext {
		public EntityContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_entity; } }
	}

	[RuleVersion(0)]
	public EntityContext entity() {
		EntityContext _localctx = new EntityContext(Context, State);
		EnterRule(_localctx, 492, RULE_entity);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2124;
			Match(T__72);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TeleportOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext[] pos3D() {
			return GetRuleContexts<Pos3DContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos3DContext pos3D(int i) {
			return GetRuleContext<Pos3DContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SingleSelectorContext singleSelector() {
			return GetRuleContext<SingleSelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext pos2D() {
			return GetRuleContext<Pos2DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FacingContext facing() {
			return GetRuleContext<FacingContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityContext entity() {
			return GetRuleContext<EntityContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TeleportEyesOrFeetContext teleportEyesOrFeet() {
			return GetRuleContext<TeleportEyesOrFeetContext>(0);
		}
		public TeleportOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_teleportOptions; } }
	}

	[RuleVersion(0)]
	public TeleportOptionsContext teleportOptions() {
		TeleportOptionsContext _localctx = new TeleportOptionsContext(Context, State);
		EnterRule(_localctx, 494, RULE_teleportOptions);
		try {
			State = 2143;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case Coordinates:
				EnterOuterAlt(_localctx, 1);
				{
				State = 2126;
				pos3D();
				}
				break;
			case T__14:
			case T__15:
			case T__18:
			case T__19:
			case T__21:
			case T__22:
			case T__24:
			case T__25:
			case T__27:
			case T__28:
			case PlayerName:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 2127;
				selector();
				State = 2141;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__14:
				case T__15:
				case T__17:
				case T__18:
				case T__19:
				case T__20:
				case T__21:
				case T__22:
				case T__23:
				case T__24:
				case T__25:
				case T__26:
				case T__27:
				case T__28:
				case T__29:
				case PlayerName:
					{
					State = 2128;
					singleSelector();
					}
					break;
				case Coordinates:
					{
					State = 2139;
					ErrorHandler.Sync(this);
					switch ( Interpreter.AdaptivePredict(TokenStream,106,Context) ) {
					case 1:
						{
						State = 2129;
						pos3D();
						{
						State = 2130;
						facing();
						State = 2136;
						ErrorHandler.Sync(this);
						switch (TokenStream.LA(1)) {
						case T__72:
							{
							{
							State = 2131;
							entity();
							State = 2132;
							singleSelector();
							State = 2133;
							teleportEyesOrFeet();
							}
							}
							break;
						case Coordinates:
							{
							State = 2135;
							pos3D();
							}
							break;
						default:
							throw new NoViableAltException(this);
						}
						}
						}
						break;
					case 2:
						{
						State = 2138;
						pos2D();
						}
						break;
					}
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TellRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MessageContext message() {
			return GetRuleContext<MessageContext>(0);
		}
		public TellRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tellRadical; } }
	}

	[RuleVersion(0)]
	public TellRadicalContext tellRadical() {
		TellRadicalContext _localctx = new TellRadicalContext(Context, State);
		EnterRule(_localctx, 496, RULE_tellRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2145;
			Match(T__251);
			State = 2146;
			selector();
			State = 2147;
			message();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TellrawRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		public TellrawRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tellrawRadical; } }
	}

	[RuleVersion(0)]
	public TellrawRadicalContext tellrawRadical() {
		TellrawRadicalContext _localctx = new TellrawRadicalContext(Context, State);
		EnterRule(_localctx, 498, RULE_tellrawRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2149;
			Match(T__252);
			State = 2150;
			selector();
			State = 2151;
			jsonComponent();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TimeRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TimeOptionsContext timeOptions() {
			return GetRuleContext<TimeOptionsContext>(0);
		}
		public TimeRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_timeRadical; } }
	}

	[RuleVersion(0)]
	public TimeRadicalContext timeRadical() {
		TimeRadicalContext _localctx = new TimeRadicalContext(Context, State);
		EnterRule(_localctx, 500, RULE_timeRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2153;
			Match(T__253);
			State = 2154;
			timeOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TimeDataTypesContext : ParserRuleContext {
		public TimeDataTypesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_timeDataTypes; } }
	}

	[RuleVersion(0)]
	public TimeDataTypesContext timeDataTypes() {
		TimeDataTypesContext _localctx = new TimeDataTypesContext(Context, State);
		EnterRule(_localctx, 502, RULE_timeDataTypes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2156;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 255)) & ~0x3f) == 0 && ((1L << (_la - 255)) & 7L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TimeTimePointsContext : ParserRuleContext {
		public TimeTimePointsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_timeTimePoints; } }
	}

	[RuleVersion(0)]
	public TimeTimePointsContext timeTimePoints() {
		TimeTimePointsContext _localctx = new TimeTimePointsContext(Context, State);
		EnterRule(_localctx, 504, RULE_timeTimePoints);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2158;
			_la = TokenStream.LA(1);
			if ( !(((((_la - 255)) & ~0x3f) == 0 && ((1L << (_la - 255)) & 57L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TimeOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public GameTimeValueContext gameTimeValue() {
			return GetRuleContext<GameTimeValueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TimeDataTypesContext timeDataTypes() {
			return GetRuleContext<TimeDataTypesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TimeTimePointsContext timeTimePoints() {
			return GetRuleContext<TimeTimePointsContext>(0);
		}
		public TimeOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_timeOptions; } }
	}

	[RuleVersion(0)]
	public TimeOptionsContext timeOptions() {
		TimeOptionsContext _localctx = new TimeOptionsContext(Context, State);
		EnterRule(_localctx, 506, RULE_timeOptions);
		try {
			State = 2169;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 2160;
				Match(T__43);
				State = 2161;
				gameTimeValue();
				}
				}
				break;
			case T__142:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 2162;
				Match(T__142);
				State = 2163;
				timeDataTypes();
				}
				}
				break;
			case T__42:
			case GameTimeValue:
				EnterOuterAlt(_localctx, 3);
				{
				State = 2167;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__42:
					{
					State = 2164;
					Match(T__42);
					State = 2165;
					timeTimePoints();
					}
					break;
				case GameTimeValue:
					{
					State = 2166;
					gameTimeValue();
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TitleRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public SelectorContext selector() {
			return GetRuleContext<SelectorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TitleBehaviorsContext titleBehaviors() {
			return GetRuleContext<TitleBehaviorsContext>(0);
		}
		public TitleRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_titleRadical; } }
	}

	[RuleVersion(0)]
	public TitleRadicalContext titleRadical() {
		TitleRadicalContext _localctx = new TitleRadicalContext(Context, State);
		EnterRule(_localctx, 508, RULE_titleRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2171;
			Match(T__260);
			State = 2172;
			selector();
			State = 2173;
			titleBehaviors();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TitleBehaviorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public JsonComponentContext jsonComponent() {
			return GetRuleContext<JsonComponentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FadeInContext fadeIn() {
			return GetRuleContext<FadeInContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public StayContext stay() {
			return GetRuleContext<StayContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FadeOutContext fadeOut() {
			return GetRuleContext<FadeOutContext>(0);
		}
		public TitleBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_titleBehaviors; } }
	}

	[RuleVersion(0)]
	public TitleBehaviorsContext titleBehaviors() {
		TitleBehaviorsContext _localctx = new TitleBehaviorsContext(Context, State);
		EnterRule(_localctx, 510, RULE_titleBehaviors);
		int _la;
		try {
			State = 2183;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__260:
			case T__261:
			case T__262:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 2175;
				_la = TokenStream.LA(1);
				if ( !(((((_la - 261)) & ~0x3f) == 0 && ((1L << (_la - 261)) & 7L) != 0)) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				State = 2176;
				jsonComponent();
				}
				}
				break;
			case T__56:
			case T__218:
				EnterOuterAlt(_localctx, 2);
				{
				State = 2177;
				_la = TokenStream.LA(1);
				if ( !(_la==T__56 || _la==T__218) ) {
				ErrorHandler.RecoverInline(this);
				}
				else {
					ErrorHandler.ReportMatch(this);
				    Consume();
				}
				}
				break;
			case T__263:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 2178;
				Match(T__263);
				State = 2179;
				fadeIn();
				State = 2180;
				stay();
				State = 2181;
				fadeOut();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FadeInContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public FadeInContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fadeIn; } }
	}

	[RuleVersion(0)]
	public FadeInContext fadeIn() {
		FadeInContext _localctx = new FadeInContext(Context, State);
		EnterRule(_localctx, 512, RULE_fadeIn);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2185;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class StayContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public StayContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_stay; } }
	}

	[RuleVersion(0)]
	public StayContext stay() {
		StayContext _localctx = new StayContext(Context, State);
		EnterRule(_localctx, 514, RULE_stay);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2187;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FadeOutContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Integer() { return GetToken(mccommandParser.Integer, 0); }
		public FadeOutContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fadeOut; } }
	}

	[RuleVersion(0)]
	public FadeOutContext fadeOut() {
		FadeOutContext _localctx = new FadeOutContext(Context, State);
		EnterRule(_localctx, 516, RULE_fadeOut);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2189;
			Match(Integer);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TmRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public MessageContext message() {
			return GetRuleContext<MessageContext>(0);
		}
		public TmRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tmRadical; } }
	}

	[RuleVersion(0)]
	public TmRadicalContext tmRadical() {
		TmRadicalContext _localctx = new TmRadicalContext(Context, State);
		EnterRule(_localctx, 518, RULE_tmRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2191;
			Match(T__264);
			State = 2192;
			message();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TpRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TeleportOptionsContext teleportOptions() {
			return GetRuleContext<TeleportOptionsContext>(0);
		}
		public TpRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tpRadical; } }
	}

	[RuleVersion(0)]
	public TpRadicalContext tpRadical() {
		TpRadicalContext _localctx = new TpRadicalContext(Context, State);
		EnterRule(_localctx, 520, RULE_tpRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2194;
			Match(T__265);
			State = 2195;
			teleportOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TriggerRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public TriggerObjectiveContext triggerObjective() {
			return GetRuleContext<TriggerObjectiveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TriggerBehaviorsContext triggerBehaviors() {
			return GetRuleContext<TriggerBehaviorsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ValueContext value() {
			return GetRuleContext<ValueContext>(0);
		}
		public TriggerRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_triggerRadical; } }
	}

	[RuleVersion(0)]
	public TriggerRadicalContext triggerRadical() {
		TriggerRadicalContext _localctx = new TriggerRadicalContext(Context, State);
		EnterRule(_localctx, 522, RULE_triggerRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2197;
			Match(T__266);
			State = 2198;
			triggerObjective();
			State = 2199;
			triggerBehaviors();
			State = 2200;
			value();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TriggerObjectiveContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(mccommandParser.IdString, 0); }
		public TriggerObjectiveContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_triggerObjective; } }
	}

	[RuleVersion(0)]
	public TriggerObjectiveContext triggerObjective() {
		TriggerObjectiveContext _localctx = new TriggerObjectiveContext(Context, State);
		EnterRule(_localctx, 524, RULE_triggerObjective);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2202;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TriggerBehaviorsContext : ParserRuleContext {
		public TriggerBehaviorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_triggerBehaviors; } }
	}

	[RuleVersion(0)]
	public TriggerBehaviorsContext triggerBehaviors() {
		TriggerBehaviorsContext _localctx = new TriggerBehaviorsContext(Context, State);
		EnterRule(_localctx, 526, RULE_triggerBehaviors);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2204;
			_la = TokenStream.LA(1);
			if ( !(_la==T__42 || _la==T__43) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WeatherRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public WeatherMembersContext weatherMembers() {
			return GetRuleContext<WeatherMembersContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		public WeatherRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_weatherRadical; } }
	}

	[RuleVersion(0)]
	public WeatherRadicalContext weatherRadical() {
		WeatherRadicalContext _localctx = new WeatherRadicalContext(Context, State);
		EnterRule(_localctx, 528, RULE_weatherRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2206;
			Match(T__192);
			State = 2207;
			weatherMembers();
			State = 2208;
			number();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WeatherMembersContext : ParserRuleContext {
		public WeatherMembersContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_weatherMembers; } }
	}

	[RuleVersion(0)]
	public WeatherMembersContext weatherMembers() {
		WeatherMembersContext _localctx = new WeatherMembersContext(Context, State);
		EnterRule(_localctx, 530, RULE_weatherMembers);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2210;
			_la = TokenStream.LA(1);
			if ( !(_la==T__56 || _la==T__267 || _la==T__268) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WorldborderRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public WorldborderOptionsContext worldborderOptions() {
			return GetRuleContext<WorldborderOptionsContext>(0);
		}
		public WorldborderRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_worldborderRadical; } }
	}

	[RuleVersion(0)]
	public WorldborderRadicalContext worldborderRadical() {
		WorldborderRadicalContext _localctx = new WorldborderRadicalContext(Context, State);
		EnterRule(_localctx, 532, RULE_worldborderRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2212;
			Match(T__269);
			State = 2213;
			worldborderOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WorldborderOptionsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public NumberContext number() {
			return GetRuleContext<NumberContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IntContext @int() {
			return GetRuleContext<IntContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Pos2DContext pos2D() {
			return GetRuleContext<Pos2DContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public WorldborderModesContext worldborderModes() {
			return GetRuleContext<WorldborderModesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public WorldborderWarningTypesContext worldborderWarningTypes() {
			return GetRuleContext<WorldborderWarningTypesContext>(0);
		}
		public WorldborderOptionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_worldborderOptions; } }
	}

	[RuleVersion(0)]
	public WorldborderOptionsContext worldborderOptions() {
		WorldborderOptionsContext _localctx = new WorldborderOptionsContext(Context, State);
		EnterRule(_localctx, 534, RULE_worldborderOptions);
		try {
			State = 2234;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__43:
				EnterOuterAlt(_localctx, 1);
				{
				{
				State = 2215;
				Match(T__43);
				State = 2216;
				number();
				State = 2217;
				@int();
				}
				}
				break;
			case T__270:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 2219;
				Match(T__270);
				State = 2220;
				pos2D();
				}
				}
				break;
			case T__65:
				EnterOuterAlt(_localctx, 3);
				{
				{
				State = 2221;
				Match(T__65);
				State = 2222;
				worldborderModes();
				State = 2223;
				number();
				}
				}
				break;
			case T__40:
				EnterOuterAlt(_localctx, 4);
				{
				State = 2225;
				Match(T__40);
				}
				break;
			case T__42:
				EnterOuterAlt(_localctx, 5);
				{
				{
				State = 2226;
				Match(T__42);
				State = 2227;
				number();
				State = 2228;
				@int();
				}
				}
				break;
			case T__271:
				EnterOuterAlt(_localctx, 6);
				{
				{
				State = 2230;
				Match(T__271);
				State = 2231;
				worldborderWarningTypes();
				State = 2232;
				@int();
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WorldborderWarningTypesContext : ParserRuleContext {
		public WorldborderWarningTypesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_worldborderWarningTypes; } }
	}

	[RuleVersion(0)]
	public WorldborderWarningTypesContext worldborderWarningTypes() {
		WorldborderWarningTypesContext _localctx = new WorldborderWarningTypesContext(Context, State);
		EnterRule(_localctx, 536, RULE_worldborderWarningTypes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2236;
			_la = TokenStream.LA(1);
			if ( !(_la==T__253 || _la==T__272) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WorldborderModesContext : ParserRuleContext {
		public WorldborderModesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_worldborderModes; } }
	}

	[RuleVersion(0)]
	public WorldborderModesContext worldborderModes() {
		WorldborderModesContext _localctx = new WorldborderModesContext(Context, State);
		EnterRule(_localctx, 538, RULE_worldborderModes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2238;
			_la = TokenStream.LA(1);
			if ( !(_la==T__273 || _la==T__274) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class XpRadicalContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ExperienceOptionsContext experienceOptions() {
			return GetRuleContext<ExperienceOptionsContext>(0);
		}
		public XpRadicalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_xpRadical; } }
	}

	[RuleVersion(0)]
	public XpRadicalContext xpRadical() {
		XpRadicalContext _localctx = new XpRadicalContext(Context, State);
		EnterRule(_localctx, 540, RULE_xpRadical);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 2240;
			Match(T__275);
			State = 2241;
			experienceOptions();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	private static int[] _serializedATN = {
		4,1,355,2244,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,
		7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,
		2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,
		2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,
		2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,
		2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,
		2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,
		2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,
		2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,
		2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,
		2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
		2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
		2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,
		2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,
		2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,
		2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,
		2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,
		2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,
		2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,7,128,
		2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,
		2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,
		2,141,7,141,2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,2,146,7,146,
		2,147,7,147,2,148,7,148,2,149,7,149,2,150,7,150,2,151,7,151,2,152,7,152,
		2,153,7,153,2,154,7,154,2,155,7,155,2,156,7,156,2,157,7,157,2,158,7,158,
		2,159,7,159,2,160,7,160,2,161,7,161,2,162,7,162,2,163,7,163,2,164,7,164,
		2,165,7,165,2,166,7,166,2,167,7,167,2,168,7,168,2,169,7,169,2,170,7,170,
		2,171,7,171,2,172,7,172,2,173,7,173,2,174,7,174,2,175,7,175,2,176,7,176,
		2,177,7,177,2,178,7,178,2,179,7,179,2,180,7,180,2,181,7,181,2,182,7,182,
		2,183,7,183,2,184,7,184,2,185,7,185,2,186,7,186,2,187,7,187,2,188,7,188,
		2,189,7,189,2,190,7,190,2,191,7,191,2,192,7,192,2,193,7,193,2,194,7,194,
		2,195,7,195,2,196,7,196,2,197,7,197,2,198,7,198,2,199,7,199,2,200,7,200,
		2,201,7,201,2,202,7,202,2,203,7,203,2,204,7,204,2,205,7,205,2,206,7,206,
		2,207,7,207,2,208,7,208,2,209,7,209,2,210,7,210,2,211,7,211,2,212,7,212,
		2,213,7,213,2,214,7,214,2,215,7,215,2,216,7,216,2,217,7,217,2,218,7,218,
		2,219,7,219,2,220,7,220,2,221,7,221,2,222,7,222,2,223,7,223,2,224,7,224,
		2,225,7,225,2,226,7,226,2,227,7,227,2,228,7,228,2,229,7,229,2,230,7,230,
		2,231,7,231,2,232,7,232,2,233,7,233,2,234,7,234,2,235,7,235,2,236,7,236,
		2,237,7,237,2,238,7,238,2,239,7,239,2,240,7,240,2,241,7,241,2,242,7,242,
		2,243,7,243,2,244,7,244,2,245,7,245,2,246,7,246,2,247,7,247,2,248,7,248,
		2,249,7,249,2,250,7,250,2,251,7,251,2,252,7,252,2,253,7,253,2,254,7,254,
		2,255,7,255,2,256,7,256,2,257,7,257,2,258,7,258,2,259,7,259,2,260,7,260,
		2,261,7,261,2,262,7,262,2,263,7,263,2,264,7,264,2,265,7,265,2,266,7,266,
		2,267,7,267,2,268,7,268,2,269,7,269,2,270,7,270,1,0,1,0,1,1,1,1,1,2,1,
		2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,556,8,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,
		1,7,1,8,1,8,1,9,1,9,3,9,570,8,9,1,10,1,10,1,10,1,10,5,10,576,8,10,10,10,
		12,10,579,9,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,14,
		1,14,1,14,1,14,5,14,595,8,14,10,14,12,14,598,9,14,1,14,1,14,1,15,1,15,
		1,15,1,15,1,15,3,15,607,8,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,
		20,1,20,1,20,5,20,620,8,20,10,20,12,20,623,9,20,1,21,1,21,1,22,1,22,1,
		23,1,23,1,23,3,23,632,8,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,
		1,28,1,29,1,29,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,
		1,33,3,33,658,8,33,1,33,1,33,5,33,662,8,33,10,33,12,33,665,9,33,1,33,1,
		33,1,33,1,33,3,33,671,8,33,1,33,1,33,5,33,675,8,33,10,33,12,33,678,9,33,
		1,33,1,33,1,33,1,33,3,33,684,8,33,1,33,1,33,5,33,688,8,33,10,33,12,33,
		691,9,33,1,33,1,33,1,33,1,33,3,33,697,8,33,1,33,1,33,5,33,701,8,33,10,
		33,12,33,704,9,33,1,33,1,33,1,33,1,33,3,33,710,8,33,1,33,1,33,5,33,714,
		8,33,10,33,12,33,717,9,33,1,33,1,33,3,33,721,8,33,1,34,1,34,1,34,3,34,
		726,8,34,1,34,1,34,5,34,730,8,34,10,34,12,34,733,9,34,1,34,1,34,1,34,3,
		34,738,8,34,1,34,1,34,5,34,742,8,34,10,34,12,34,745,9,34,1,34,1,34,1,34,
		3,34,750,8,34,1,34,1,34,5,34,754,8,34,10,34,12,34,757,9,34,1,34,1,34,1,
		34,3,34,762,8,34,1,34,1,34,5,34,766,8,34,10,34,12,34,769,9,34,1,34,1,34,
		1,34,3,34,774,8,34,1,34,1,34,5,34,778,8,34,10,34,12,34,781,9,34,1,34,3,
		34,784,8,34,1,35,1,35,1,35,3,35,789,8,35,1,35,1,35,5,35,793,8,35,10,35,
		12,35,796,9,35,1,35,1,35,1,35,1,35,3,35,802,8,35,1,35,1,35,5,35,806,8,
		35,10,35,12,35,809,9,35,1,35,1,35,1,35,1,35,3,35,815,8,35,1,35,1,35,5,
		35,819,8,35,10,35,12,35,822,9,35,1,35,1,35,1,35,1,35,3,35,828,8,35,1,35,
		1,35,5,35,832,8,35,10,35,12,35,835,9,35,1,35,1,35,1,35,1,35,3,35,841,8,
		35,1,35,1,35,5,35,845,8,35,10,35,12,35,848,9,35,1,35,1,35,3,35,852,8,35,
		1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
		1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
		1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
		1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
		1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,36,919,8,36,1,37,1,37,1,
		37,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,41,1,41,3,
		41,937,8,41,1,41,1,41,1,41,1,41,1,41,1,41,3,41,945,8,41,1,42,1,42,1,42,
		1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,3,43,960,8,43,1,44,1,
		44,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,
		46,1,46,1,46,1,46,3,46,981,8,46,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,50,
		1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
		1,51,1,51,3,51,1007,8,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,55,
		1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,3,55,1029,8,55,
		1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,1,59,
		1,59,1,59,1,59,1,59,1,59,1,59,3,59,1051,8,59,1,60,1,60,1,60,1,60,1,60,
		1,60,1,60,1,60,3,60,1061,8,60,1,61,1,61,1,61,1,61,1,61,1,61,3,61,1069,
		8,61,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,65,1,65,
		1,66,1,66,1,66,1,66,1,66,1,66,1,66,3,66,1091,8,66,1,67,1,67,1,67,1,68,
		1,68,1,69,1,69,1,70,1,70,1,70,5,70,1103,8,70,10,70,12,70,1106,9,70,1,71,
		1,71,1,71,5,71,1111,8,71,10,71,12,71,1114,9,71,1,72,1,72,1,72,1,72,1,72,
		1,72,1,72,1,72,3,72,1124,8,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,
		1,73,1,73,1,73,1,73,1,73,1,73,1,73,3,73,1141,8,73,1,74,1,74,1,74,1,74,
		1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,3,74,1155,8,74,1,75,1,75,1,75,
		1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,
		1,75,3,75,1175,8,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,
		1,76,1,76,3,76,1189,8,76,1,77,1,77,1,77,1,77,1,77,1,77,3,77,1197,8,77,
		1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,3,78,1211,
		8,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,
		1,79,1,79,3,79,1228,8,79,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,
		1,80,1,80,1,80,3,80,1242,8,80,1,81,1,81,1,81,1,82,1,82,1,83,1,83,1,84,
		1,84,1,84,1,84,1,84,1,84,3,84,1257,8,84,1,85,1,85,1,85,1,85,1,85,1,85,
		1,85,1,85,3,85,1267,8,85,1,86,1,86,1,86,1,87,1,87,1,87,1,87,3,87,1276,
		8,87,1,88,1,88,1,88,1,89,1,89,1,89,1,90,1,90,1,91,1,91,1,91,1,92,1,92,
		1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,3,92,1303,
		8,92,3,92,1305,8,92,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,
		1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,100,1,100,1,101,1,101,1,101,1,102,
		1,102,1,103,1,103,1,104,1,104,1,105,1,105,1,106,1,106,1,107,1,107,1,108,
		1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
		1,108,1,108,1,108,3,108,1357,8,108,1,109,1,109,1,109,1,109,1,109,1,109,
		1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,
		1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,
		1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,3,109,
		1400,8,109,1,110,1,110,1,111,1,111,1,111,1,111,1,111,1,111,1,111,3,111,
		1411,8,111,3,111,1413,8,111,1,112,1,112,1,113,1,113,1,114,1,114,1,114,
		1,114,3,114,1423,8,114,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,
		1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,
		1,115,1,115,1,115,1,115,1,115,1,115,1,115,3,115,1452,8,115,1,116,1,116,
		1,116,1,117,1,117,1,117,1,117,1,117,1,117,1,117,1,117,3,117,1465,8,117,
		1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,
		1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,
		1,118,1,118,1,118,1,118,1,118,1,118,1,118,3,118,1498,8,118,1,118,1,118,
		1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,1,118,
		1,118,1,118,1,118,3,118,1517,8,118,1,119,1,119,1,119,1,120,1,120,1,121,
		1,121,1,122,1,122,1,123,1,123,1,123,1,123,1,123,1,123,1,123,1,123,1,123,
		1,123,3,123,1538,8,123,1,124,1,124,1,124,1,124,1,124,1,124,1,125,1,125,
		1,125,3,125,1549,8,125,1,126,1,126,1,126,1,126,1,126,1,126,1,127,1,127,
		1,127,1,128,1,128,1,128,1,129,1,129,1,129,1,129,3,129,1567,8,129,1,130,
		1,130,1,130,1,130,1,130,1,130,1,130,1,130,3,130,1577,8,130,1,131,1,131,
		1,131,1,132,1,132,1,132,1,132,1,133,1,133,1,133,1,133,1,134,1,134,1,135,
		1,135,1,136,1,136,1,136,1,136,1,136,1,137,1,137,1,137,1,138,1,138,1,139,
		1,139,1,139,1,139,1,140,1,140,1,141,1,141,1,142,1,142,1,142,1,142,3,142,
		1616,8,142,1,143,1,143,1,143,1,143,1,143,1,143,3,143,1624,8,143,1,144,
		1,144,1,144,1,144,1,144,1,144,1,144,1,144,1,144,1,144,3,144,1636,8,144,
		1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,3,145,1648,
		8,145,1,146,1,146,1,146,1,147,1,147,1,148,1,148,1,148,1,148,1,149,4,149,
		1660,8,149,11,149,12,149,1661,1,150,1,150,1,150,1,151,1,151,1,151,1,152,
		1,152,1,153,1,153,1,153,1,154,1,154,1,155,1,155,1,156,1,156,1,156,1,156,
		1,156,1,156,3,156,1685,8,156,1,157,1,157,1,157,1,158,1,158,1,159,1,159,
		1,159,3,159,1695,8,159,1,159,3,159,1698,8,159,1,160,1,160,1,161,1,161,
		1,161,1,161,1,161,1,161,1,161,1,161,1,161,1,161,1,161,1,161,1,161,1,161,
		3,161,1716,8,161,1,162,1,162,1,162,1,162,1,162,1,162,1,162,1,162,1,162,
		1,162,3,162,1728,8,162,1,163,1,163,1,163,1,163,1,163,1,163,1,163,1,163,
		1,163,1,163,1,163,1,163,1,163,3,163,1743,8,163,1,164,1,164,1,164,1,165,
		1,165,1,166,1,166,1,166,1,166,1,167,4,167,1755,8,167,11,167,12,167,1756,
		1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,169,1,169,
		1,169,1,170,1,170,1,170,1,171,1,171,1,171,1,171,1,172,1,172,1,173,1,173,
		1,174,1,174,1,174,1,174,1,174,1,174,1,175,1,175,1,176,1,176,1,176,1,177,
		1,177,1,178,1,178,1,179,1,179,1,180,1,180,1,181,1,181,1,181,1,181,1,181,
		1,181,1,181,1,181,1,181,1,181,1,181,1,181,1,181,1,181,1,181,1,181,1,181,
		1,181,1,181,1,181,1,181,1,181,1,181,3,181,1825,8,181,1,182,1,182,1,183,
		1,183,1,183,1,184,1,184,1,184,1,184,1,184,1,184,1,184,1,184,1,184,1,185,
		1,185,1,186,1,186,1,187,1,187,1,188,1,188,1,189,1,189,1,189,1,189,1,189,
		1,190,1,190,1,191,1,191,1,191,1,191,1,191,1,192,1,192,1,193,1,193,1,194,
		1,194,1,195,1,195,1,195,1,196,1,196,1,196,1,196,1,197,1,197,1,197,3,197,
		1877,8,197,1,198,1,198,1,198,1,199,1,199,1,199,1,200,1,200,1,201,1,201,
		1,202,1,202,1,202,1,202,1,202,1,202,1,202,3,202,1896,8,202,1,203,1,203,
		1,203,1,204,1,204,1,204,1,204,3,204,1905,8,204,1,205,1,205,1,206,1,206,
		1,207,1,207,1,208,1,208,1,209,1,209,1,210,1,210,1,211,1,211,1,212,1,212,
		1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,1,213,
		1,213,1,213,3,213,1937,8,213,1,213,1,213,1,213,1,213,1,213,1,213,3,213,
		1945,8,213,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,
		1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,
		1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,1,214,
		1,214,1,214,3,214,1983,8,214,1,215,1,215,1,216,1,216,1,216,1,216,1,216,
		1,217,1,217,1,218,1,218,1,218,1,218,1,219,1,219,1,219,1,219,1,219,1,220,
		1,220,1,220,1,220,1,221,1,221,1,221,1,221,1,221,1,221,1,221,1,222,1,222,
		1,222,3,222,2017,8,222,1,222,1,222,1,222,1,222,1,222,3,222,2024,8,222,
		1,223,1,223,1,224,1,224,1,225,1,225,1,226,1,226,1,227,1,227,1,227,1,227,
		1,227,1,228,1,228,1,229,1,229,1,230,1,230,1,230,1,230,1,230,1,231,1,231,
		1,231,1,231,1,232,1,232,1,232,3,232,2055,8,232,1,232,3,232,2058,8,232,
		1,233,1,233,1,234,1,234,1,234,1,235,1,235,1,236,1,236,1,237,1,237,1,238,
		1,238,1,239,1,239,1,240,1,240,1,240,1,240,1,240,1,240,1,240,1,240,1,240,
		1,240,1,240,1,240,1,240,1,240,1,240,1,240,1,240,1,240,1,240,1,240,3,240,
		2095,8,240,1,241,1,241,1,241,1,241,1,241,1,241,1,241,1,241,1,241,1,241,
		1,241,1,241,1,241,1,241,1,241,1,241,3,241,2113,8,241,1,242,1,242,1,242,
		1,243,1,243,1,243,1,244,1,244,1,245,1,245,1,246,1,246,1,247,1,247,1,247,
		1,247,1,247,1,247,1,247,1,247,1,247,1,247,3,247,2137,8,247,1,247,3,247,
		2140,8,247,3,247,2142,8,247,3,247,2144,8,247,1,248,1,248,1,248,1,248,1,
		249,1,249,1,249,1,249,1,250,1,250,1,250,1,251,1,251,1,252,1,252,1,253,
		1,253,1,253,1,253,1,253,1,253,1,253,3,253,2168,8,253,3,253,2170,8,253,
		1,254,1,254,1,254,1,254,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,
		3,255,2184,8,255,1,256,1,256,1,257,1,257,1,258,1,258,1,259,1,259,1,259,
		1,260,1,260,1,260,1,261,1,261,1,261,1,261,1,261,1,262,1,262,1,263,1,263,
		1,264,1,264,1,264,1,264,1,265,1,265,1,266,1,266,1,266,1,267,1,267,1,267,
		1,267,1,267,1,267,1,267,1,267,1,267,1,267,1,267,1,267,1,267,1,267,1,267,
		1,267,1,267,1,267,1,267,3,267,2235,8,267,1,268,1,268,1,269,1,269,1,270,
		1,270,1,270,1,270,18,621,663,676,689,702,715,731,743,755,767,779,794,807,
		820,833,846,1104,1112,0,271,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,
		32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,
		80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,
		120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,
		156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,
		192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,
		228,230,232,234,236,238,240,242,244,246,248,250,252,254,256,258,260,262,
		264,266,268,270,272,274,276,278,280,282,284,286,288,290,292,294,296,298,
		300,302,304,306,308,310,312,314,316,318,320,322,324,326,328,330,332,334,
		336,338,340,342,344,346,348,350,352,354,356,358,360,362,364,366,368,370,
		372,374,376,378,380,382,384,386,388,390,392,394,396,398,400,402,404,406,
		408,410,412,414,416,418,420,422,424,426,428,430,432,434,436,438,440,442,
		444,446,448,450,452,454,456,458,460,462,464,466,468,470,472,474,476,478,
		480,482,484,486,488,490,492,494,496,498,500,502,504,506,508,510,512,514,
		516,518,520,522,524,526,528,530,532,534,536,538,540,0,44,1,0,4,9,1,0,11,
		14,1,0,32,33,2,0,41,41,43,43,2,0,44,44,47,48,2,0,46,46,51,53,1,0,61,62,
		1,0,63,65,1,0,80,81,2,0,65,65,93,95,1,0,101,102,2,0,61,61,104,104,2,0,
		46,46,51,51,2,0,111,113,322,322,1,0,115,122,1,0,123,126,1,0,128,129,2,
		0,67,67,103,103,1,0,133,134,1,0,144,145,1,0,43,44,1,0,147,150,2,0,280,
		280,295,295,1,0,89,90,2,0,63,63,65,65,1,0,178,180,1,0,180,183,1,0,185,
		193,2,0,97,97,196,196,2,0,62,62,76,76,1,0,206,207,3,0,111,111,208,214,
		322,322,3,0,62,62,147,147,149,149,3,0,72,72,185,193,230,230,1,0,233,236,
		2,0,233,234,237,238,1,0,247,248,1,0,255,257,2,0,255,255,258,260,1,0,261,
		263,2,0,57,57,219,219,2,0,57,57,268,269,2,0,254,254,273,273,1,0,274,275,
		2273,0,542,1,0,0,0,2,544,1,0,0,0,4,546,1,0,0,0,6,555,1,0,0,0,8,557,1,0,
		0,0,10,559,1,0,0,0,12,561,1,0,0,0,14,563,1,0,0,0,16,565,1,0,0,0,18,569,
		1,0,0,0,20,571,1,0,0,0,22,582,1,0,0,0,24,584,1,0,0,0,26,586,1,0,0,0,28,
		590,1,0,0,0,30,606,1,0,0,0,32,608,1,0,0,0,34,610,1,0,0,0,36,612,1,0,0,
		0,38,614,1,0,0,0,40,616,1,0,0,0,42,624,1,0,0,0,44,626,1,0,0,0,46,631,1,
		0,0,0,48,633,1,0,0,0,50,635,1,0,0,0,52,637,1,0,0,0,54,639,1,0,0,0,56,641,
		1,0,0,0,58,643,1,0,0,0,60,645,1,0,0,0,62,649,1,0,0,0,64,652,1,0,0,0,66,
		720,1,0,0,0,68,783,1,0,0,0,70,851,1,0,0,0,72,918,1,0,0,0,74,920,1,0,0,
		0,76,925,1,0,0,0,78,927,1,0,0,0,80,929,1,0,0,0,82,944,1,0,0,0,84,946,1,
		0,0,0,86,959,1,0,0,0,88,961,1,0,0,0,90,963,1,0,0,0,92,980,1,0,0,0,94,982,
		1,0,0,0,96,984,1,0,0,0,98,987,1,0,0,0,100,989,1,0,0,0,102,1006,1,0,0,0,
		104,1008,1,0,0,0,106,1010,1,0,0,0,108,1012,1,0,0,0,110,1028,1,0,0,0,112,
		1030,1,0,0,0,114,1035,1,0,0,0,116,1037,1,0,0,0,118,1050,1,0,0,0,120,1060,
		1,0,0,0,122,1068,1,0,0,0,124,1070,1,0,0,0,126,1072,1,0,0,0,128,1079,1,
		0,0,0,130,1081,1,0,0,0,132,1090,1,0,0,0,134,1092,1,0,0,0,136,1095,1,0,
		0,0,138,1097,1,0,0,0,140,1099,1,0,0,0,142,1107,1,0,0,0,144,1123,1,0,0,
		0,146,1140,1,0,0,0,148,1154,1,0,0,0,150,1174,1,0,0,0,152,1188,1,0,0,0,
		154,1196,1,0,0,0,156,1210,1,0,0,0,158,1227,1,0,0,0,160,1241,1,0,0,0,162,
		1243,1,0,0,0,164,1246,1,0,0,0,166,1248,1,0,0,0,168,1256,1,0,0,0,170,1266,
		1,0,0,0,172,1268,1,0,0,0,174,1275,1,0,0,0,176,1277,1,0,0,0,178,1280,1,
		0,0,0,180,1283,1,0,0,0,182,1285,1,0,0,0,184,1304,1,0,0,0,186,1306,1,0,
		0,0,188,1308,1,0,0,0,190,1310,1,0,0,0,192,1312,1,0,0,0,194,1314,1,0,0,
		0,196,1316,1,0,0,0,198,1321,1,0,0,0,200,1323,1,0,0,0,202,1325,1,0,0,0,
		204,1328,1,0,0,0,206,1330,1,0,0,0,208,1332,1,0,0,0,210,1334,1,0,0,0,212,
		1336,1,0,0,0,214,1338,1,0,0,0,216,1356,1,0,0,0,218,1399,1,0,0,0,220,1401,
		1,0,0,0,222,1412,1,0,0,0,224,1414,1,0,0,0,226,1416,1,0,0,0,228,1422,1,
		0,0,0,230,1451,1,0,0,0,232,1453,1,0,0,0,234,1464,1,0,0,0,236,1516,1,0,
		0,0,238,1518,1,0,0,0,240,1521,1,0,0,0,242,1523,1,0,0,0,244,1525,1,0,0,
		0,246,1537,1,0,0,0,248,1539,1,0,0,0,250,1548,1,0,0,0,252,1550,1,0,0,0,
		254,1556,1,0,0,0,256,1559,1,0,0,0,258,1566,1,0,0,0,260,1576,1,0,0,0,262,
		1578,1,0,0,0,264,1581,1,0,0,0,266,1585,1,0,0,0,268,1589,1,0,0,0,270,1591,
		1,0,0,0,272,1593,1,0,0,0,274,1598,1,0,0,0,276,1601,1,0,0,0,278,1603,1,
		0,0,0,280,1607,1,0,0,0,282,1609,1,0,0,0,284,1615,1,0,0,0,286,1623,1,0,
		0,0,288,1635,1,0,0,0,290,1647,1,0,0,0,292,1649,1,0,0,0,294,1652,1,0,0,
		0,296,1654,1,0,0,0,298,1659,1,0,0,0,300,1663,1,0,0,0,302,1666,1,0,0,0,
		304,1669,1,0,0,0,306,1671,1,0,0,0,308,1674,1,0,0,0,310,1676,1,0,0,0,312,
		1684,1,0,0,0,314,1686,1,0,0,0,316,1689,1,0,0,0,318,1697,1,0,0,0,320,1699,
		1,0,0,0,322,1715,1,0,0,0,324,1727,1,0,0,0,326,1742,1,0,0,0,328,1744,1,
		0,0,0,330,1747,1,0,0,0,332,1749,1,0,0,0,334,1754,1,0,0,0,336,1758,1,0,
		0,0,338,1768,1,0,0,0,340,1771,1,0,0,0,342,1774,1,0,0,0,344,1778,1,0,0,
		0,346,1780,1,0,0,0,348,1782,1,0,0,0,350,1788,1,0,0,0,352,1790,1,0,0,0,
		354,1793,1,0,0,0,356,1795,1,0,0,0,358,1797,1,0,0,0,360,1799,1,0,0,0,362,
		1824,1,0,0,0,364,1826,1,0,0,0,366,1828,1,0,0,0,368,1831,1,0,0,0,370,1840,
		1,0,0,0,372,1842,1,0,0,0,374,1844,1,0,0,0,376,1846,1,0,0,0,378,1848,1,
		0,0,0,380,1853,1,0,0,0,382,1855,1,0,0,0,384,1860,1,0,0,0,386,1862,1,0,
		0,0,388,1864,1,0,0,0,390,1866,1,0,0,0,392,1869,1,0,0,0,394,1876,1,0,0,
		0,396,1878,1,0,0,0,398,1881,1,0,0,0,400,1884,1,0,0,0,402,1886,1,0,0,0,
		404,1895,1,0,0,0,406,1897,1,0,0,0,408,1904,1,0,0,0,410,1906,1,0,0,0,412,
		1908,1,0,0,0,414,1910,1,0,0,0,416,1912,1,0,0,0,418,1914,1,0,0,0,420,1916,
		1,0,0,0,422,1918,1,0,0,0,424,1920,1,0,0,0,426,1944,1,0,0,0,428,1982,1,
		0,0,0,430,1984,1,0,0,0,432,1986,1,0,0,0,434,1991,1,0,0,0,436,1993,1,0,
		0,0,438,1997,1,0,0,0,440,2002,1,0,0,0,442,2006,1,0,0,0,444,2023,1,0,0,
		0,446,2025,1,0,0,0,448,2027,1,0,0,0,450,2029,1,0,0,0,452,2031,1,0,0,0,
		454,2033,1,0,0,0,456,2038,1,0,0,0,458,2040,1,0,0,0,460,2042,1,0,0,0,462,
		2047,1,0,0,0,464,2057,1,0,0,0,466,2059,1,0,0,0,468,2061,1,0,0,0,470,2064,
		1,0,0,0,472,2066,1,0,0,0,474,2068,1,0,0,0,476,2070,1,0,0,0,478,2072,1,
		0,0,0,480,2094,1,0,0,0,482,2112,1,0,0,0,484,2114,1,0,0,0,486,2117,1,0,
		0,0,488,2120,1,0,0,0,490,2122,1,0,0,0,492,2124,1,0,0,0,494,2143,1,0,0,
		0,496,2145,1,0,0,0,498,2149,1,0,0,0,500,2153,1,0,0,0,502,2156,1,0,0,0,
		504,2158,1,0,0,0,506,2169,1,0,0,0,508,2171,1,0,0,0,510,2183,1,0,0,0,512,
		2185,1,0,0,0,514,2187,1,0,0,0,516,2189,1,0,0,0,518,2191,1,0,0,0,520,2194,
		1,0,0,0,522,2197,1,0,0,0,524,2202,1,0,0,0,526,2204,1,0,0,0,528,2206,1,
		0,0,0,530,2210,1,0,0,0,532,2212,1,0,0,0,534,2234,1,0,0,0,536,2236,1,0,
		0,0,538,2238,1,0,0,0,540,2240,1,0,0,0,542,543,5,278,0,0,543,1,1,0,0,0,
		544,545,5,279,0,0,545,3,1,0,0,0,546,547,5,280,0,0,547,5,1,0,0,0,548,549,
		5,280,0,0,549,556,5,1,0,0,550,551,5,1,0,0,551,556,5,280,0,0,552,553,5,
		280,0,0,553,554,5,1,0,0,554,556,5,280,0,0,555,548,1,0,0,0,555,550,1,0,
		0,0,555,552,1,0,0,0,556,7,1,0,0,0,557,558,5,282,0,0,558,9,1,0,0,0,559,
		560,5,283,0,0,560,11,1,0,0,0,561,562,5,289,0,0,562,13,1,0,0,0,563,564,
		5,294,0,0,564,15,1,0,0,0,565,566,5,295,0,0,566,17,1,0,0,0,567,570,3,20,
		10,0,568,570,3,28,14,0,569,567,1,0,0,0,569,568,1,0,0,0,570,19,1,0,0,0,
		571,572,5,319,0,0,572,577,3,26,13,0,573,574,5,321,0,0,574,576,3,26,13,
		0,575,573,1,0,0,0,576,579,1,0,0,0,577,575,1,0,0,0,577,578,1,0,0,0,578,
		580,1,0,0,0,579,577,1,0,0,0,580,581,5,320,0,0,581,21,1,0,0,0,582,583,5,
		296,0,0,583,23,1,0,0,0,584,585,5,298,0,0,585,25,1,0,0,0,586,587,3,24,12,
		0,587,588,5,2,0,0,588,589,3,30,15,0,589,27,1,0,0,0,590,591,5,317,0,0,591,
		596,3,30,15,0,592,593,5,321,0,0,593,595,3,30,15,0,594,592,1,0,0,0,595,
		598,1,0,0,0,596,594,1,0,0,0,596,597,1,0,0,0,597,599,1,0,0,0,598,596,1,
		0,0,0,599,600,5,318,0,0,600,29,1,0,0,0,601,607,3,22,11,0,602,607,3,8,4,
		0,603,607,3,20,10,0,604,607,3,28,14,0,605,607,3,16,8,0,606,601,1,0,0,0,
		606,602,1,0,0,0,606,603,1,0,0,0,606,604,1,0,0,0,606,605,1,0,0,0,607,31,
		1,0,0,0,608,609,5,336,0,0,609,33,1,0,0,0,610,611,5,299,0,0,611,35,1,0,
		0,0,612,613,5,300,0,0,613,37,1,0,0,0,614,615,5,304,0,0,615,39,1,0,0,0,
		616,621,5,305,0,0,617,618,5,3,0,0,618,620,5,305,0,0,619,617,1,0,0,0,620,
		623,1,0,0,0,621,622,1,0,0,0,621,619,1,0,0,0,622,41,1,0,0,0,623,621,1,0,
		0,0,624,625,7,0,0,0,625,43,1,0,0,0,626,627,5,290,0,0,627,45,1,0,0,0,628,
		629,5,10,0,0,629,632,5,309,0,0,630,632,5,290,0,0,631,628,1,0,0,0,631,630,
		1,0,0,0,632,47,1,0,0,0,633,634,5,310,0,0,634,49,1,0,0,0,635,636,5,336,
		0,0,636,51,1,0,0,0,637,638,3,18,9,0,638,53,1,0,0,0,639,640,5,290,0,0,640,
		55,1,0,0,0,641,642,5,290,0,0,642,57,1,0,0,0,643,644,5,290,0,0,644,59,1,
		0,0,0,645,646,5,311,0,0,646,647,5,311,0,0,647,648,5,311,0,0,648,61,1,0,
		0,0,649,650,5,311,0,0,650,651,5,311,0,0,651,63,1,0,0,0,652,653,7,1,0,0,
		653,65,1,0,0,0,654,721,5,297,0,0,655,657,5,15,0,0,656,658,5,346,0,0,657,
		656,1,0,0,0,657,658,1,0,0,0,658,721,1,0,0,0,659,663,5,16,0,0,660,662,5,
		17,0,0,661,660,1,0,0,0,662,665,1,0,0,0,663,664,1,0,0,0,663,661,1,0,0,0,
		664,666,1,0,0,0,665,663,1,0,0,0,666,721,5,318,0,0,667,721,5,18,0,0,668,
		670,5,19,0,0,669,671,5,346,0,0,670,669,1,0,0,0,670,671,1,0,0,0,671,721,
		1,0,0,0,672,676,5,20,0,0,673,675,5,17,0,0,674,673,1,0,0,0,675,678,1,0,
		0,0,676,677,1,0,0,0,676,674,1,0,0,0,677,679,1,0,0,0,678,676,1,0,0,0,679,
		721,5,318,0,0,680,721,5,21,0,0,681,683,5,22,0,0,682,684,5,346,0,0,683,
		682,1,0,0,0,683,684,1,0,0,0,684,721,1,0,0,0,685,689,5,23,0,0,686,688,5,
		17,0,0,687,686,1,0,0,0,688,691,1,0,0,0,689,690,1,0,0,0,689,687,1,0,0,0,
		690,692,1,0,0,0,691,689,1,0,0,0,692,721,5,318,0,0,693,721,5,24,0,0,694,
		696,5,25,0,0,695,697,5,346,0,0,696,695,1,0,0,0,696,697,1,0,0,0,697,721,
		1,0,0,0,698,702,5,26,0,0,699,701,5,17,0,0,700,699,1,0,0,0,701,704,1,0,
		0,0,702,703,1,0,0,0,702,700,1,0,0,0,703,705,1,0,0,0,704,702,1,0,0,0,705,
		721,5,318,0,0,706,721,5,27,0,0,707,709,5,28,0,0,708,710,5,346,0,0,709,
		708,1,0,0,0,709,710,1,0,0,0,710,721,1,0,0,0,711,715,5,29,0,0,712,714,5,
		17,0,0,713,712,1,0,0,0,714,717,1,0,0,0,715,716,1,0,0,0,715,713,1,0,0,0,
		716,718,1,0,0,0,717,715,1,0,0,0,718,721,5,318,0,0,719,721,5,30,0,0,720,
		654,1,0,0,0,720,655,1,0,0,0,720,659,1,0,0,0,720,667,1,0,0,0,720,668,1,
		0,0,0,720,672,1,0,0,0,720,680,1,0,0,0,720,681,1,0,0,0,720,685,1,0,0,0,
		720,693,1,0,0,0,720,694,1,0,0,0,720,698,1,0,0,0,720,706,1,0,0,0,720,707,
		1,0,0,0,720,711,1,0,0,0,720,719,1,0,0,0,721,67,1,0,0,0,722,784,5,297,0,
		0,723,725,5,15,0,0,724,726,5,346,0,0,725,724,1,0,0,0,725,726,1,0,0,0,726,
		784,1,0,0,0,727,731,5,16,0,0,728,730,5,17,0,0,729,728,1,0,0,0,730,733,
		1,0,0,0,731,732,1,0,0,0,731,729,1,0,0,0,732,734,1,0,0,0,733,731,1,0,0,
		0,734,784,5,318,0,0,735,737,5,19,0,0,736,738,5,346,0,0,737,736,1,0,0,0,
		737,738,1,0,0,0,738,784,1,0,0,0,739,743,5,20,0,0,740,742,5,17,0,0,741,
		740,1,0,0,0,742,745,1,0,0,0,743,744,1,0,0,0,743,741,1,0,0,0,744,746,1,
		0,0,0,745,743,1,0,0,0,746,784,5,318,0,0,747,749,5,22,0,0,748,750,5,346,
		0,0,749,748,1,0,0,0,749,750,1,0,0,0,750,784,1,0,0,0,751,755,5,23,0,0,752,
		754,5,17,0,0,753,752,1,0,0,0,754,757,1,0,0,0,755,756,1,0,0,0,755,753,1,
		0,0,0,756,758,1,0,0,0,757,755,1,0,0,0,758,784,5,318,0,0,759,761,5,25,0,
		0,760,762,5,346,0,0,761,760,1,0,0,0,761,762,1,0,0,0,762,784,1,0,0,0,763,
		767,5,26,0,0,764,766,5,17,0,0,765,764,1,0,0,0,766,769,1,0,0,0,767,768,
		1,0,0,0,767,765,1,0,0,0,768,770,1,0,0,0,769,767,1,0,0,0,770,784,5,318,
		0,0,771,773,5,28,0,0,772,774,5,346,0,0,773,772,1,0,0,0,773,774,1,0,0,0,
		774,784,1,0,0,0,775,779,5,29,0,0,776,778,5,17,0,0,777,776,1,0,0,0,778,
		781,1,0,0,0,779,780,1,0,0,0,779,777,1,0,0,0,780,782,1,0,0,0,781,779,1,
		0,0,0,782,784,5,318,0,0,783,722,1,0,0,0,783,723,1,0,0,0,783,727,1,0,0,
		0,783,735,1,0,0,0,783,739,1,0,0,0,783,747,1,0,0,0,783,751,1,0,0,0,783,
		759,1,0,0,0,783,763,1,0,0,0,783,771,1,0,0,0,783,775,1,0,0,0,784,69,1,0,
		0,0,785,852,5,297,0,0,786,788,5,15,0,0,787,789,5,346,0,0,788,787,1,0,0,
		0,788,789,1,0,0,0,789,852,1,0,0,0,790,794,5,16,0,0,791,793,5,17,0,0,792,
		791,1,0,0,0,793,796,1,0,0,0,794,795,1,0,0,0,794,792,1,0,0,0,795,797,1,
		0,0,0,796,794,1,0,0,0,797,852,5,318,0,0,798,852,5,18,0,0,799,801,5,19,
		0,0,800,802,5,346,0,0,801,800,1,0,0,0,801,802,1,0,0,0,802,852,1,0,0,0,
		803,807,5,20,0,0,804,806,5,17,0,0,805,804,1,0,0,0,806,809,1,0,0,0,807,
		808,1,0,0,0,807,805,1,0,0,0,808,810,1,0,0,0,809,807,1,0,0,0,810,852,5,
		318,0,0,811,852,5,21,0,0,812,814,5,22,0,0,813,815,5,346,0,0,814,813,1,
		0,0,0,814,815,1,0,0,0,815,852,1,0,0,0,816,820,5,23,0,0,817,819,5,17,0,
		0,818,817,1,0,0,0,819,822,1,0,0,0,820,821,1,0,0,0,820,818,1,0,0,0,821,
		823,1,0,0,0,822,820,1,0,0,0,823,852,5,318,0,0,824,852,5,24,0,0,825,827,
		5,25,0,0,826,828,5,346,0,0,827,826,1,0,0,0,827,828,1,0,0,0,828,852,1,0,
		0,0,829,833,5,26,0,0,830,832,5,17,0,0,831,830,1,0,0,0,832,835,1,0,0,0,
		833,834,1,0,0,0,833,831,1,0,0,0,834,836,1,0,0,0,835,833,1,0,0,0,836,852,
		5,318,0,0,837,852,5,27,0,0,838,840,5,28,0,0,839,841,5,346,0,0,840,839,
		1,0,0,0,840,841,1,0,0,0,841,852,1,0,0,0,842,846,5,29,0,0,843,845,5,17,
		0,0,844,843,1,0,0,0,845,848,1,0,0,0,846,847,1,0,0,0,846,844,1,0,0,0,847,
		849,1,0,0,0,848,846,1,0,0,0,849,852,5,318,0,0,850,852,5,30,0,0,851,785,
		1,0,0,0,851,786,1,0,0,0,851,790,1,0,0,0,851,798,1,0,0,0,851,799,1,0,0,
		0,851,803,1,0,0,0,851,811,1,0,0,0,851,812,1,0,0,0,851,816,1,0,0,0,851,
		824,1,0,0,0,851,825,1,0,0,0,851,829,1,0,0,0,851,837,1,0,0,0,851,838,1,
		0,0,0,851,842,1,0,0,0,851,850,1,0,0,0,852,71,1,0,0,0,853,919,3,74,37,0,
		854,919,3,84,42,0,855,919,3,96,48,0,856,919,3,112,56,0,857,919,3,116,58,
		0,858,919,3,126,63,0,859,919,3,134,67,0,860,919,3,162,81,0,861,919,3,172,
		86,0,862,919,3,176,88,0,863,919,3,178,89,0,864,919,3,182,91,0,865,919,
		3,196,98,0,866,919,3,202,101,0,867,919,3,238,119,0,868,919,3,248,124,0,
		869,919,3,252,126,0,870,919,3,256,128,0,871,919,3,262,131,0,872,919,3,
		264,132,0,873,919,3,266,133,0,874,919,3,272,136,0,875,919,3,274,137,0,
		876,919,3,278,139,0,877,919,3,292,146,0,878,919,3,296,148,0,879,919,3,
		300,150,0,880,919,3,302,151,0,881,919,3,306,153,0,882,919,3,314,157,0,
		883,919,3,328,164,0,884,919,3,332,166,0,885,919,3,336,168,0,886,919,3,
		352,176,0,887,919,3,368,184,0,888,919,3,378,189,0,889,919,3,382,191,0,
		890,919,3,388,194,0,891,919,3,390,195,0,892,919,3,392,196,0,893,919,3,
		396,198,0,894,919,3,398,199,0,895,919,3,406,203,0,896,919,3,430,215,0,
		897,919,3,432,216,0,898,919,3,436,218,0,899,919,3,438,219,0,900,919,3,
		440,220,0,901,919,3,442,221,0,902,919,3,454,227,0,903,919,3,460,230,0,
		904,919,3,462,231,0,905,919,3,468,234,0,906,919,3,484,242,0,907,919,3,
		486,243,0,908,919,3,496,248,0,909,919,3,498,249,0,910,919,3,500,250,0,
		911,919,3,508,254,0,912,919,3,518,259,0,913,919,3,520,260,0,914,919,3,
		522,261,0,915,919,3,528,264,0,916,919,3,532,266,0,917,919,3,540,270,0,
		918,853,1,0,0,0,918,854,1,0,0,0,918,855,1,0,0,0,918,856,1,0,0,0,918,857,
		1,0,0,0,918,858,1,0,0,0,918,859,1,0,0,0,918,860,1,0,0,0,918,861,1,0,0,
		0,918,862,1,0,0,0,918,863,1,0,0,0,918,864,1,0,0,0,918,865,1,0,0,0,918,
		866,1,0,0,0,918,867,1,0,0,0,918,868,1,0,0,0,918,869,1,0,0,0,918,870,1,
		0,0,0,918,871,1,0,0,0,918,872,1,0,0,0,918,873,1,0,0,0,918,874,1,0,0,0,
		918,875,1,0,0,0,918,876,1,0,0,0,918,877,1,0,0,0,918,878,1,0,0,0,918,879,
		1,0,0,0,918,880,1,0,0,0,918,881,1,0,0,0,918,882,1,0,0,0,918,883,1,0,0,
		0,918,884,1,0,0,0,918,885,1,0,0,0,918,886,1,0,0,0,918,887,1,0,0,0,918,
		888,1,0,0,0,918,889,1,0,0,0,918,890,1,0,0,0,918,891,1,0,0,0,918,892,1,
		0,0,0,918,893,1,0,0,0,918,894,1,0,0,0,918,895,1,0,0,0,918,896,1,0,0,0,
		918,897,1,0,0,0,918,898,1,0,0,0,918,899,1,0,0,0,918,900,1,0,0,0,918,901,
		1,0,0,0,918,902,1,0,0,0,918,903,1,0,0,0,918,904,1,0,0,0,918,905,1,0,0,
		0,918,906,1,0,0,0,918,907,1,0,0,0,918,908,1,0,0,0,918,909,1,0,0,0,918,
		910,1,0,0,0,918,911,1,0,0,0,918,912,1,0,0,0,918,913,1,0,0,0,918,914,1,
		0,0,0,918,915,1,0,0,0,918,916,1,0,0,0,918,917,1,0,0,0,919,73,1,0,0,0,920,
		921,5,31,0,0,921,922,3,76,38,0,922,923,3,68,34,0,923,924,3,82,41,0,924,
		75,1,0,0,0,925,926,7,2,0,0,926,77,1,0,0,0,927,928,5,290,0,0,928,79,1,0,
		0,0,929,930,5,304,0,0,930,81,1,0,0,0,931,937,5,34,0,0,932,933,5,35,0,0,
		933,934,3,80,40,0,934,935,3,78,39,0,935,937,1,0,0,0,936,931,1,0,0,0,936,
		932,1,0,0,0,937,945,1,0,0,0,938,939,5,36,0,0,939,945,3,80,40,0,940,941,
		5,37,0,0,941,945,3,80,40,0,942,943,5,38,0,0,943,945,3,80,40,0,944,936,
		1,0,0,0,944,938,1,0,0,0,944,940,1,0,0,0,944,942,1,0,0,0,945,83,1,0,0,0,
		946,947,5,39,0,0,947,948,3,68,34,0,948,949,3,2,1,0,949,950,3,86,43,0,950,
		85,1,0,0,0,951,952,5,40,0,0,952,953,3,88,44,0,953,954,3,8,4,0,954,960,
		1,0,0,0,955,956,5,41,0,0,956,960,3,8,4,0,957,958,5,42,0,0,958,960,3,92,
		46,0,959,951,1,0,0,0,959,955,1,0,0,0,959,957,1,0,0,0,960,87,1,0,0,0,961,
		962,7,3,0,0,962,89,1,0,0,0,963,964,5,41,0,0,964,91,1,0,0,0,965,966,5,44,
		0,0,966,967,3,34,17,0,967,968,5,17,0,0,968,969,3,36,18,0,969,970,5,17,
		0,0,970,971,3,8,4,0,971,972,3,94,47,0,972,981,1,0,0,0,973,974,5,45,0,0,
		974,981,3,34,17,0,975,976,5,46,0,0,976,977,3,90,45,0,977,978,3,34,17,0,
		978,979,3,8,4,0,979,981,1,0,0,0,980,965,1,0,0,0,980,973,1,0,0,0,980,975,
		1,0,0,0,981,93,1,0,0,0,982,983,7,4,0,0,983,95,1,0,0,0,984,985,5,49,0,0,
		985,986,3,102,51,0,986,97,1,0,0,0,987,988,5,348,0,0,988,99,1,0,0,0,989,
		990,5,348,0,0,990,101,1,0,0,0,991,992,5,44,0,0,992,993,3,100,50,0,993,
		994,3,32,16,0,994,1007,1,0,0,0,995,996,5,41,0,0,996,997,3,98,49,0,997,
		998,3,108,54,0,998,1007,1,0,0,0,999,1007,5,50,0,0,1000,1001,5,45,0,0,1001,
		1007,3,98,49,0,1002,1003,5,43,0,0,1003,1004,3,98,49,0,1004,1005,3,110,
		55,0,1005,1007,1,0,0,0,1006,991,1,0,0,0,1006,995,1,0,0,0,1006,999,1,0,
		0,0,1006,1000,1,0,0,0,1006,1002,1,0,0,0,1007,103,1,0,0,0,1008,1009,5,290,
		0,0,1009,105,1,0,0,0,1010,1011,5,290,0,0,1011,107,1,0,0,0,1012,1013,7,
		5,0,0,1013,109,1,0,0,0,1014,1015,5,54,0,0,1015,1029,3,106,53,0,1016,1017,
		5,51,0,0,1017,1029,3,4,2,0,1018,1019,5,55,0,0,1019,1029,3,32,16,0,1020,
		1021,5,52,0,0,1021,1029,3,68,34,0,1022,1023,5,56,0,0,1023,1029,3,104,52,
		0,1024,1025,5,46,0,0,1025,1029,3,4,2,0,1026,1027,5,53,0,0,1027,1029,3,
		16,8,0,1028,1014,1,0,0,0,1028,1016,1,0,0,0,1028,1018,1,0,0,0,1028,1020,
		1,0,0,0,1028,1022,1,0,0,0,1028,1024,1,0,0,0,1028,1026,1,0,0,0,1029,111,
		1,0,0,0,1030,1031,5,57,0,0,1031,1032,3,70,35,0,1032,1033,3,44,22,0,1033,
		1034,3,114,57,0,1034,113,1,0,0,0,1035,1036,5,280,0,0,1036,115,1,0,0,0,
		1037,1038,5,58,0,0,1038,1039,3,118,59,0,1039,117,1,0,0,0,1040,1041,5,36,
		0,0,1041,1042,3,0,0,0,1042,1043,3,60,30,0,1043,1044,3,60,30,0,1044,1045,
		3,120,60,0,1045,1051,1,0,0,0,1046,1047,3,60,30,0,1047,1048,3,60,30,0,1048,
		1049,3,120,60,0,1049,1051,1,0,0,0,1050,1040,1,0,0,0,1050,1046,1,0,0,0,
		1051,119,1,0,0,0,1052,1053,5,59,0,0,1053,1054,3,0,0,0,1054,1055,3,60,30,
		0,1055,1056,3,122,61,0,1056,1061,1,0,0,0,1057,1058,3,60,30,0,1058,1059,
		3,122,61,0,1059,1061,1,0,0,0,1060,1052,1,0,0,0,1060,1057,1,0,0,0,1061,
		121,1,0,0,0,1062,1063,5,60,0,0,1063,1064,3,46,23,0,1064,1065,3,124,62,
		0,1065,1069,1,0,0,0,1066,1067,7,6,0,0,1067,1069,3,124,62,0,1068,1062,1,
		0,0,0,1068,1066,1,0,0,0,1069,123,1,0,0,0,1070,1071,7,7,0,0,1071,125,1,
		0,0,0,1072,1073,5,66,0,0,1073,1074,3,66,33,0,1074,1075,3,8,4,0,1075,1076,
		5,17,0,0,1076,1077,3,128,64,0,1077,1078,3,132,66,0,1078,127,1,0,0,0,1079,
		1080,5,290,0,0,1080,129,1,0,0,0,1081,1082,5,36,0,0,1082,131,1,0,0,0,1083,
		1084,5,67,0,0,1084,1091,3,60,30,0,1085,1086,5,68,0,0,1086,1087,3,66,33,
		0,1087,1088,3,130,65,0,1088,1089,3,66,33,0,1089,1091,1,0,0,0,1090,1083,
		1,0,0,0,1090,1085,1,0,0,0,1091,133,1,0,0,0,1092,1093,5,69,0,0,1093,1094,
		3,144,72,0,1094,135,1,0,0,0,1095,1096,5,280,0,0,1096,137,1,0,0,0,1097,
		1098,5,280,0,0,1098,139,1,0,0,0,1099,1104,5,305,0,0,1100,1101,5,3,0,0,
		1101,1103,5,305,0,0,1102,1100,1,0,0,0,1103,1106,1,0,0,0,1104,1105,1,0,
		0,0,1104,1102,1,0,0,0,1105,141,1,0,0,0,1106,1104,1,0,0,0,1107,1112,5,305,
		0,0,1108,1109,5,3,0,0,1109,1111,5,305,0,0,1110,1108,1,0,0,0,1111,1114,
		1,0,0,0,1112,1113,1,0,0,0,1112,1110,1,0,0,0,1113,143,1,0,0,0,1114,1112,
		1,0,0,0,1115,1116,5,41,0,0,1116,1124,3,146,73,0,1117,1118,5,70,0,0,1118,
		1124,3,148,74,0,1119,1120,5,71,0,0,1120,1124,3,158,79,0,1121,1122,5,45,
		0,0,1122,1124,3,160,80,0,1123,1115,1,0,0,0,1123,1117,1,0,0,0,1123,1119,
		1,0,0,0,1123,1121,1,0,0,0,1124,145,1,0,0,0,1125,1126,5,72,0,0,1126,1127,
		3,60,30,0,1127,1128,3,142,71,0,1128,1129,3,8,4,0,1129,1141,1,0,0,0,1130,
		1131,5,73,0,0,1131,1132,3,66,33,0,1132,1133,3,140,70,0,1133,1134,3,8,4,
		0,1134,1141,1,0,0,0,1135,1136,5,74,0,0,1136,1137,3,58,29,0,1137,1138,3,
		40,20,0,1138,1139,3,8,4,0,1139,1141,1,0,0,0,1140,1125,1,0,0,0,1140,1130,
		1,0,0,0,1140,1135,1,0,0,0,1141,147,1,0,0,0,1142,1143,5,72,0,0,1143,1144,
		3,60,30,0,1144,1145,3,50,25,0,1145,1155,1,0,0,0,1146,1147,5,73,0,0,1147,
		1148,3,66,33,0,1148,1149,3,52,26,0,1149,1155,1,0,0,0,1150,1151,5,74,0,
		0,1151,1152,3,56,28,0,1152,1153,3,32,16,0,1153,1155,1,0,0,0,1154,1142,
		1,0,0,0,1154,1146,1,0,0,0,1154,1150,1,0,0,0,1155,149,1,0,0,0,1156,1157,
		5,72,0,0,1157,1158,3,60,30,0,1158,1159,3,142,71,0,1159,1160,3,136,68,0,
		1160,1161,3,138,69,0,1161,1175,1,0,0,0,1162,1163,5,73,0,0,1163,1164,3,
		66,33,0,1164,1165,3,140,70,0,1165,1166,3,136,68,0,1166,1167,3,138,69,0,
		1167,1175,1,0,0,0,1168,1169,5,74,0,0,1169,1170,3,56,28,0,1170,1171,3,40,
		20,0,1171,1172,3,136,68,0,1172,1173,3,138,69,0,1173,1175,1,0,0,0,1174,
		1156,1,0,0,0,1174,1162,1,0,0,0,1174,1168,1,0,0,0,1175,151,1,0,0,0,1176,
		1177,5,72,0,0,1177,1178,3,60,30,0,1178,1179,3,142,71,0,1179,1189,1,0,0,
		0,1180,1181,5,73,0,0,1181,1182,3,66,33,0,1182,1183,3,140,70,0,1183,1189,
		1,0,0,0,1184,1185,5,74,0,0,1185,1186,3,56,28,0,1186,1187,3,40,20,0,1187,
		1189,1,0,0,0,1188,1176,1,0,0,0,1188,1180,1,0,0,0,1188,1184,1,0,0,0,1189,
		153,1,0,0,0,1190,1191,5,36,0,0,1191,1197,3,152,76,0,1192,1193,5,75,0,0,
		1193,1197,3,150,75,0,1194,1195,5,46,0,0,1195,1197,3,32,16,0,1196,1190,
		1,0,0,0,1196,1192,1,0,0,0,1196,1194,1,0,0,0,1197,155,1,0,0,0,1198,1199,
		5,76,0,0,1199,1211,3,154,77,0,1200,1201,5,77,0,0,1201,1202,3,4,2,0,1202,
		1203,3,154,77,0,1203,1211,1,0,0,0,1204,1205,5,70,0,0,1205,1211,3,154,77,
		0,1206,1207,5,78,0,0,1207,1211,3,154,77,0,1208,1209,5,43,0,0,1209,1211,
		3,154,77,0,1210,1198,1,0,0,0,1210,1200,1,0,0,0,1210,1204,1,0,0,0,1210,
		1206,1,0,0,0,1210,1208,1,0,0,0,1211,157,1,0,0,0,1212,1213,5,72,0,0,1213,
		1214,3,60,30,0,1214,1215,3,142,71,0,1215,1216,3,156,78,0,1216,1228,1,0,
		0,0,1217,1218,5,73,0,0,1218,1219,3,66,33,0,1219,1220,3,140,70,0,1220,1221,
		3,156,78,0,1221,1228,1,0,0,0,1222,1223,5,74,0,0,1223,1224,3,56,28,0,1224,
		1225,3,40,20,0,1225,1226,3,156,78,0,1226,1228,1,0,0,0,1227,1212,1,0,0,
		0,1227,1217,1,0,0,0,1227,1222,1,0,0,0,1228,159,1,0,0,0,1229,1230,5,72,
		0,0,1230,1231,3,60,30,0,1231,1232,3,142,71,0,1232,1242,1,0,0,0,1233,1234,
		5,73,0,0,1234,1235,3,66,33,0,1235,1236,3,140,70,0,1236,1242,1,0,0,0,1237,
		1238,5,74,0,0,1238,1239,3,58,29,0,1239,1240,3,40,20,0,1240,1242,1,0,0,
		0,1241,1229,1,0,0,0,1241,1233,1,0,0,0,1241,1237,1,0,0,0,1242,161,1,0,0,
		0,1243,1244,5,79,0,0,1244,1245,3,170,85,0,1245,163,1,0,0,0,1246,1247,7,
		8,0,0,1247,165,1,0,0,0,1248,1249,5,300,0,0,1249,167,1,0,0,0,1250,1251,
		5,82,0,0,1251,1257,3,166,83,0,1252,1253,5,83,0,0,1253,1257,3,166,83,0,
		1254,1257,5,84,0,0,1255,1257,5,85,0,0,1256,1250,1,0,0,0,1256,1252,1,0,
		0,0,1256,1254,1,0,0,0,1256,1255,1,0,0,0,1257,169,1,0,0,0,1258,1259,5,86,
		0,0,1259,1267,3,166,83,0,1260,1261,5,81,0,0,1261,1262,3,166,83,0,1262,
		1263,3,168,84,0,1263,1267,1,0,0,0,1264,1265,5,50,0,0,1265,1267,3,164,82,
		0,1266,1258,1,0,0,0,1266,1260,1,0,0,0,1266,1264,1,0,0,0,1267,171,1,0,0,
		0,1268,1269,5,87,0,0,1269,1270,3,174,87,0,1270,173,1,0,0,0,1271,1272,5,
		88,0,0,1272,1276,3,166,83,0,1273,1276,5,89,0,0,1274,1276,5,90,0,0,1275,
		1271,1,0,0,0,1275,1273,1,0,0,0,1275,1274,1,0,0,0,1276,175,1,0,0,0,1277,
		1278,5,91,0,0,1278,1279,3,64,32,0,1279,177,1,0,0,0,1280,1281,5,92,0,0,
		1281,1282,3,180,90,0,1282,179,1,0,0,0,1283,1284,7,9,0,0,1284,181,1,0,0,
		0,1285,1286,5,96,0,0,1286,1287,3,184,92,0,1287,183,1,0,0,0,1288,1289,5,
		57,0,0,1289,1290,3,70,35,0,1290,1291,3,186,93,0,1291,1305,1,0,0,0,1292,
		1293,5,97,0,0,1293,1294,3,68,34,0,1294,1295,3,186,93,0,1295,1296,3,188,
		94,0,1296,1303,1,0,0,0,1297,1298,5,98,0,0,1298,1299,5,17,0,0,1299,1300,
		3,192,96,0,1300,1301,3,194,97,0,1301,1303,1,0,0,0,1302,1292,1,0,0,0,1302,
		1297,1,0,0,0,1303,1305,1,0,0,0,1304,1288,1,0,0,0,1304,1302,1,0,0,0,1305,
		185,1,0,0,0,1306,1307,5,293,0,0,1307,187,1,0,0,0,1308,1309,5,280,0,0,1309,
		189,1,0,0,0,1310,1311,5,280,0,0,1311,191,1,0,0,0,1312,1313,5,280,0,0,1313,
		193,1,0,0,0,1314,1315,5,295,0,0,1315,195,1,0,0,0,1316,1317,5,99,0,0,1317,
		1318,3,68,34,0,1318,1319,3,200,100,0,1319,1320,3,198,99,0,1320,197,1,0,
		0,0,1321,1322,5,280,0,0,1322,199,1,0,0,0,1323,1324,5,349,0,0,1324,201,
		1,0,0,0,1325,1326,5,100,0,0,1326,1327,3,236,118,0,1327,203,1,0,0,0,1328,
		1329,7,10,0,0,1329,205,1,0,0,0,1330,1331,5,350,0,0,1331,207,1,0,0,0,1332,
		1333,5,103,0,0,1333,209,1,0,0,0,1334,1335,5,74,0,0,1335,211,1,0,0,0,1336,
		1337,7,11,0,0,1337,213,1,0,0,0,1338,1339,7,12,0,0,1339,215,1,0,0,0,1340,
		1341,5,72,0,0,1341,1342,3,60,30,0,1342,1343,3,40,20,0,1343,1344,3,236,
		118,0,1344,1357,1,0,0,0,1345,1346,5,73,0,0,1346,1347,3,66,33,0,1347,1348,
		3,40,20,0,1348,1349,3,236,118,0,1349,1357,1,0,0,0,1350,1351,5,74,0,0,1351,
		1352,3,56,28,0,1352,1353,5,17,0,0,1353,1354,3,40,20,0,1354,1355,3,236,
		118,0,1355,1357,1,0,0,0,1356,1340,1,0,0,0,1356,1345,1,0,0,0,1356,1350,
		1,0,0,0,1357,217,1,0,0,0,1358,1359,5,105,0,0,1359,1360,3,60,30,0,1360,
		1361,3,14,7,0,1361,1362,3,236,118,0,1362,1400,1,0,0,0,1363,1364,5,72,0,
		0,1364,1365,3,60,30,0,1365,1366,3,46,23,0,1366,1367,3,236,118,0,1367,1400,
		1,0,0,0,1368,1369,5,106,0,0,1369,1370,3,60,30,0,1370,1371,3,60,30,0,1371,
		1372,3,60,30,0,1372,1373,3,212,106,0,1373,1374,3,236,118,0,1374,1400,1,
		0,0,0,1375,1376,5,69,0,0,1376,1400,3,216,108,0,1377,1378,5,107,0,0,1378,
		1379,3,0,0,0,1379,1380,3,236,118,0,1380,1400,1,0,0,0,1381,1382,5,73,0,
		0,1382,1383,3,68,34,0,1383,1384,3,236,118,0,1384,1400,1,0,0,0,1385,1386,
		5,108,0,0,1386,1387,3,60,30,0,1387,1388,3,236,118,0,1388,1400,1,0,0,0,
		1389,1390,5,109,0,0,1390,1391,3,220,110,0,1391,1392,3,236,118,0,1392,1400,
		1,0,0,0,1393,1394,5,110,0,0,1394,1395,3,66,33,0,1395,1396,3,54,27,0,1396,
		1397,3,222,111,0,1397,1398,3,236,118,0,1398,1400,1,0,0,0,1399,1358,1,0,
		0,0,1399,1363,1,0,0,0,1399,1368,1,0,0,0,1399,1375,1,0,0,0,1399,1377,1,
		0,0,0,1399,1381,1,0,0,0,1399,1385,1,0,0,0,1399,1389,1,0,0,0,1399,1393,
		1,0,0,0,1400,219,1,0,0,0,1401,1402,5,315,0,0,1402,221,1,0,0,0,1403,1404,
		7,13,0,0,1404,1405,3,66,33,0,1405,1406,3,54,27,0,1406,1413,1,0,0,0,1407,
		1408,5,114,0,0,1408,1411,3,4,2,0,1409,1411,3,6,3,0,1410,1407,1,0,0,0,1410,
		1409,1,0,0,0,1411,1413,1,0,0,0,1412,1403,1,0,0,0,1412,1410,1,0,0,0,1413,
		223,1,0,0,0,1414,1415,7,14,0,0,1415,225,1,0,0,0,1416,1417,7,15,0,0,1417,
		227,1,0,0,0,1418,1419,5,103,0,0,1419,1423,3,68,34,0,1420,1421,5,127,0,
		0,1421,1423,3,226,113,0,1422,1418,1,0,0,0,1422,1420,1,0,0,0,1423,229,1,
		0,0,0,1424,1425,5,72,0,0,1425,1426,3,60,30,0,1426,1427,3,40,20,0,1427,
		1428,3,42,21,0,1428,1429,3,8,4,0,1429,1452,1,0,0,0,1430,1431,5,49,0,0,
		1431,1432,3,98,49,0,1432,1433,3,214,107,0,1433,1452,1,0,0,0,1434,1435,
		5,73,0,0,1435,1436,3,66,33,0,1436,1437,3,40,20,0,1437,1438,3,42,21,0,1438,
		1439,3,8,4,0,1439,1452,1,0,0,0,1440,1441,5,110,0,0,1441,1442,3,68,34,0,
		1442,1443,3,54,27,0,1443,1452,1,0,0,0,1444,1445,5,74,0,0,1445,1446,3,56,
		28,0,1446,1447,5,17,0,0,1447,1448,3,40,20,0,1448,1449,3,42,21,0,1449,1450,
		3,8,4,0,1450,1452,1,0,0,0,1451,1424,1,0,0,0,1451,1430,1,0,0,0,1451,1434,
		1,0,0,0,1451,1440,1,0,0,0,1451,1444,1,0,0,0,1452,231,1,0,0,0,1453,1454,
		7,16,0,0,1454,1455,3,230,115,0,1455,233,1,0,0,0,1456,1457,3,60,30,0,1457,
		1458,3,236,118,0,1458,1465,1,0,0,0,1459,1460,5,73,0,0,1460,1461,3,68,34,
		0,1461,1462,3,204,102,0,1462,1463,3,236,118,0,1463,1465,1,0,0,0,1464,1456,
		1,0,0,0,1464,1459,1,0,0,0,1465,235,1,0,0,0,1466,1467,5,130,0,0,1467,1468,
		3,206,103,0,1468,1469,3,236,118,0,1469,1517,1,0,0,0,1470,1471,5,131,0,
		0,1471,1472,3,204,102,0,1472,1473,3,236,118,0,1473,1517,1,0,0,0,1474,1475,
		7,17,0,0,1475,1476,3,68,34,0,1476,1477,3,236,118,0,1477,1517,1,0,0,0,1478,
		1479,5,132,0,0,1479,1480,3,234,117,0,1480,1481,3,236,118,0,1481,1517,1,
		0,0,0,1482,1483,7,18,0,0,1483,1484,3,218,109,0,1484,1485,3,236,118,0,1485,
		1517,1,0,0,0,1486,1487,5,135,0,0,1487,1488,3,0,0,0,1488,1489,3,236,118,
		0,1489,1517,1,0,0,0,1490,1491,5,136,0,0,1491,1492,3,224,112,0,1492,1493,
		3,236,118,0,1493,1517,1,0,0,0,1494,1497,5,137,0,0,1495,1498,3,60,30,0,
		1496,1498,3,228,114,0,1497,1495,1,0,0,0,1497,1496,1,0,0,0,1498,1499,1,
		0,0,0,1499,1500,3,236,118,0,1500,1517,1,0,0,0,1501,1502,5,138,0,0,1502,
		1503,3,208,104,0,1503,1504,3,68,34,0,1504,1505,3,236,118,0,1505,1517,1,
		0,0,0,1506,1507,5,139,0,0,1507,1517,3,72,36,0,1508,1509,5,140,0,0,1509,
		1510,3,232,116,0,1510,1511,3,236,118,0,1511,1517,1,0,0,0,1512,1513,5,141,
		0,0,1513,1514,3,48,24,0,1514,1515,3,236,118,0,1515,1517,1,0,0,0,1516,1466,
		1,0,0,0,1516,1470,1,0,0,0,1516,1474,1,0,0,0,1516,1478,1,0,0,0,1516,1482,
		1,0,0,0,1516,1486,1,0,0,0,1516,1490,1,0,0,0,1516,1494,1,0,0,0,1516,1501,
		1,0,0,0,1516,1506,1,0,0,0,1516,1508,1,0,0,0,1516,1512,1,0,0,0,1517,237,
		1,0,0,0,1518,1519,5,142,0,0,1519,1520,3,246,123,0,1520,239,1,0,0,0,1521,
		1522,5,143,0,0,1522,241,1,0,0,0,1523,1524,5,280,0,0,1524,243,1,0,0,0,1525,
		1526,7,19,0,0,1526,245,1,0,0,0,1527,1528,7,20,0,0,1528,1529,3,68,34,0,
		1529,1530,3,242,121,0,1530,1531,5,17,0,0,1531,1532,3,244,122,0,1532,1538,
		1,0,0,0,1533,1534,5,143,0,0,1534,1535,3,66,33,0,1535,1536,3,244,122,0,
		1536,1538,1,0,0,0,1537,1527,1,0,0,0,1537,1533,1,0,0,0,1538,247,1,0,0,0,
		1539,1540,5,146,0,0,1540,1541,3,60,30,0,1541,1542,3,60,30,0,1542,1543,
		3,46,23,0,1543,1544,3,250,125,0,1544,249,1,0,0,0,1545,1549,7,21,0,0,1546,
		1547,5,62,0,0,1547,1549,3,46,23,0,1548,1545,1,0,0,0,1548,1546,1,0,0,0,
		1549,251,1,0,0,0,1550,1551,5,151,0,0,1551,1552,3,60,30,0,1552,1553,3,60,
		30,0,1553,1554,3,14,7,0,1554,1555,3,254,127,0,1555,253,1,0,0,0,1556,1557,
		5,62,0,0,1557,1558,3,14,7,0,1558,255,1,0,0,0,1559,1560,5,152,0,0,1560,
		1561,3,260,130,0,1561,257,1,0,0,0,1562,1563,3,62,31,0,1563,1564,3,62,31,
		0,1564,1567,1,0,0,0,1565,1567,5,104,0,0,1566,1562,1,0,0,0,1566,1565,1,
		0,0,0,1567,259,1,0,0,0,1568,1569,5,44,0,0,1569,1570,3,62,31,0,1570,1571,
		3,62,31,0,1571,1577,1,0,0,0,1572,1573,5,143,0,0,1573,1577,3,62,31,0,1574,
		1575,5,45,0,0,1575,1577,3,258,129,0,1576,1568,1,0,0,0,1576,1572,1,0,0,
		0,1576,1574,1,0,0,0,1577,261,1,0,0,0,1578,1579,5,88,0,0,1579,1580,3,400,
		200,0,1580,263,1,0,0,0,1581,1582,5,153,0,0,1582,1583,3,64,32,0,1583,1584,
		3,70,35,0,1584,265,1,0,0,0,1585,1586,5,154,0,0,1586,1587,3,268,134,0,1587,
		1588,3,270,135,0,1588,267,1,0,0,0,1589,1590,5,351,0,0,1590,269,1,0,0,0,
		1591,1592,7,22,0,0,1592,271,1,0,0,0,1593,1594,5,97,0,0,1594,1595,3,68,
		34,0,1595,1596,3,44,22,0,1596,1597,3,4,2,0,1597,273,1,0,0,0,1598,1599,
		5,155,0,0,1599,1600,3,276,138,0,1600,275,1,0,0,0,1601,1602,5,352,0,0,1602,
		277,1,0,0,0,1603,1604,5,156,0,0,1604,1605,5,17,0,0,1605,1606,3,284,142,
		0,1606,279,1,0,0,0,1607,1608,5,353,0,0,1608,281,1,0,0,0,1609,1610,5,304,
		0,0,1610,283,1,0,0,0,1611,1612,5,71,0,0,1612,1616,3,288,144,0,1613,1614,
		5,62,0,0,1614,1616,3,290,145,0,1615,1611,1,0,0,0,1615,1613,1,0,0,0,1616,
		285,1,0,0,0,1617,1618,5,36,0,0,1618,1624,3,288,144,0,1619,1620,5,157,0,
		0,1620,1621,3,44,22,0,1621,1622,3,4,2,0,1622,1624,1,0,0,0,1623,1617,1,
		0,0,0,1623,1619,1,0,0,0,1624,287,1,0,0,0,1625,1626,5,72,0,0,1626,1627,
		3,60,30,0,1627,1628,3,280,140,0,1628,1629,3,282,141,0,1629,1636,1,0,0,
		0,1630,1631,5,73,0,0,1631,1632,3,68,34,0,1632,1633,3,280,140,0,1633,1634,
		3,282,141,0,1634,1636,1,0,0,0,1635,1625,1,0,0,0,1635,1630,1,0,0,0,1636,
		289,1,0,0,0,1637,1638,5,72,0,0,1638,1639,3,60,30,0,1639,1640,3,280,140,
		0,1640,1641,3,286,143,0,1641,1648,1,0,0,0,1642,1643,5,73,0,0,1643,1644,
		3,68,34,0,1644,1645,3,280,140,0,1645,1646,3,286,143,0,1646,1648,1,0,0,
		0,1647,1637,1,0,0,0,1647,1642,1,0,0,0,1648,291,1,0,0,0,1649,1650,5,158,
		0,0,1650,1651,3,294,147,0,1651,293,1,0,0,0,1652,1653,7,23,0,0,1653,295,
		1,0,0,0,1654,1655,5,159,0,0,1655,1656,3,68,34,0,1656,1657,3,298,149,0,
		1657,297,1,0,0,0,1658,1660,5,277,0,0,1659,1658,1,0,0,0,1660,1661,1,0,0,
		0,1661,1659,1,0,0,0,1661,1662,1,0,0,0,1662,299,1,0,0,0,1663,1664,5,160,
		0,0,1664,1665,3,68,34,0,1665,301,1,0,0,0,1666,1667,5,50,0,0,1667,1668,
		3,304,152,0,1668,303,1,0,0,0,1669,1670,5,161,0,0,1670,305,1,0,0,0,1671,
		1672,5,162,0,0,1672,1673,3,312,156,0,1673,307,1,0,0,0,1674,1675,5,290,
		0,0,1675,309,1,0,0,0,1676,1677,5,290,0,0,1677,311,1,0,0,0,1678,1679,5,
		105,0,0,1679,1685,3,14,7,0,1680,1681,5,163,0,0,1681,1685,3,308,154,0,1682,
		1683,5,164,0,0,1683,1685,3,310,155,0,1684,1678,1,0,0,0,1684,1680,1,0,0,
		0,1684,1682,1,0,0,0,1685,313,1,0,0,0,1686,1687,5,165,0,0,1687,1688,3,322,
		161,0,1688,315,1,0,0,0,1689,1690,5,304,0,0,1690,317,1,0,0,0,1691,1698,
		5,166,0,0,1692,1698,5,167,0,0,1693,1695,5,10,0,0,1694,1693,1,0,0,0,1694,
		1695,1,0,0,0,1695,1696,1,0,0,0,1696,1698,5,290,0,0,1697,1691,1,0,0,0,1697,
		1692,1,0,0,0,1697,1694,1,0,0,0,1698,319,1,0,0,0,1699,1700,5,72,0,0,1700,
		321,1,0,0,0,1701,1702,5,97,0,0,1702,1703,3,68,34,0,1703,1704,3,326,163,
		0,1704,1716,1,0,0,0,1705,1706,5,77,0,0,1706,1707,3,60,30,0,1707,1708,3,
		326,163,0,1708,1716,1,0,0,0,1709,1710,5,62,0,0,1710,1716,3,324,162,0,1711,
		1712,5,168,0,0,1712,1713,3,60,30,0,1713,1714,3,326,163,0,1714,1716,1,0,
		0,0,1715,1701,1,0,0,0,1715,1705,1,0,0,0,1715,1709,1,0,0,0,1715,1711,1,
		0,0,0,1716,323,1,0,0,0,1717,1718,5,72,0,0,1718,1719,3,60,30,0,1719,1720,
		3,280,140,0,1720,1721,3,326,163,0,1721,1728,1,0,0,0,1722,1723,5,73,0,0,
		1723,1724,3,68,34,0,1724,1725,3,280,140,0,1725,1726,3,326,163,0,1726,1728,
		1,0,0,0,1727,1717,1,0,0,0,1727,1722,1,0,0,0,1728,325,1,0,0,0,1729,1730,
		5,169,0,0,1730,1731,3,316,158,0,1731,1732,3,60,30,0,1732,1733,3,318,159,
		0,1733,1743,1,0,0,0,1734,1735,5,160,0,0,1735,1743,3,66,33,0,1736,1737,
		5,165,0,0,1737,1743,3,316,158,0,1738,1739,5,170,0,0,1739,1740,3,60,30,
		0,1740,1741,3,318,159,0,1741,1743,1,0,0,0,1742,1729,1,0,0,0,1742,1734,
		1,0,0,0,1742,1736,1,0,0,0,1742,1738,1,0,0,0,1743,327,1,0,0,0,1744,1745,
		5,171,0,0,1745,1746,3,330,165,0,1746,329,1,0,0,0,1747,1748,5,277,0,0,1748,
		331,1,0,0,0,1749,1750,5,172,0,0,1750,1751,3,68,34,0,1751,1752,3,334,167,
		0,1752,333,1,0,0,0,1753,1755,5,277,0,0,1754,1753,1,0,0,0,1755,1756,1,0,
		0,0,1756,1754,1,0,0,0,1756,1757,1,0,0,0,1757,335,1,0,0,0,1758,1759,5,173,
		0,0,1759,1760,3,350,175,0,1760,1761,3,60,30,0,1761,1762,5,17,0,0,1762,
		1763,3,60,30,0,1763,1764,5,17,0,0,1764,1765,3,342,171,0,1765,1766,3,346,
		173,0,1766,1767,3,70,35,0,1767,337,1,0,0,0,1768,1769,5,283,0,0,1769,1770,
		5,17,0,0,1770,339,1,0,0,0,1771,1772,5,283,0,0,1772,1773,5,17,0,0,1773,
		341,1,0,0,0,1774,1775,5,282,0,0,1775,1776,5,284,0,0,1776,1777,5,17,0,0,
		1777,343,1,0,0,0,1778,1779,5,354,0,0,1779,345,1,0,0,0,1780,1781,7,24,0,
		0,1781,347,1,0,0,0,1782,1783,5,282,0,0,1783,1784,5,17,0,0,1784,1785,5,
		282,0,0,1785,1786,5,17,0,0,1786,1787,5,282,0,0,1787,349,1,0,0,0,1788,1789,
		5,290,0,0,1789,351,1,0,0,0,1790,1791,5,174,0,0,1791,1792,3,362,181,0,1792,
		353,1,0,0,0,1793,1794,5,290,0,0,1794,355,1,0,0,0,1795,1796,5,290,0,0,1796,
		357,1,0,0,0,1797,1798,5,304,0,0,1798,359,1,0,0,0,1799,1800,5,304,0,0,1800,
		361,1,0,0,0,1801,1802,5,175,0,0,1802,1803,3,354,177,0,1803,1804,3,60,30,
		0,1804,1825,1,0,0,0,1805,1806,5,176,0,0,1806,1807,3,358,179,0,1807,1808,
		3,356,178,0,1808,1809,3,4,2,0,1809,1810,5,17,0,0,1810,1811,3,60,30,0,1811,
		1825,1,0,0,0,1812,1813,5,164,0,0,1813,1814,3,310,155,0,1814,1815,3,60,
		30,0,1815,1825,1,0,0,0,1816,1817,5,177,0,0,1817,1818,3,360,180,0,1818,
		1819,3,60,30,0,1819,1820,3,366,183,0,1820,1821,3,8,4,0,1821,1822,5,17,
		0,0,1822,1823,3,4,2,0,1823,1825,1,0,0,0,1824,1801,1,0,0,0,1824,1805,1,
		0,0,0,1824,1812,1,0,0,0,1824,1816,1,0,0,0,1825,363,1,0,0,0,1826,1827,7,
		25,0,0,1827,365,1,0,0,0,1828,1829,7,26,0,0,1829,1830,3,364,182,0,1830,
		367,1,0,0,0,1831,1832,5,184,0,0,1832,1833,3,456,228,0,1833,1834,3,376,
		188,0,1834,1835,3,68,34,0,1835,1836,3,60,30,0,1836,1837,3,370,185,0,1837,
		1838,3,372,186,0,1838,1839,3,374,187,0,1839,369,1,0,0,0,1840,1841,5,282,
		0,0,1841,371,1,0,0,0,1842,1843,5,282,0,0,1843,373,1,0,0,0,1844,1845,5,
		282,0,0,1845,375,1,0,0,0,1846,1847,7,27,0,0,1847,377,1,0,0,0,1848,1849,
		5,194,0,0,1849,1850,3,16,8,0,1850,1851,3,64,32,0,1851,1852,3,380,190,0,
		1852,379,1,0,0,0,1853,1854,5,280,0,0,1854,381,1,0,0,0,1855,1856,5,195,
		0,0,1856,1857,3,386,193,0,1857,1858,3,68,34,0,1858,1859,3,384,192,0,1859,
		383,1,0,0,0,1860,1861,5,304,0,0,1861,385,1,0,0,0,1862,1863,7,28,0,0,1863,
		387,1,0,0,0,1864,1865,5,197,0,0,1865,389,1,0,0,0,1866,1867,5,198,0,0,1867,
		1868,3,4,2,0,1868,391,1,0,0,0,1869,1870,5,199,0,0,1870,1871,3,66,33,0,
		1871,1872,3,394,197,0,1872,393,1,0,0,0,1873,1877,5,200,0,0,1874,1875,5,
		201,0,0,1875,1877,3,66,33,0,1876,1873,1,0,0,0,1876,1874,1,0,0,0,1877,395,
		1,0,0,0,1878,1879,5,202,0,0,1879,1880,3,334,167,0,1880,397,1,0,0,0,1881,
		1882,5,203,0,0,1882,1883,3,404,202,0,1883,399,1,0,0,0,1884,1885,5,304,
		0,0,1885,401,1,0,0,0,1886,1887,7,29,0,0,1887,403,1,0,0,0,1888,1889,5,57,
		0,0,1889,1896,3,400,200,0,1890,1891,5,88,0,0,1891,1892,3,400,200,0,1892,
		1893,3,8,4,0,1893,1894,3,402,201,0,1894,1896,1,0,0,0,1895,1888,1,0,0,0,
		1895,1890,1,0,0,0,1896,405,1,0,0,0,1897,1898,5,204,0,0,1898,1899,3,408,
		204,0,1899,407,1,0,0,0,1900,1901,5,205,0,0,1901,1905,3,426,213,0,1902,
		1903,5,52,0,0,1903,1905,3,428,214,0,1904,1900,1,0,0,0,1904,1902,1,0,0,
		0,1905,409,1,0,0,0,1906,1907,5,301,0,0,1907,411,1,0,0,0,1908,1909,5,302,
		0,0,1909,413,1,0,0,0,1910,1911,5,280,0,0,1911,415,1,0,0,0,1912,1913,7,
		30,0,0,1913,417,1,0,0,0,1914,1915,7,31,0,0,1915,419,1,0,0,0,1916,1917,
		5,291,0,0,1917,421,1,0,0,0,1918,1919,5,215,0,0,1919,423,1,0,0,0,1920,1921,
		5,216,0,0,1921,425,1,0,0,0,1922,1923,5,44,0,0,1923,1924,3,410,205,0,1924,
		1925,3,412,206,0,1925,1926,3,32,16,0,1926,1945,1,0,0,0,1927,1945,5,50,
		0,0,1928,1929,5,71,0,0,1929,1930,3,54,27,0,1930,1931,3,422,211,0,1931,
		1932,3,32,16,0,1932,1937,1,0,0,0,1933,1934,3,424,212,0,1934,1935,3,416,
		208,0,1935,1937,1,0,0,0,1936,1928,1,0,0,0,1936,1933,1,0,0,0,1937,1945,
		1,0,0,0,1938,1939,5,45,0,0,1939,1945,3,54,27,0,1940,1941,5,217,0,0,1941,
		1942,3,420,210,0,1942,1943,3,54,27,0,1943,1945,1,0,0,0,1944,1922,1,0,0,
		0,1944,1927,1,0,0,0,1944,1936,1,0,0,0,1944,1938,1,0,0,0,1944,1940,1,0,
		0,0,1945,427,1,0,0,0,1946,1947,5,44,0,0,1947,1948,3,68,34,0,1948,1949,
		3,54,27,0,1949,1950,3,414,207,0,1950,1983,1,0,0,0,1951,1952,5,81,0,0,1952,
		1953,3,68,34,0,1953,1954,3,54,27,0,1954,1983,1,0,0,0,1955,1956,5,41,0,
		0,1956,1957,3,66,33,0,1957,1958,3,410,205,0,1958,1983,1,0,0,0,1959,1960,
		5,50,0,0,1960,1983,3,66,33,0,1961,1962,5,218,0,0,1962,1963,3,68,34,0,1963,
		1964,3,54,27,0,1964,1965,3,418,209,0,1965,1966,3,68,34,0,1966,1967,3,54,
		27,0,1967,1983,1,0,0,0,1968,1969,5,45,0,0,1969,1970,3,68,34,0,1970,1971,
		3,410,205,0,1971,1972,3,414,207,0,1972,1983,1,0,0,0,1973,1974,5,219,0,
		0,1974,1975,3,68,34,0,1975,1976,3,54,27,0,1976,1983,1,0,0,0,1977,1978,
		5,43,0,0,1978,1979,3,68,34,0,1979,1980,3,54,27,0,1980,1981,3,414,207,0,
		1981,1983,1,0,0,0,1982,1946,1,0,0,0,1982,1951,1,0,0,0,1982,1955,1,0,0,
		0,1982,1959,1,0,0,0,1982,1961,1,0,0,0,1982,1968,1,0,0,0,1982,1973,1,0,
		0,0,1982,1977,1,0,0,0,1983,429,1,0,0,0,1984,1985,5,220,0,0,1985,431,1,
		0,0,0,1986,1987,5,221,0,0,1987,1988,3,60,30,0,1988,1989,3,46,23,0,1989,
		1990,3,434,217,0,1990,433,1,0,0,0,1991,1992,7,32,0,0,1992,435,1,0,0,0,
		1993,1994,5,222,0,0,1994,1995,3,60,30,0,1995,1996,3,8,4,0,1996,437,1,0,
		0,0,1997,1998,5,223,0,0,1998,1999,3,68,34,0,1999,2000,3,60,30,0,2000,2001,
		3,8,4,0,2001,439,1,0,0,0,2002,2003,5,224,0,0,2003,2004,3,66,33,0,2004,
		2005,3,66,33,0,2005,441,1,0,0,0,2006,2007,5,225,0,0,2007,2008,3,62,31,
		0,2008,2009,3,446,223,0,2009,2010,5,17,0,0,2010,2011,3,448,224,0,2011,
		2012,3,444,222,0,2012,443,1,0,0,0,2013,2017,5,226,0,0,2014,2015,5,227,
		0,0,2015,2017,3,68,34,0,2016,2013,1,0,0,0,2016,2014,1,0,0,0,2017,2024,
		1,0,0,0,2018,2019,5,228,0,0,2019,2020,3,4,2,0,2020,2021,3,16,8,0,2021,
		2022,3,68,34,0,2022,2024,1,0,0,0,2023,2016,1,0,0,0,2023,2018,1,0,0,0,2024,
		445,1,0,0,0,2025,2026,5,282,0,0,2026,447,1,0,0,0,2027,2028,5,282,0,0,2028,
		449,1,0,0,0,2029,2030,5,295,0,0,2030,451,1,0,0,0,2031,2032,5,228,0,0,2032,
		453,1,0,0,0,2033,2034,5,229,0,0,2034,2035,3,68,34,0,2035,2036,3,458,229,
		0,2036,2037,3,456,228,0,2037,455,1,0,0,0,2038,2039,5,292,0,0,2039,457,
		1,0,0,0,2040,2041,7,33,0,0,2041,459,1,0,0,0,2042,2043,5,141,0,0,2043,2044,
		3,48,24,0,2044,2045,3,60,30,0,2045,2046,3,32,16,0,2046,461,1,0,0,0,2047,
		2048,5,231,0,0,2048,2049,3,68,34,0,2049,2050,3,464,232,0,2050,463,1,0,
		0,0,2051,2055,5,44,0,0,2052,2053,5,45,0,0,2053,2055,3,466,233,0,2054,2051,
		1,0,0,0,2054,2052,1,0,0,0,2055,2058,1,0,0,0,2056,2058,5,50,0,0,2057,2054,
		1,0,0,0,2057,2056,1,0,0,0,2058,465,1,0,0,0,2059,2060,5,290,0,0,2060,467,
		1,0,0,0,2061,2062,5,232,0,0,2062,2063,3,480,240,0,2063,469,1,0,0,0,2064,
		2065,5,355,0,0,2065,471,1,0,0,0,2066,2067,5,355,0,0,2067,473,1,0,0,0,2068,
		2069,7,34,0,0,2069,475,1,0,0,0,2070,2071,5,290,0,0,2071,477,1,0,0,0,2072,
		2073,7,35,0,0,2073,479,1,0,0,0,2074,2075,5,44,0,0,2075,2076,3,472,236,
		0,2076,2077,3,32,16,0,2077,2095,1,0,0,0,2078,2079,5,239,0,0,2079,2095,
		3,470,235,0,2080,2081,5,240,0,0,2081,2082,3,470,235,0,2082,2083,3,70,35,
		0,2083,2095,1,0,0,0,2084,2085,5,241,0,0,2085,2095,3,68,34,0,2086,2087,
		5,50,0,0,2087,2095,3,470,235,0,2088,2089,5,71,0,0,2089,2090,3,470,235,
		0,2090,2091,3,482,241,0,2091,2095,1,0,0,0,2092,2093,5,45,0,0,2093,2095,
		3,470,235,0,2094,2074,1,0,0,0,2094,2078,1,0,0,0,2094,2080,1,0,0,0,2094,
		2084,1,0,0,0,2094,2086,1,0,0,0,2094,2088,1,0,0,0,2094,2092,1,0,0,0,2095,
		481,1,0,0,0,2096,2097,5,242,0,0,2097,2113,3,474,237,0,2098,2099,5,54,0,
		0,2099,2113,3,476,238,0,2100,2101,5,243,0,0,2101,2113,3,478,239,0,2102,
		2103,5,244,0,0,2103,2113,3,32,16,0,2104,2105,5,245,0,0,2105,2113,3,16,
		8,0,2106,2107,5,246,0,0,2107,2113,3,478,239,0,2108,2109,7,36,0,0,2109,
		2113,3,32,16,0,2110,2111,5,249,0,0,2111,2113,3,16,8,0,2112,2096,1,0,0,
		0,2112,2098,1,0,0,0,2112,2100,1,0,0,0,2112,2102,1,0,0,0,2112,2104,1,0,
		0,0,2112,2106,1,0,0,0,2112,2108,1,0,0,0,2112,2110,1,0,0,0,2113,483,1,0,
		0,0,2114,2115,5,250,0,0,2115,2116,3,334,167,0,2116,485,1,0,0,0,2117,2118,
		5,251,0,0,2118,2119,3,494,247,0,2119,487,1,0,0,0,2120,2121,7,10,0,0,2121,
		489,1,0,0,0,2122,2123,5,132,0,0,2123,491,1,0,0,0,2124,2125,5,73,0,0,2125,
		493,1,0,0,0,2126,2144,3,60,30,0,2127,2141,3,68,34,0,2128,2142,3,66,33,
		0,2129,2130,3,60,30,0,2130,2136,3,490,245,0,2131,2132,3,492,246,0,2132,
		2133,3,66,33,0,2133,2134,3,488,244,0,2134,2137,1,0,0,0,2135,2137,3,60,
		30,0,2136,2131,1,0,0,0,2136,2135,1,0,0,0,2137,2140,1,0,0,0,2138,2140,3,
		62,31,0,2139,2129,1,0,0,0,2139,2138,1,0,0,0,2140,2142,1,0,0,0,2141,2128,
		1,0,0,0,2141,2139,1,0,0,0,2142,2144,1,0,0,0,2143,2126,1,0,0,0,2143,2127,
		1,0,0,0,2144,495,1,0,0,0,2145,2146,5,252,0,0,2146,2147,3,68,34,0,2147,
		2148,3,334,167,0,2148,497,1,0,0,0,2149,2150,5,253,0,0,2150,2151,3,68,34,
		0,2151,2152,3,32,16,0,2152,499,1,0,0,0,2153,2154,5,254,0,0,2154,2155,3,
		506,253,0,2155,501,1,0,0,0,2156,2157,7,37,0,0,2157,503,1,0,0,0,2158,2159,
		7,38,0,0,2159,505,1,0,0,0,2160,2161,5,44,0,0,2161,2170,3,12,6,0,2162,2163,
		5,143,0,0,2163,2170,3,502,251,0,2164,2165,5,43,0,0,2165,2168,3,504,252,
		0,2166,2168,3,12,6,0,2167,2164,1,0,0,0,2167,2166,1,0,0,0,2168,2170,1,0,
		0,0,2169,2160,1,0,0,0,2169,2162,1,0,0,0,2169,2167,1,0,0,0,2170,507,1,0,
		0,0,2171,2172,5,261,0,0,2172,2173,3,68,34,0,2173,2174,3,510,255,0,2174,
		509,1,0,0,0,2175,2176,7,39,0,0,2176,2184,3,32,16,0,2177,2184,7,40,0,0,
		2178,2179,5,264,0,0,2179,2180,3,512,256,0,2180,2181,3,514,257,0,2181,2182,
		3,516,258,0,2182,2184,1,0,0,0,2183,2175,1,0,0,0,2183,2177,1,0,0,0,2183,
		2178,1,0,0,0,2184,511,1,0,0,0,2185,2186,5,280,0,0,2186,513,1,0,0,0,2187,
		2188,5,280,0,0,2188,515,1,0,0,0,2189,2190,5,280,0,0,2190,517,1,0,0,0,2191,
		2192,5,265,0,0,2192,2193,3,334,167,0,2193,519,1,0,0,0,2194,2195,5,266,
		0,0,2195,2196,3,494,247,0,2196,521,1,0,0,0,2197,2198,5,267,0,0,2198,2199,
		3,524,262,0,2199,2200,3,526,263,0,2200,2201,3,414,207,0,2201,523,1,0,0,
		0,2202,2203,5,290,0,0,2203,525,1,0,0,0,2204,2205,7,20,0,0,2205,527,1,0,
		0,0,2206,2207,5,193,0,0,2207,2208,3,530,265,0,2208,2209,3,8,4,0,2209,529,
		1,0,0,0,2210,2211,7,41,0,0,2211,531,1,0,0,0,2212,2213,5,270,0,0,2213,2214,
		3,534,267,0,2214,533,1,0,0,0,2215,2216,5,44,0,0,2216,2217,3,8,4,0,2217,
		2218,3,4,2,0,2218,2235,1,0,0,0,2219,2220,5,271,0,0,2220,2235,3,62,31,0,
		2221,2222,5,66,0,0,2222,2223,3,538,269,0,2223,2224,3,8,4,0,2224,2235,1,
		0,0,0,2225,2235,5,41,0,0,2226,2227,5,43,0,0,2227,2228,3,8,4,0,2228,2229,
		3,4,2,0,2229,2235,1,0,0,0,2230,2231,5,272,0,0,2231,2232,3,536,268,0,2232,
		2233,3,4,2,0,2233,2235,1,0,0,0,2234,2215,1,0,0,0,2234,2219,1,0,0,0,2234,
		2221,1,0,0,0,2234,2225,1,0,0,0,2234,2226,1,0,0,0,2234,2230,1,0,0,0,2235,
		535,1,0,0,0,2236,2237,7,42,0,0,2237,537,1,0,0,0,2238,2239,7,43,0,0,2239,
		539,1,0,0,0,2240,2241,5,276,0,0,2241,2242,3,246,123,0,2242,541,1,0,0,0,
		113,555,569,577,596,606,621,631,657,663,670,676,683,689,696,702,709,715,
		720,725,731,737,743,749,755,761,767,773,779,783,788,794,801,807,814,820,
		827,833,840,846,851,918,936,944,959,980,1006,1028,1050,1060,1068,1090,
		1104,1112,1123,1140,1154,1174,1188,1196,1210,1227,1241,1256,1266,1275,
		1302,1304,1356,1399,1410,1412,1422,1451,1464,1497,1516,1537,1548,1566,
		1576,1615,1623,1635,1647,1661,1684,1694,1697,1715,1727,1742,1756,1824,
		1876,1895,1904,1936,1944,1982,2016,2023,2054,2057,2094,2112,2136,2139,
		2141,2143,2167,2169,2183,2234
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
