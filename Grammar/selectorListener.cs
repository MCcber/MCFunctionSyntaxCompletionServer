//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/C#Projects/AutoComplete/Grammar/selector.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="selectorParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IselectorListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt([NotNull] selectorParser.IntContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt([NotNull] selectorParser.IntContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.intInterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntInterval([NotNull] selectorParser.IntIntervalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.intInterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntInterval([NotNull] selectorParser.IntIntervalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] selectorParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] selectorParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.positiveNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPositiveNumber([NotNull] selectorParser.PositiveNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.positiveNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPositiveNumber([NotNull] selectorParser.PositiveNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.double"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDouble([NotNull] selectorParser.DoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.double"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDouble([NotNull] selectorParser.DoubleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.positiveDouble"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPositiveDouble([NotNull] selectorParser.PositiveDoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.positiveDouble"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPositiveDouble([NotNull] selectorParser.PositiveDoubleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.doubleInterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoubleInterval([NotNull] selectorParser.DoubleIntervalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.doubleInterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoubleInterval([NotNull] selectorParser.DoubleIntervalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.positiveDoubleInterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPositiveDoubleInterval([NotNull] selectorParser.PositiveDoubleIntervalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.positiveDoubleInterval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPositiveDoubleInterval([NotNull] selectorParser.PositiveDoubleIntervalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.gamemodeValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGamemodeValues([NotNull] selectorParser.GamemodeValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.gamemodeValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGamemodeValues([NotNull] selectorParser.GamemodeValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.entityId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntityId([NotNull] selectorParser.EntityIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.entityId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntityId([NotNull] selectorParser.EntityIdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] selectorParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] selectorParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.selectorTagValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectorTagValue([NotNull] selectorParser.SelectorTagValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.selectorTagValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectorTagValue([NotNull] selectorParser.SelectorTagValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.selectorTeamValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectorTeamValue([NotNull] selectorParser.SelectorTeamValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.selectorTeamValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectorTeamValue([NotNull] selectorParser.SelectorTeamValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.nameValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameValue([NotNull] selectorParser.NameValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.nameValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameValue([NotNull] selectorParser.NameValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.predicateValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateValue([NotNull] selectorParser.PredicateValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.predicateValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateValue([NotNull] selectorParser.PredicateValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.nameSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameSpace([NotNull] selectorParser.NameSpaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.nameSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameSpace([NotNull] selectorParser.NameSpaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.targetObjective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTargetObjective([NotNull] selectorParser.TargetObjectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.targetObjective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTargetObjective([NotNull] selectorParser.TargetObjectiveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.sortValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortValues([NotNull] selectorParser.SortValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.sortValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortValues([NotNull] selectorParser.SortValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.jsonValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsonValue([NotNull] selectorParser.JsonValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.jsonValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsonValue([NotNull] selectorParser.JsonValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.advancementValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdvancementValue([NotNull] selectorParser.AdvancementValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.advancementValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdvancementValue([NotNull] selectorParser.AdvancementValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.scoreParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScoreParameter([NotNull] selectorParser.ScoreParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.scoreParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScoreParameter([NotNull] selectorParser.ScoreParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.scoresValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScoresValue([NotNull] selectorParser.ScoresValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.scoresValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScoresValue([NotNull] selectorParser.ScoresValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.selectorParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectorParameters([NotNull] selectorParser.SelectorParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.selectorParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectorParameters([NotNull] selectorParser.SelectorParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="selectorParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] selectorParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="selectorParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] selectorParser.ParameterContext context);
}
